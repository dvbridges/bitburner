{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":541,\"hp\":27,\"max_hp\":27,\"strength\":171,\"defense\":171,\"dexterity\":171,\"agility\":171,\"charisma\":216,\"intelligence\":0,\"hacking_chance_mult\":1.11459615813105,\"hacking_speed_mult\":1.1263854009236245,\"hacking_money_mult\":1.061520150601,\"hacking_grow_mult\":1.061520150601,\"hacking_exp\":385274338.8890432,\"strength_exp\":80360.78881031199,\"defense_exp\":80360.78881031199,\"dexterity_exp\":80405.1603526071,\"agility_exp\":80405.1603526071,\"charisma_exp\":304500.1190859083,\"intelligence_exp\":0,\"hacking_mult\":1.252248783660235,\"strength_mult\":1.061520150601,\"defense_mult\":1.061520150601,\"dexterity_mult\":1.061520150601,\"agility_mult\":1.061520150601,\"charisma_mult\":1.061520150601,\"hacking_exp_mult\":1.1676721656611,\"strength_exp_mult\":1.1676721656611,\"defense_exp_mult\":1.1676721656611,\"dexterity_exp_mult\":1.1676721656611,\"agility_exp_mult\":1.1676721656611,\"charisma_exp_mult\":1.1676721656611,\"company_rep_mult\":1.061520150601,\"faction_rep_mult\":1.061520150601,\"money\":78666530366.0087,\"city\":\"Sector-12\",\"location\":\"Alpha Enterprises\",\"jobs\":{\"FoodNStuff\":\"Employee\",\"VitaLife\":\"Junior Software Engineer\",\"Four Sigma\":\"Junior Software Engineer\",\"Alpha Enterprises\":\"Business Intern\"},\"companyName\":\"Four Sigma\",\"currentServer\":\"home\",\"purchasedServers\":[\"odin\",\"odin-0\",\"odin-1\",\"odin-2\",\"odin-3\",\"odin-4\",\"odin-5\",\"odin-6\",\"odin-7\",\"odin-8\",\"odin-9\",\"odin-10\",\"odin-11\",\"odin-12\",\"odin-13\",\"odin-14\",\"odin-15\",\"odin-16\",\"odin-17\",\"odin-18\",\"odin-19\",\"odin-20\",\"odin-21\",\"odin-22\",\"odin-23\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":352781.6000025195,\"ram\":64,\"totalMoneyGenerated\":2649060241.2150145,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":344971.00000251416,\"ram\":64,\"totalMoneyGenerated\":2573321795.007544,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":344969.8000025142,\"ram\":64,\"totalMoneyGenerated\":2572197378.318657,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":274378.0000025091,\"ram\":64,\"totalMoneyGenerated\":2043521450.6975641,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":270309.4000024906,\"ram\":64,\"totalMoneyGenerated\":2308832887.391544,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":270303.8000024906,\"ram\":64,\"totalMoneyGenerated\":2481382190.797302,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":270301.60000249057,\"ram\":64,\"totalMoneyGenerated\":2032690334.410946,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":270299.2000024906,\"ram\":64,\"totalMoneyGenerated\":2032683905.5326533,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":270296.8000024906,\"ram\":64,\"totalMoneyGenerated\":2032680103.7217116,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":171088.00000228191,\"ram\":64,\"totalMoneyGenerated\":1665522788.60413,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":171087.6000022819,\"ram\":64,\"totalMoneyGenerated\":1665515000.8174126,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":171087.20000228187,\"ram\":64,\"totalMoneyGenerated\":1665507062.573583,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":141704.20000014632,\"ram\":64,\"totalMoneyGenerated\":1379454490.8635404,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":141703.8000001463,\"ram\":64,\"totalMoneyGenerated\":1379446762.627216,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":141703.60000014625,\"ram\":64,\"totalMoneyGenerated\":1379437098.1351101,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":141683.6000001448,\"ram\":64,\"totalMoneyGenerated\":1379306491.2069073,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":141683.4000001448,\"ram\":64,\"totalMoneyGenerated\":1379300710.8726306,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":141683.20000014477,\"ram\":64,\"totalMoneyGenerated\":1379294921.9174206,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":141668.2000001437,\"ram\":64,\"totalMoneyGenerated\":1379146843.5125508,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":141668.0000001437,\"ram\":64,\"totalMoneyGenerated\":1379158943.1209464,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":141667.80000014364,\"ram\":64,\"totalMoneyGenerated\":1379170198.6154668,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":100879.59999940098,\"ram\":64,\"totalMoneyGenerated\":982072788.0723684,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":100879.39999940096,\"ram\":64,\"totalMoneyGenerated\":982057932.5105661,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":100879.19999940097,\"ram\":64,\"totalMoneyGenerated\":982041575.4634827,\"name\":\"hacknet-node-23\"}}],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"Slum Snakes\",\"Sector-12\",\"Netburners\",\"Tian Di Hui\",\"Tetrads\",\"Aevum\",\"CyberSec\",\"NiteSec\",\"The Black Hand\",\"BitRunners\"],\"factionInvitations\":[],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"}],\"augmentations\":[{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":6,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"}],\"sourceFiles\":[],\"numPeopleKilled\":5,\"karma\":-60.35,\"crime_money_mult\":1.061520150601,\"crime_success_mult\":1.061520150601,\"isWorking\":true,\"focus\":false,\"workType\":\"Working for Faction\",\"workCostMult\":3,\"workExpMult\":2,\"currentWorkFactionName\":\"BitRunners\",\"currentWorkFactionDescription\":\"carrying out hacking contracts\",\"workHackExpGainRate\":0.175150824849165,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0,\"workRepGainRate\":0.5890075912565548,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":1847.3858100143711,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":0,\"workRepGained\":6204.6963316014535,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":25,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":2633400,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":72000000,\"work_money_mult\":1.061520150601,\"hacknet_node_money_mult\":1.061520150601,\"hacknet_node_purchase_cost_mult\":0.9414801494009999,\"hacknet_node_ram_cost_mult\":0.9414801494009999,\"hacknet_node_core_cost_mult\":0.9414801494009999,\"hacknet_node_level_cost_mult\":0.9414801494009999,\"hasWseAccount\":true,\"hasTixApiAccess\":true,\"has4SData\":true,\"has4SDataTixApi\":true,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":1,\"lastUpdate\":1645743705607,\"totalPlaytime\":565725400,\"playtimeSinceLastAug\":353494600,\"playtimeSinceLastBitnode\":565725400,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":-2084003010,\"class\":-34593600,\"codingcontract\":0,\"corporation\":0,\"crime\":691049.6180412511,\"gang\":0,\"hacking\":33069234090.37126,\"hacknet\":41082803883.0076,\"hacknet_expenses\":-12106535528.041765,\"hospitalization\":-22456000,\"infiltration\":0,\"sleeves\":0,\"stock\":35519736714.80553,\"total\":78666529366.0087,\"work\":18528014.20442558,\"servers\":-12437026259.71729,\"other\":-317600000,\"augmentations\":-4022250000}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":-2084003010,\"class\":-36683274.40000004,\"codingcontract\":0,\"corporation\":0,\"crime\":6929049.618041251,\"gang\":0,\"hacking\":40237184724.204666,\"hacknet\":50257968026.445595,\"hacknet_expenses\":-18256157974.89644,\"hospitalization\":-52665451.957396284,\"infiltration\":1531701.4985711244,\"sleeves\":0,\"stock\":30580667854.973072,\"total\":78877727578.02708,\"work\":27579442.304415885,\"servers\":-14394924276.312332,\"other\":-631399587.2910845,\"augmentations\":-6778299663.70588}},\"scriptProdSinceLastAug\":86160735603.63605,\"exploits\":[],\"achievements\":[{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1645178948427},{\"ID\":\"NS2\",\"unlockedOn\":1645180688422},{\"ID\":\"TOR\",\"unlockedOn\":1645192788148},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1645193148154},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1645193988156},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1645201346201},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1645201646188},{\"ID\":\"WORKOUT\",\"unlockedOn\":1645204586189},{\"ID\":\"FROZE\",\"unlockedOn\":1645207110260},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1645218712775},{\"ID\":\"TRAVEL\",\"unlockedOn\":1645218772781},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1645261128514},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1645292693406},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1645292693414},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1645316650399},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1645319346575},{\"ID\":\"4S\",\"unlockedOn\":1645354568255},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1645390232477},{\"ID\":\"NITESEC\",\"unlockedOn\":1645483036483},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1645573210025},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1645730182325}],\"factionWorkType\":\"Faction Hacking Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":2,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":true,\"ip\":\"63.5.0.7\",\"isConnectedTo\":true,\"maxRam\":2048,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"democracy-is-dead.lit\",\"secret-societies.lit\",\"synthetic-muscles.lit\",\"the-failed-frontier.lit\",\"brighter-than-the-sun.lit\",\"the-hidden-world.lit\",\"the-new-god.lit\",\"tensions-in-tech-race.lit\",\"new-triads.lit\",\"simulated-reality.lit\",\"man-and-machine.lit\",\"A-Green-Tomorrow.lit\",\"history-of-synthoids.lit\",\"coded-intelligence.lit\",\"beyond-man.lit\",\"alpha-omega.lit\",\"cost-of-immortality.lit\",\"sector-12-crime.lit\",\"j4.msg\",\"19dfj3l1nd.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"fl1ght.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\",\"DeepscanV1.exe\",\"AutoLink.exe\",\"ServerProfiler.exe\",\"AutoLink.exe\",\"relaySMTP.exe\",\"HTTPWorm.exe\",\"DeepscanV2.exe\",\"SQLInject.exe\"],\"ramUsed\":1040.15,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.4100000000312,\"pid\":1161,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8503.065586934357,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.4100000000312,\"pid\":1162,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[12816464,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10077.70736229256,\"onlineMoneyMade\":12816464,\"onlineRunningTime\":744.4100000000312,\"pid\":1163,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,602]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3914.815931183945,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.2100000000312,\"pid\":1164,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.2100000000312,\"pid\":1165,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2912,2976,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19040.832303167055,\"onlineMoneyMade\":2912,\"onlineRunningTime\":744.2100000000312,\"pid\":1166,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,560]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3641.6892383106465,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.2100000000312,\"pid\":1167,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16504.655869343627,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.2100000000312,\"pid\":1168,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2688,2768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16985.879090120347,\"onlineMoneyMade\":2688,\"onlineRunningTime\":744.2100000000312,\"pid\":1169,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.0100000000311,\"pid\":1170,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.0100000000311,\"pid\":1171,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2608,2320,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18952.38881561045,\"onlineMoneyMade\":2608,\"onlineRunningTime\":744.0100000000311,\"pid\":1172,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.0100000000311,\"pid\":1173,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.0100000000311,\"pid\":1174,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1568,1424,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10070.520189479432,\"onlineMoneyMade\":1568,\"onlineRunningTime\":744.0100000000311,\"pid\":1175,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.0100000000311,\"pid\":1176,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.0100000000311,\"pid\":1177,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2496,1280,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10466.737377262223,\"onlineMoneyMade\":2496,\"onlineRunningTime\":744.0100000000311,\"pid\":1178,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":743.8100000000311,\"pid\":1179,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":743.8100000000311,\"pid\":1180,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[512,400,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4917.294014705765,\"onlineMoneyMade\":512,\"onlineRunningTime\":743.8100000000311,\"pid\":1181,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"stockMarket.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":103.41000000000086,\"pid\":1183,\"ramUsage\":17.1,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"stockMarket.js\",\"url\":\"blob:file:///b15d1dfe-f82a-4fc7-9f1c-877899d922c4\",\"moduleSequenceNumber\":75940}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t\\n\\tvar baseName = ns.args[0]\\n\\tvar botCount = ns.args[1]\\n\\tvar ram = 1024\\n\\n\\tfor (let i = 0; i < botCount; i++) {\\n\\t\\tlet botName = baseName\\n\\t\\tawait ns.purchaseServer(botName, ram)\\n\\t}\\n}\",\"filename\":\"setupBotnet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"setupBotnet.js\",\"url\":\"blob:file:///4178c3cb-848a-4749-a975-c692216119a2\",\"moduleSequenceNumber\":3979}],\"dependents\":[],\"ramUsage\":3.85,\"server\":\"home\",\"moduleSequenceNumber\":398,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push('home')\\n\\n\\tvar blockedServers = ns.getPurchasedServers()\\n\\tblockedServers.push(\\\"darkweb\\\")\\n\\tblockedServers.push(\\\"home\\\")\\n\\n\\tvar servers = ns.scan(ns.getHostname());\\n\\tvar hackFiles = [\\\"weaken.script\\\", \\\"grow.script\\\", \\\"hacker.script\\\", \\\"deployHack.script\\\"]\\n\\n\\tservers = servers.filter(s => !blockedServers.includes(s))\\n\\n\\t// Copy all hack files to servers\\n\\tfor (let eachServer in ownedServers) {\\n\\t\\tlet current = ownedServers[eachServer]\\n\\t\\tif (current != 'home') {\\n\\t\\t\\tawait ns.scp(hackFiles, 'home', current)\\n\\t\\t}\\n\\t}\\n\\n\\t// Deploy the hack files at each of the servers\\n\\tfor (let eachServer in ownedServers) {\\n\\t\\tlet currentServer = ownedServers[eachServer]\\n\\t\\tfor (let eachTarget in servers) {\\n\\t\\t\\tlet currentTarget = servers[eachTarget]\\n\\t\\t\\tif (!blockedServers.includes(currentTarget)) {\\n\\t\\t\\t\\tns.print(\\\"deploying botnet: \\\", currentServer)\\n\\t\\t\\t\\t// await ns.exec(\\\"deployHack.script\\\", \\\"home\\\", 6, currentServer, currentTarget, 3, 12, 4)\\n\\t\\t\\n\\t\\t\\t\\tlet weaken = 14\\n\\t\\t\\t\\tlet grow = 47\\n\\t\\t\\t\\tlet hack = 16\\n\\n\\t\\t\\t\\tawait ns.exec(\\\"weaken.script\\\", currentServer, weaken, currentTarget)\\n\\t\\t\\t\\tawait ns.exec(\\\"grow.script\\\", currentServer, grow, currentTarget)\\n\\t\\t\\t\\tawait ns.exec(\\\"hacker.script\\\", currentServer, hack, currentTarget)\\n\\t\\t\\t\\tawait ns.sleep(5)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"deployBotnet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"deployBotnet.js\",\"url\":\"blob:file:///26a55e9d-864e-4cfc-8230-07ea7bd16817\",\"moduleSequenceNumber\":95045}],\"dependents\":[],\"ramUsage\":6.4,\"server\":\"home\",\"moduleSequenceNumber\":96238,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet servers = ns.getPurchasedServers()\\n\\tns.exit()\\n\\tfor (let s in servers) {\\n\\t\\tlet current = servers[s]\\n\\t\\tns.deleteServer(current)\\n\\t}\\n}\",\"filename\":\"deleteServer.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"deleteServer.js\",\"url\":\"blob:file:///f7286121-4b25-4b24-8361-01e348fbbe71\",\"moduleSequenceNumber\":3978}],\"dependents\":[],\"ramUsage\":6.1,\"server\":\"home\",\"moduleSequenceNumber\":400,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push('home')\\n\\tfor (let eachBot in ownedServers) {\\n\\t\\tlet currentBot = ownedServers[eachBot]\\n\\t\\tns.killall(currentBot)\\n\\t}\\n}\",\"filename\":\"killBotnet.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"killBotnet.js\",\"url\":\"blob:file:///645681bd-4f34-4f5d-9076-052be57a27de\",\"moduleSequenceNumber\":95044}],\"dependents\":[],\"ramUsage\":4.35,\"server\":\"home\",\"moduleSequenceNumber\":95044,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog(\\\"ALL\\\")\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\tvar currentServer\\n\\tstack.push(ns.getHostname())\\n\\tvar portHackers = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe', 'SQLInject.exe']\\n\\tvar hackablePorts = ns.ls(\\\"home\\\", \\\".exe\\\").filter(a => portHackers.includes(a))\\n\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tns.tprint(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// open ports\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tns.tprint(\\\"opening ports on \\\", currentTarget)\\n\\t\\tif (ns.fileExists(portHackers[0], 'home')) {\\n\\t\\t\\tns.brutessh(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[1], 'home')) {\\n\\t\\t\\tns.ftpcrack(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[2], 'home')) {\\n\\t\\t\\tns.relaysmtp(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[3], 'home')) {\\n\\t\\t\\tns.httpworm(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[4], 'home')) {\\n\\t\\t\\tns.sqlinject(currentTarget)\\n\\t\\t}\\n\\t}\\n\\n\\t// get root access\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tlet nPorts = ns.getServerNumPortsRequired(currentTarget);\\n\\t\\t// check if we can run nuke \\n\\t\\tif (nPorts <= hackablePorts.length) {\\n\\t\\t\\tns.tprint(\\\"running nuke on \\\", currentTarget)\\n\\t\\t\\tif (ns.fileExists(\\\"NUKE.exe\\\", 'home')) {\\n\\t\\t\\t\\tns.nuke(currentTarget)\\n\\t\\t\\t}\\t\\n\\t\\t}\\t\\n\\t}\\n}\",\"filename\":\"walkNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"walkNodes.js\",\"url\":\"blob:file:///0f65f0ff-31d4-455a-b9ac-44917dd5beb5\",\"moduleSequenceNumber\":179447}],\"dependents\":[],\"ramUsage\":4.8,\"server\":\"home\",\"moduleSequenceNumber\":402,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":403,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":404,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"home\",\"moduleSequenceNumber\":405,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":406,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\ttargetName = args[0]\\n\\n\\tweakenThreads = 1\\n\\tgrowThreads = 1\\n\\thackThreads = 1\\n\\n\\twhile (ns.getServerRequiredHackingLevel(targetName) > ns.getHackingLevel()) {\\n\\t\\tawait ns.sleep(5000)\\n\\t}\\n\\t\\n\\tns.exec(\\\"weaken.script\\\", targetName, weakenThreads, targetName)\\n\\tns.exec(\\\"grow.script\\\", targetName, growThreads, targetName)\\n\\tns.exec(\\\"hacker.script\\\", targetName, hackThreads, targetName)\\n}\",\"filename\":\"test.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.05,\"server\":\"home\",\"moduleSequenceNumber\":407,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog(\\\"ALL\\\")\\n\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar deployStack = []\\n\\tvar currentServer\\n\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\townedServers.push(\\\"home\\\")\\n\\n\\tvar hackFiles = [\\\"weaken.script\\\", \\\"grow.script\\\", \\\"hacker.script\\\", \\\"deployHack.script\\\"]\\n\\tvar portHackers = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe', 'SQLInject.exe']\\n\\n\\tstack.push(ns.getHostname())\\n\\t\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\t// ns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// copy over hack files\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\t// ns.print(\\\"copying hacker files to \\\", currentTarget)\\n\\t\\tawait ns.scp(hackFiles, \\\"home\\\", currentTarget)\\n\\t}\\n\\n\\t// start hacks from each node\\n\\tfor (let each in visited) {\\n\\t\\tcurrentServer = visited[each]\\n\\t\\tdeployStack.push(...ns.scan(currentServer))\\n\\t\\t\\n\\t\\t// Remove out of level and unopned port nodes, and owned nodes\\n\\t\\tvar removeNodes = []\\n\\t\\tfor (let each in deployStack) {\\n\\t\\t\\tlet currentTarget = deployStack[each]\\n\\t\\t\\tlet hackable = (ns.getServerRequiredHackingLevel(currentTarget) <= ns.getHackingLevel())\\n\\t\\t\\tlet portsOpened = (ns.getServerNumPortsRequired(currentTarget) <= portHackers.length)\\n\\t\\t\\tlet ownedServer = ownedServers.includes(currentTarget)\\n\\t\\t\\tlet haveNoRam = (ns.getServerMaxRam(currentTarget) < 1)\\n\\t\\t\\tif (!hackable || !portsOpened || ownedServer || haveNoRam) {\\n\\t\\t\\t\\tremoveNodes.push(currentTarget)\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// remove unwanted nodes\\n\\t\\tdeployStack = deployStack.filter(node => !removeNodes.includes(node))\\n\\t\\tvar copyStack =  [...deployStack]\\n\\t\\tvar totalServers = deployStack.length\\n\\n\\t\\twhile (deployStack.length > 0) {\\n\\t\\t\\tlet currentTarget = deployStack.pop()\\t\\t\\t\\n\\t\\t\\t// calculate Ram per server\\n\\t\\t\\tlet serverRam = ns.getServerMaxRam(currentServer)\\n\\t\\t\\tlet availableRam = parseFloat(serverRam) / totalServers\\n\\t\\t\\t\\n\\t\\t\\tns.tprint(\\\"server \\\", currentServer)\\n\\t\\t\\tns.tprint(\\\"target \\\", currentTarget)\\n\\t\\t\\tns.tprint(\\\"server ram \\\", serverRam)\\n\\t\\t\\tns.tprint(\\\"Available ram \\\", availableRam)\\n\\t\\t\\tns.tprint(\\\"n servers \\\", totalServers)\\n\\t\\t\\tns.tprint(\\\"targets \\\", copyStack)\\n\\n\\t\\t\\t// calculate how many threads can be run per hack type\\n\\t\\t\\tlet threads = calculateThreads(ns, availableRam)\\n\\t\\t\\tlet totalThreads = threads.reduce((a, b) => a + b, 0)\\n\\n\\t\\t\\tns.tprint(\\\"Allowed threads: \\\", threads)\\n\\t\\t\\tns.tprint(currentServer, \\\" \\\", currentTarget)\\n\\t\\n\\t\\t\\tawait ns.exec(\\\"deployHack.script\\\", \\\"home\\\", totalThreads, currentServer, currentTarget, threads[0], threads[1], threads[2])\\n\\t\\t\\tawait ns.sleep(200)\\t\\n\\t\\t}\\t\\n\\t}\\n\\tns.enableLog(\\\"ALL\\\")\\n}\\n\\nfunction calculateThreads(ns, serverRam) {\\n\\tvar weaken = 1.95 \\n\\tvar grow = 1.95 \\n\\tvar hack = 1.70\\n\\n\\tvar modifier1 = parseFloat((parseFloat(2)/16).toFixed(3))\\n\\tvar modifier2 = parseFloat((parseFloat(10)/16).toFixed(3))\\n\\tvar modifier3 = parseFloat((parseFloat(4)/16).toFixed(3))\\n\\n\\tvar sumOf = weaken + grow + hack\\n\\tvar freeRam = serverRam\\n\\tvar threads = [1, 1, 1]\\n\\t\\n\\tfor (let i = 0; i < 1000; i++) {\\t\\t\\n\\t\\tlet t1 = (threads[0] + modifier1)\\n\\t\\tlet t2 = (threads[1] + modifier2)\\n\\t\\tlet t3 = (threads[2] + modifier3)\\n\\n \\t\\tlet w = weaken * (t1).toFixed(0)\\n\\t\\tlet g = grow * (t2).toFixed(0)\\n\\t\\tlet h = hack * (t3).toFixed(0)\\n\\t\\t\\n\\t\\tsumOf = w + g + h\\n\\t\\t\\n\\t\\tif (sumOf < freeRam) {\\n\\t\\t\\tthreads[0] = t1\\n\\t\\t\\tthreads[1] = t2\\n\\t\\t\\tthreads[2] = t3\\n\\t\\t} else {\\n\\t\\t\\treturn [\\n\\t\\t\\t\\tparseInt(threads[0].toFixed(0)),\\n\\t\\t\\t\\tparseInt(threads[1].toFixed(0)),\\n\\t\\t\\t\\tparseInt(threads[2].toFixed(0))]\\n\\t\\t}\\n\\t}\\n\\treturn threads\\n}\",\"filename\":\"deployToNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"deployToNodes.js\",\"url\":\"blob:file:///e3570029-3df1-49d8-bccd-718e48f76650\",\"moduleSequenceNumber\":181042}],\"dependents\":[],\"ramUsage\":6.7,\"server\":\"home\",\"moduleSequenceNumber\":408,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\tvar currentServer\\n\\tstack.push(ns.getHostname())\\n\\tvar portHackers = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe']\\n\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// open ports\\n\\townedServers.push(\\\"home\\\")\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tif (!ownedServers.includes(currentTarget)) {\\n\\t\\t\\tns.killall(currentTarget)\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"killNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"killNodes.js\",\"url\":\"blob:file:///55b6fe30-6d96-4912-9891-ce156d7b5116\",\"moduleSequenceNumber\":5147}],\"dependents\":[],\"ramUsage\":4.6,\"server\":\"home\",\"moduleSequenceNumber\":409,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    ns.print(\\\"hello\\\")\\r\\n}\",\"filename\":\"test-vscode.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":410,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog(\\\"ALL\\\")\\n\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar currentServer\\n\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\townedServers.push(\\\"home\\\")\\n\\t\\n\\tstack.push(ns.getHostname())\\n\\t\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// copy over lit files\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tlet files = ns.ls(currentTarget)\\n\\t\\tlet validFiles = files.filter(f => f.endsWith(\\\".lit\\\")) \\n\\t\\tfor (let file in validFiles) {\\n\\t\\t\\tlet currentFile = validFiles[file]\\n\\t\\t\\tns.tprint(currentFile, \\\" \\\", currentTarget)\\n\\t\\t\\tawait ns.scp(currentFile, currentTarget, \\\"home\\\")\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"getLit.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"getLit.js\",\"url\":\"blob:file:///7287c303-642b-41e8-abb5-a4895c344622\",\"moduleSequenceNumber\":3175}],\"dependents\":[],\"ramUsage\":4.9,\"server\":\"home\",\"moduleSequenceNumber\":101409,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\tvar currentServer\\n\\tstack.push(ns.getHostname())\\n\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"scanNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"scanNodes.js\",\"url\":\"blob:file:///35e54f48-e8cc-45d2-9623-da46449e4575\",\"moduleSequenceNumber\":135}],\"dependents\":[],\"ramUsage\":4.1,\"server\":\"home\",\"moduleSequenceNumber\":412,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog(\\\"sleep\\\")\\n\\tlet all = ns.stock.getSymbols()\\n\\tlet stocks = []\\n\\n\\tvar maxStocks = 100000\\n\\t\\n\\tfor (let i = 0; i < 10000000; i++) {\\n\\t\\tfor (let each in all) {\\n\\t\\t\\tlet current = all[each]\\n\\t\\t\\tlet sym = {}\\n\\t\\t\\tsym[\\\"symbol\\\"] = current\\n\\t\\t\\tsym[\\\"forecast\\\"] = ns.stock.getForecast(current)\\t\\n\\t\\t\\tsym[\\\"price\\\"] = ns.stock.getPrice(current)\\n\\t\\t\\tsym[\\\"count\\\"] = ns.stock.getPosition(current)[0]\\n\\t\\t\\tstocks.push(sym)\\n\\t\\t}\\n\\n\\t\\tfor (let each in stocks) {\\n\\t\\t\\tlet stk = stocks[each]\\n\\t\\t\\t// Check if the stocks are ready to buy\\n\\t\\t\\tif (stk[\\\"count\\\"] == 0) {\\n\\t\\t\\t\\tif (stk[\\\"forecast\\\"] > .6) {\\n\\t\\t\\t\\t\\tns.print(\\\"buying stock in \\\", stk[\\\"symbol\\\"])\\n\\t\\t\\t\\t\\tns.stock.buy(stk[\\\"symbol\\\"], maxStocks)\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Check stock movement\\n\\t\\t\\tif (stk[\\\"count\\\"] > 0) {\\n\\t\\t\\t\\t// Get direction\\n\\t\\t\\t\\tif (stk[\\\"forecast\\\"] < .6) {\\n\\t\\t\\t\\t\\tns.print(\\\"selling stock in \\\", stk[\\\"symbol\\\"])\\n\\t\\t\\t\\t\\tns.print(\\\"predicted profit - Long - \\\", ns.stock.getSaleGain(stk[\\\"symbol\\\"], maxStocks, \\\"Long\\\"))\\n\\t\\t\\t\\t\\tns.stock.sell(stk[\\\"symbol\\\"], maxStocks)\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tstocks = []\\n\\n\\t\\tawait ns.sleep(3000)\\n\\t}\\n\\n\\t// Other things to consinder\\n\\t// ns.codingcontract\\n}\",\"filename\":\"stockMarket.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"stockMarket.js\",\"url\":\"blob:file:///abac65e1-99ee-46df-9b64-1f2078bd751e\",\"moduleSequenceNumber\":103000}],\"dependents\":[],\"ramUsage\":17.1,\"server\":\"home\",\"moduleSequenceNumber\":103000,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getSaleGain\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t// Start walk from home\\n\\tvar target = ns.args[0]\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")\\n\\n\\tvar startNode = \\\"home\\\"\\n\\tvar visited = []\\n\\tvar path = []\\n\\tvar stack = []\\n\\tstack.push(startNode)\\n\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tlet currentServer = stack.pop()\\n\\t\\t\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tpath.push(currentServer)\\n\\t\\t\\tlet nextStack = ns.scan(currentServer)\\n\\t\\t\\t\\n\\t\\t\\tif (nextStack.includes(target)) {\\n\\t\\t\\t\\tstack = []\\n\\t\\t\\t\\tpath.push(target)\\n\\t\\t\\t\\tcontinue\\n\\t\\t\\t} \\n\\t\\t\\tstack.push(...nextStack)\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\tns.tprint(\\\"Path to \\\", target, \\\": \\\", path)\\n}\",\"filename\":\"findPathToNode.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"findPathToNode.js\",\"url\":\"blob:file:///f40d5766-3d91-4970-aeab-d19e78ce79ba\",\"moduleSequenceNumber\":91859}],\"dependents\":[],\"ramUsage\":4.05,\"server\":\"home\",\"moduleSequenceNumber\":93453,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"odin\",\"odin-0\",\"odin-1\",\"odin-2\",\"odin-3\",\"odin-4\",\"odin-5\",\"odin-6\",\"odin-7\",\"odin-8\",\"odin-9\",\"odin-10\",\"odin-11\",\"odin-12\",\"odin-13\",\"odin-14\",\"odin-15\",\"odin-16\",\"odin-17\",\"odin-18\",\"odin-19\",\"odin-20\",\"odin-21\",\"odin-22\",\"odin-23\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"readme.txt\",\"text\":\"Exposing servers on network\\r\\n---------------------------\\r\\n\\r\\nFirst, open ports on all accessible servers, note to add any additional .exe files as requires\\r\\n$ walkNodes.js\\r\\n\\r\\nNext, we want to set up our botnet. However, we want to do several things\\r\\n\\r\\nGet each node to hack available servers\\r\\nEach node must calculate how much RAM it has, and how many threads can be Running\\r\\nReceive a hack script which calculates when to weaken, grow and hack\\r\\nNumber of threads determined by RAM\\r\\nThe total RAM cost can be calculated by simply multiplying the base RAM cost of the script with the number of threads\\r\\n1) write the hack script\\r\\n2) calculate its ram usage\\r\\n3) calculate how many threads each function (grow etc) should use, relative to RAM available\\r\\n4) calculate cost to run for each available servers\\r\\n5) combine cost so that all servers can be hacked, based on RAM available\\r\\n\\r\\nRunning a Botnet\\r\\n----------------\\r\\n\\r\\nTo purchase a botnet army of size N, where each will be called 'odin_N'\\r\\n$ setupBotnet.js N \\r\\n\\r\\nTo deploy botnet using N threads\\r\\n$ deployBotnet.js N\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1.002,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"33.5.0.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"ecorp\",\"moduleSequenceNumber\":415,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"ecorp\",\"moduleSequenceNumber\":416,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"ecorp\",\"moduleSequenceNumber\":417,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"ecorp\",\"moduleSequenceNumber\":418,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":46814868507,\"moneyMax\":1170371712675,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1391,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"44.7.6.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"megacorp\",\"moduleSequenceNumber\":419,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"megacorp\",\"moduleSequenceNumber\":420,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"megacorp\",\"moduleSequenceNumber\":421,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"megacorp\",\"moduleSequenceNumber\":422,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":59209134677,\"moneyMax\":1480228366925,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1232,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"97.4.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"b-and-a\",\"moduleSequenceNumber\":423,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"b-and-a\",\"moduleSequenceNumber\":424,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"b-and-a\",\"moduleSequenceNumber\":425,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"b-and-a\",\"moduleSequenceNumber\":426,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"4sigma\",\"ecorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":23609893927,\"moneyMax\":590247348175,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1119,\"serverGrowth\":80}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-968100.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,0,10,0,3,0,5,5,4,8],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"65.6.1.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"blade\",\"moduleSequenceNumber\":427,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"blade\",\"moduleSequenceNumber\":428,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"blade\",\"moduleSequenceNumber\":429,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"blade\",\"moduleSequenceNumber\":430,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnitek\",\"megacorp\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":38441237744,\"moneyMax\":961030943600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1067,\"serverGrowth\":60}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"41.5.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nwo\",\"moduleSequenceNumber\":431,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nwo\",\"moduleSequenceNumber\":432,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nwo\",\"moduleSequenceNumber\":433,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"nwo\",\"moduleSequenceNumber\":434,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\".\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":35519516090,\"moneyMax\":887987902250,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1094,\"serverGrowth\":78}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"71.2.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"clarkinc\",\"moduleSequenceNumber\":435,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"clarkinc\",\"moduleSequenceNumber\":436,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"clarkinc\",\"moduleSequenceNumber\":437,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"clarkinc\",\"moduleSequenceNumber\":438,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":50,\"minDifficulty\":17,\"moneyAvailable\":18595327536,\"moneyMax\":464883188400,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1154,\"serverGrowth\":63}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"77.6.5.0\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnitek\",\"moduleSequenceNumber\":439,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnitek\",\"moduleSequenceNumber\":440,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omnitek\",\"moduleSequenceNumber\":441,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"omnitek\",\"moduleSequenceNumber\":442,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"fulcrumtech\",\"blade\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":16122030693,\"moneyMax\":403050767325,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":905,\"serverGrowth\":98}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-132450.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[2,[46,26,22,158,195,11,172,191,45,44,9]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"29.9.9.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"4sigma\",\"moduleSequenceNumber\":443,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"4sigma\",\"moduleSequenceNumber\":444,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"4sigma\",\"moduleSequenceNumber\":445,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"4sigma\",\"moduleSequenceNumber\":446,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"helios\",\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":21878321258,\"moneyMax\":546958031450,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1172,\"serverGrowth\":85}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-601398-Sector-12.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[8,-3,3,4,4,8,-8,-4,-7,-3,5,7,-5,0,5,-5,-7,-6,-2,-10,8,-6,10,0,-8,6,-3,9,-4,-9,-3,7,-4,-4,-1,4,-10,6,-2,-8],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-219871.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[64,157,43,134,37,126,1,14,90,120,19,185,25,184,25,141,38,118,158,95,178,34,59,150,42,20,119,112,141,144,179],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-935639-VitaLife.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[199,103,110,49,140,13,95,18,42,193,8,121,181,64,15,46,119,35,10,136,175,149,168,102],\"reward\":{\"name\":\"VitaLife\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"57.4.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":447,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":448,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":449,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":450,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":22063742406,\"moneyMax\":551593560150,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1287,\"serverGrowth\":91}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"85.0.5.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":451,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":452,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":453,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":454,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":1515329495,\"moneyMax\":37883237375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1119,\"serverGrowth\":85}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-858349-FoodNStuff.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"72690751390\",0],\"reward\":{\"name\":\"FoodNStuff\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"18.3.4.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":455,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":456,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":457,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":458,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1218,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"24.5.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"stormtech\",\"moduleSequenceNumber\":459,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"stormtech\",\"moduleSequenceNumber\":460,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"stormtech\",\"moduleSequenceNumber\":461,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"stormtech\",\"moduleSequenceNumber\":462,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":1142805160,\"moneyMax\":28570129000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1047,\"serverGrowth\":72}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"45.8.1.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"defcomm\",\"moduleSequenceNumber\":463,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"defcomm\",\"moduleSequenceNumber\":464,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"defcomm\",\"moduleSequenceNumber\":465,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"defcomm\",\"moduleSequenceNumber\":466,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":831280811,\"moneyMax\":20782020275,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":901,\"serverGrowth\":61}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-457006.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,1,5,0,0,4,9,4,9,0,9,10,0,0,10,10],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"77.1.3.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"infocomm\",\"moduleSequenceNumber\":467,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"infocomm\",\"moduleSequenceNumber\":468,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"infocomm\",\"moduleSequenceNumber\":469,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"infocomm\",\"moduleSequenceNumber\":470,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":687102481,\"moneyMax\":17177562025,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":888,\"serverGrowth\":47}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"80.8.9.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"helios\",\"moduleSequenceNumber\":471,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"helios\",\"moduleSequenceNumber\":472,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"helios\",\"moduleSequenceNumber\":473,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"helios\",\"moduleSequenceNumber\":474,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"microdyne\",\"4sigma\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":717952687,\"moneyMax\":17948817175,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":811,\"serverGrowth\":74}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"62.3.6.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"vitalife\",\"moduleSequenceNumber\":475,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"vitalife\",\"moduleSequenceNumber\":476,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"vitalife\",\"moduleSequenceNumber\":477,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"vitalife\",\"moduleSequenceNumber\":478,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"run4theh111z\",\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":718186347,\"moneyMax\":17954658675,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":802,\"serverGrowth\":62}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"31.8.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"icarus\",\"moduleSequenceNumber\":479,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"icarus\",\"moduleSequenceNumber\":480,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"icarus\",\"moduleSequenceNumber\":481,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"icarus\",\"moduleSequenceNumber\":482,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"unitalife\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":951540387,\"moneyMax\":23788509675,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":912,\"serverGrowth\":95}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"41.1.0.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"univ-energy\",\"moduleSequenceNumber\":483,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"univ-energy\",\"moduleSequenceNumber\":484,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"univ-energy\",\"moduleSequenceNumber\":485,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"univ-energy\",\"moduleSequenceNumber\":486,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1195323089,\"moneyMax\":29883077225,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":839,\"serverGrowth\":90}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"76.9.3.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"titan-labs\",\"moduleSequenceNumber\":487,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"titan-labs\",\"moduleSequenceNumber\":488,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"titan-labs\",\"moduleSequenceNumber\":489,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"titan-labs\",\"moduleSequenceNumber\":490,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"taiyang-digital\",\"stormtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":855716075,\"moneyMax\":21392901875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":847,\"serverGrowth\":63}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"66.0.3.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"microdyne\",\"moduleSequenceNumber\":491,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"microdyne\",\"moduleSequenceNumber\":492,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"microdyne\",\"moduleSequenceNumber\":493,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"microdyne\",\"moduleSequenceNumber\":494,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nova-med\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":596734583,\"moneyMax\":14918364575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":840,\"serverGrowth\":86}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"14.7.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":495,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":496,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":497,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":498,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zeus-med\",\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":843034008,\"moneyMax\":21075850200,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":902,\"serverGrowth\":79}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-879168.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(())(()\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"74.0.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":499,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":500,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":501,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":502,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"rho-construction\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":821553154,\"moneyMax\":20538828850,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":862,\"serverGrowth\":77}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"45.9.8.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aerocorp\",\"moduleSequenceNumber\":503,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aerocorp\",\"moduleSequenceNumber\":504,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"aerocorp\",\"moduleSequenceNumber\":505,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"aerocorp\",\"moduleSequenceNumber\":506,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"millenium-fitness\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":1173075193,\"moneyMax\":29326879825,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":852,\"serverGrowth\":64}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"62.8.6.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnia\",\"moduleSequenceNumber\":507,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnia\",\"moduleSequenceNumber\":508,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omnia\",\"moduleSequenceNumber\":509,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"omnia\",\"moduleSequenceNumber\":510,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"global-pharm\",\"defcomm\",\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":988517663,\"moneyMax\":24712941575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":887,\"serverGrowth\":67}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-531997.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[3],[9,3],[6,6,6],[5,6,2,8],[4,1,4,1,9]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"90.4.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-def\",\"moduleSequenceNumber\":511,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-def\",\"moduleSequenceNumber\":512,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zb-def\",\"moduleSequenceNumber\":513,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zb-def\",\"moduleSequenceNumber\":514,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"icarus\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":948059693,\"moneyMax\":23701492325,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":795,\"serverGrowth\":73}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"26.6.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":515,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":516,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":517,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":518,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nova-med\",\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":813696226,\"moneyMax\":20342405650,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":782,\"serverGrowth\":73}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-494375.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[15,179,2,180,108,4,85,122,124,27,33,169,6,136,99,143,19,30,186,181,191,88,168,98,115,21,133,84,105,123,162,65,45,116,13,55,171,172,1,65,151],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"25.3.5.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"solaris\",\"moduleSequenceNumber\":519,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"solaris\",\"moduleSequenceNumber\":520,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"solaris\",\"moduleSequenceNumber\":521,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"solaris\",\"moduleSequenceNumber\":522,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"deltaone\",\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":739815020,\"moneyMax\":18495375500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":823,\"serverGrowth\":80}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"30.0.9.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"deltaone\",\"moduleSequenceNumber\":523,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"deltaone\",\"moduleSequenceNumber\":524,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"deltaone\",\"moduleSequenceNumber\":525,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"deltaone\",\"moduleSequenceNumber\":526,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"galactic-cyber\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":1455837033,\"moneyMax\":36395925825,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":815,\"serverGrowth\":62}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"30.1.2.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"global-pharm\",\"moduleSequenceNumber\":527,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"global-pharm\",\"moduleSequenceNumber\":528,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"global-pharm\",\"moduleSequenceNumber\":529,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"global-pharm\",\"moduleSequenceNumber\":530,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"millenium-fitness\",\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1744782662,\"moneyMax\":43619566550,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":802,\"serverGrowth\":88}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"89.2.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nova-med\",\"moduleSequenceNumber\":531,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nova-med\",\"moduleSequenceNumber\":532,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nova-med\",\"moduleSequenceNumber\":533,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"nova-med\",\"moduleSequenceNumber\":534,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zeus-med\",\"microdyne\",\"applied-energetics\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1249635245,\"moneyMax\":31240881125,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":791,\"serverGrowth\":77}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"9.7.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zeus-med\",\"moduleSequenceNumber\":535,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zeus-med\",\"moduleSequenceNumber\":536,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zeus-med\",\"moduleSequenceNumber\":537,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zeus-med\",\"moduleSequenceNumber\":538,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":1353435682,\"moneyMax\":33835892050,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":802,\"serverGrowth\":70}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"45.1.6.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"unitalife\",\"moduleSequenceNumber\":539,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"unitalife\",\"moduleSequenceNumber\":540,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"unitalife\",\"moduleSequenceNumber\":541,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"unitalife\",\"moduleSequenceNumber\":542,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"aerocorp\",\"icarus\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1099379380,\"moneyMax\":27484484500,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":807,\"serverGrowth\":75}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"91.8.1.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":543,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":544,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":545,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":546,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":739435794,\"moneyMax\":18485894850,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":673,\"serverGrowth\":63}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"83.7.3.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rho-construction\",\"moduleSequenceNumber\":547,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rho-construction\",\"moduleSequenceNumber\":548,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"rho-construction\",\"moduleSequenceNumber\":549,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"rho-construction\",\"moduleSequenceNumber\":550,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":574695581,\"moneyMax\":14367389525,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":481,\"serverGrowth\":45}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"33.3.1.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":551,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":552,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":553,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":554,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":52,\"minDifficulty\":17,\"moneyAvailable\":663047938,\"moneyMax\":16576198450,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":561,\"serverGrowth\":53}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"27.2.9.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aevum-police\",\"moduleSequenceNumber\":555,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aevum-police\",\"moduleSequenceNumber\":556,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"aevum-police\",\"moduleSequenceNumber\":557,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"aevum-police\",\"moduleSequenceNumber\":558,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":232476560,\"moneyMax\":5811914000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":436,\"serverGrowth\":36}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-66104.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[45,23,8],[13,16,38],[17,8,23],[22,1,12],[47,7,41],[6,2,19],[24,20,15],[28,27,27],[8,15,8],[37,28,6],[49,36,12],[29,37,28]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-772372-FoodNStuff.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[104,155,39,34,182,37,37,2,163,143,156,159,124,13,173,14,52,176,98,124,105,79,160,29,164,191],\"reward\":{\"name\":\"FoodNStuff\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"61.6.5.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":559,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":560,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":561,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":562,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"the-hub\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":245002764,\"moneyMax\":6125069100,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":371,\"serverGrowth\":45}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"63.5.6.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-institute\",\"moduleSequenceNumber\":563,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-institute\",\"moduleSequenceNumber\":564,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zb-institute\",\"moduleSequenceNumber\":565,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zb-institute\",\"moduleSequenceNumber\":566,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":838545105,\"moneyMax\":20963627625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":767,\"serverGrowth\":78}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"94.6.1.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"summit-uni\",\"moduleSequenceNumber\":567,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"summit-uni\",\"moduleSequenceNumber\":568,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"summit-uni\",\"moduleSequenceNumber\":569,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"summit-uni\",\"moduleSequenceNumber\":570,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":45,\"minDifficulty\":15,\"moneyAvailable\":346661906,\"moneyMax\":8666547650,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":461,\"serverGrowth\":56}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"67.6.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"syscore\",\"moduleSequenceNumber\":571,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"syscore\",\"moduleSequenceNumber\":572,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"syscore\",\"moduleSequenceNumber\":573,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"syscore\",\"moduleSequenceNumber\":574,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":417952270,\"moneyMax\":10448806750,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":563,\"serverGrowth\":68}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-278474.cct\",\"type\":\"Array Jumping Game\",\"data\":[4,0,8,2],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"2.4.0.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"catalyst\",\"moduleSequenceNumber\":575,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"catalyst\",\"moduleSequenceNumber\":576,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"catalyst\",\"moduleSequenceNumber\":577,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"catalyst\",\"moduleSequenceNumber\":578,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":502297104,\"moneyMax\":12557427600,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":431,\"serverGrowth\":27}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"59.0.9.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":7.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,0,130]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1943.969594310879,\"offlineMoneyMade\":0,\"offlineRunningTime\":221659.887,\"onlineExpGained\":1938.3332916666147,\"onlineMoneyMade\":0,\"onlineRunningTime\":53183.609999788525,\"pid\":22,\"ramUsage\":1.95,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,326,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5329.254630787728,\"offlineMoneyMade\":0,\"offlineRunningTime\":221660.054,\"onlineExpGained\":4860.743485256277,\"onlineMoneyMade\":0,\"onlineRunningTime\":53183.609999788525,\"pid\":23,\"ramUsage\":1.95,\"server\":\"the-hub\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[22728214,350,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8294.165138739081,\"offlineMoneyMade\":0,\"offlineRunningTime\":221660.18600000002,\"onlineExpGained\":5923.099231650534,\"onlineMoneyMade\":22728214,\"onlineRunningTime\":53183.40999978853,\"pid\":24,\"ramUsage\":1.7,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"the-hub\",\"moduleSequenceNumber\":579,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"the-hub\",\"moduleSequenceNumber\":580,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"the-hub\",\"moduleSequenceNumber\":581,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"the-hub\",\"moduleSequenceNumber\":582,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omega-net\",\"rothman-uni\",\"zb-institute\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":43,\"hackDifficulty\":43,\"minDifficulty\":14,\"moneyAvailable\":182041176,\"moneyMax\":4551029400,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":304,\"serverGrowth\":47}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":true,\"ip\":\"17.8.8.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"comptek\",\"moduleSequenceNumber\":583,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"comptek\",\"moduleSequenceNumber\":584,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"comptek\",\"moduleSequenceNumber\":585,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"comptek\",\"moduleSequenceNumber\":586,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"silver-helix\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":236889903,\"moneyMax\":5922247575,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":387,\"serverGrowth\":57}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"27.1.0.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,0,441]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8920.50333454816,\"offlineMoneyMade\":0,\"offlineRunningTime\":221660.32,\"onlineExpGained\":5957.490825508915,\"onlineMoneyMade\":0,\"onlineRunningTime\":53183.20999978853,\"pid\":25,\"ramUsage\":1.95,\"server\":\"netlink\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,3519,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39316.60494492237,\"offlineMoneyMade\":0,\"offlineRunningTime\":221660.45899999997,\"onlineExpGained\":47538.345158652315,\"onlineMoneyMade\":0,\"onlineRunningTime\":53183.20999978853,\"pid\":26,\"ramUsage\":1.95,\"server\":\"netlink\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[150305820,4080,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":42143.96207984513,\"offlineMoneyMade\":0,\"offlineRunningTime\":221660.61299999998,\"onlineExpGained\":58467.16619683005,\"onlineMoneyMade\":150305820,\"onlineRunningTime\":53183.00999978853,\"pid\":27,\"ramUsage\":1.7,\"server\":\"netlink\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"netlink\",\"moduleSequenceNumber\":587,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"netlink\",\"moduleSequenceNumber\":588,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"netlink\",\"moduleSequenceNumber\":589,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"netlink\",\"moduleSequenceNumber\":590,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":417,\"serverGrowth\":45}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"8.4.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":591,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":592,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":593,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":594,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"neo-net\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":83292164,\"moneyMax\":2082304100,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":253,\"serverGrowth\":42}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"2.2.1.6\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"n00dles\",\"moduleSequenceNumber\":595,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"n00dles\",\"moduleSequenceNumber\":596,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"n00dles\",\"moduleSequenceNumber\":597,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"n00dles\",\"moduleSequenceNumber\":598,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1.5440000000000005,\"minDifficulty\":1,\"moneyAvailable\":185456,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"47.0.2.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":599,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":600,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":601,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":602,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":3,\"minDifficulty\":3,\"moneyAvailable\":307.96970799699335,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"71.2.0.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":603,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":604,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":605,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":606,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":3.064,\"minDifficulty\":3,\"moneyAvailable\":435.2109090366736,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"18.0.4.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":15.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,0,0,363]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1786.816399750704,\"offlineMoneyMade\":0,\"offlineRunningTime\":221660.73500000002,\"onlineExpGained\":1089,\"onlineMoneyMade\":0,\"onlineRunningTime\":53186.409999788484,\"pid\":28,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":221660.87600000002,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":53186.20999978849,\"pid\":29,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,0,484]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8732.042289135028,\"offlineMoneyMade\":0,\"offlineRunningTime\":221660.999,\"onlineExpGained\":3995.189976809894,\"onlineMoneyMade\":0,\"onlineRunningTime\":53186.20999978849,\"pid\":30,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,9574,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14444.860476381684,\"offlineMoneyMade\":0,\"offlineRunningTime\":221661.13100000002,\"onlineExpGained\":7191,\"onlineMoneyMade\":0,\"onlineRunningTime\":53186.20999978849,\"pid\":31,\"ramUsage\":1.7,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,1159,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13082.202115907317,\"offlineMoneyMade\":0,\"offlineRunningTime\":221661.245,\"onlineExpGained\":9566.994180005224,\"onlineMoneyMade\":0,\"onlineRunningTime\":53186.00999978849,\"pid\":32,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,0,400]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8431.235692391807,\"offlineMoneyMade\":0,\"offlineRunningTime\":221661.383,\"onlineExpGained\":4703.016496983281,\"onlineMoneyMade\":0,\"onlineRunningTime\":53186.00999978849,\"pid\":33,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[141158219,3586,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":40392.54060389188,\"offlineMoneyMade\":0,\"offlineRunningTime\":221661.49800000002,\"onlineExpGained\":29928.84309590747,\"onlineMoneyMade\":141158219,\"onlineRunningTime\":53186.00999978849,\"pid\":34,\"ramUsage\":1.7,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,864,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12478.083458108193,\"offlineMoneyMade\":0,\"offlineRunningTime\":221661.621,\"onlineExpGained\":10158.515633483874,\"onlineMoneyMade\":0,\"onlineRunningTime\":53185.80999978849,\"pid\":35,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"joesguns\",\"moduleSequenceNumber\":607,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"joesguns\",\"moduleSequenceNumber\":608,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"joesguns\",\"moduleSequenceNumber\":609,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"joesguns\",\"moduleSequenceNumber\":610,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\",\"zer0\",\"max-hardware\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":10.578000000000003,\"minDifficulty\":5,\"moneyAvailable\":378.3990746852668,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-531356.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[5,13],[10,17],[17,22],[9,14],[21,31]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-58715-TheBlackHand.cct\",\"type\":\"Array Jumping Game\",\"data\":[10,7,2,9,1,0],\"reward\":{\"name\":\"The Black Hand\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-27290.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"11528577686\",-57],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"69.7.5.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":27.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,0,130]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1943.987733561531,\"offlineMoneyMade\":0,\"offlineRunningTime\":221661.76200000002,\"onlineExpGained\":1938.3332916666147,\"onlineMoneyMade\":0,\"onlineRunningTime\":53184.80999978851,\"pid\":36,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,326,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5329.30349271701,\"offlineMoneyMade\":0,\"offlineRunningTime\":221661.902,\"onlineExpGained\":4860.743485256277,\"onlineMoneyMade\":0,\"onlineRunningTime\":53184.60999978851,\"pid\":37,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,0,159]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2973.558972380935,\"offlineMoneyMade\":0,\"offlineRunningTime\":221662.02599999998,\"onlineExpGained\":2147.938869061027,\"onlineMoneyMade\":0,\"onlineRunningTime\":53184.60999978851,\"pid\":38,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[47520140,726,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14484.18563267836,\"offlineMoneyMade\":0,\"offlineRunningTime\":221662.14800000002,\"onlineExpGained\":12136.948457051067,\"onlineMoneyMade\":47520140,\"onlineRunningTime\":53184.40999978851,\"pid\":39,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,782,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8737.107338202211,\"offlineMoneyMade\":0,\"offlineRunningTime\":221662.264,\"onlineExpGained\":10564.076701922862,\"onlineMoneyMade\":0,\"onlineRunningTime\":53184.40999978851,\"pid\":40,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,2151]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":27638.521058186776,\"offlineMoneyMade\":0,\"offlineRunningTime\":221662.383,\"onlineExpGained\":17755.482727516286,\"onlineMoneyMade\":0,\"onlineRunningTime\":53184.209999788516,\"pid\":41,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[78982194,2070,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":24543.561592216312,\"offlineMoneyMade\":0,\"offlineRunningTime\":221662.494,\"onlineExpGained\":29544.291236706886,\"onlineMoneyMade\":78982194,\"onlineRunningTime\":53184.209999788516,\"pid\":42,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,5846,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":89743.05007934263,\"offlineMoneyMade\":0,\"offlineRunningTime\":221662.60799999995,\"onlineExpGained\":48255.95166204809,\"onlineMoneyMade\":0,\"onlineRunningTime\":53184.209999788516,\"pid\":43,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[16075644,18744,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":286006.0730001411,\"offlineMoneyMade\":0,\"offlineRunningTime\":221662.73299999998,\"onlineExpGained\":145977.14286135754,\"onlineMoneyMade\":16075644,\"onlineRunningTime\":53184.00999978852,\"pid\":44,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zer0\",\"moduleSequenceNumber\":611,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zer0\",\"moduleSequenceNumber\":612,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zer0\",\"moduleSequenceNumber\":613,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zer0\",\"moduleSequenceNumber\":614,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"joesguns\",\"silver-helix\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8.625999999997449,\"minDifficulty\":8,\"moneyAvailable\":554.5526794312277,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-177625-TheBlackHand.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"548641842300\",-93],\"reward\":{\"name\":\"The Black Hand\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"43.5.3.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":15.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,0,256]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5927.060011649022,\"offlineMoneyMade\":0,\"offlineRunningTime\":221662.87099999998,\"onlineExpGained\":2561.5444464554403,\"onlineMoneyMade\":0,\"onlineRunningTime\":53187.20999978847,\"pid\":45,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,1526,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":17314.796784880902,\"offlineMoneyMade\":0,\"offlineRunningTime\":221662.981,\"onlineExpGained\":15269.206348793261,\"onlineMoneyMade\":0,\"onlineRunningTime\":53187.20999978847,\"pid\":46,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,356]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5305.308598954064,\"offlineMoneyMade\":0,\"offlineRunningTime\":221663.097,\"onlineExpGained\":4809.2216187781805,\"onlineMoneyMade\":0,\"onlineRunningTime\":53187.009999788475,\"pid\":47,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[376022359,2225,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":23078.687781313412,\"offlineMoneyMade\":0,\"offlineRunningTime\":221663.208,\"onlineExpGained\":22858.78237471616,\"onlineMoneyMade\":376022359,\"onlineRunningTime\":53187.009999788475,\"pid\":48,\"ramUsage\":1.7,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,960,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19165.847781469503,\"offlineMoneyMade\":0,\"offlineRunningTime\":221663.325,\"onlineExpGained\":12968.687511311966,\"onlineMoneyMade\":0,\"onlineRunningTime\":53187.009999788475,\"pid\":49,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[14928683,1442,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29961.295228420488,\"offlineMoneyMade\":0,\"offlineRunningTime\":221663.44999999998,\"onlineExpGained\":18622.22472327402,\"onlineMoneyMade\":14928683,\"onlineRunningTime\":53186.80999978848,\"pid\":50,\"ramUsage\":1.7,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nectar-net\",\"moduleSequenceNumber\":615,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nectar-net\",\"moduleSequenceNumber\":616,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nectar-net\",\"moduleSequenceNumber\":617,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"nectar-net\",\"moduleSequenceNumber\":618,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"iron-gym\",\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7.709999999998017,\"minDifficulty\":7,\"moneyAvailable\":499.6525975629076,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"89.6.7.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,0,1332]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":26196.13066822213,\"offlineMoneyMade\":0,\"offlineRunningTime\":221663.57899999997,\"onlineExpGained\":10995.026960972671,\"onlineMoneyMade\":0,\"onlineRunningTime\":53185.2099997885,\"pid\":51,\"ramUsage\":1.95,\"server\":\"neo-net\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,10431,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":117741.14248499219,\"offlineMoneyMade\":0,\"offlineRunningTime\":221663.692,\"onlineExpGained\":86102.9476200496,\"onlineMoneyMade\":0,\"onlineRunningTime\":53185.009999788505,\"pid\":52,\"ramUsage\":1.95,\"server\":\"neo-net\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[572846836,14220,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":158871.71990689015,\"offlineMoneyMade\":0,\"offlineRunningTime\":221663.794,\"onlineExpGained\":118939.44705755512,\"onlineMoneyMade\":572846836,\"onlineRunningTime\":53184.80999978851,\"pid\":53,\"ramUsage\":1.7,\"server\":\"neo-net\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"neo-net\",\"moduleSequenceNumber\":619,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"neo-net\",\"moduleSequenceNumber\":620,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"neo-net\",\"moduleSequenceNumber\":621,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"neo-net\",\"moduleSequenceNumber\":622,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"max-hardware\",\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8.821999999998726,\"minDifficulty\":8,\"moneyAvailable\":341.07704680061306,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"81.1.5.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":60.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,0,1815]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":42009.151785006194,\"offlineMoneyMade\":0,\"offlineRunningTime\":221663.914,\"onlineExpGained\":21339.937355061666,\"onlineMoneyMade\":0,\"onlineRunningTime\":53183.40999978853,\"pid\":54,\"ramUsage\":1.95,\"server\":\"silver-helix\",\"threads\":5,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,16397,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":237086.1511584841,\"offlineMoneyMade\":0,\"offlineRunningTime\":221664.01900000003,\"onlineExpGained\":192788.40375258963,\"onlineMoneyMade\":0,\"onlineRunningTime\":53183.40999978853,\"pid\":55,\"ramUsage\":1.95,\"server\":\"silver-helix\",\"threads\":19,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[698585512,20712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":305834.28532628535,\"offlineMoneyMade\":0,\"offlineRunningTime\":221664.139,\"onlineExpGained\":248671.9972780008,\"onlineMoneyMade\":698585512,\"onlineRunningTime\":53183.20999978853,\"pid\":56,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":8,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"silver-helix\",\"moduleSequenceNumber\":623,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"silver-helix\",\"moduleSequenceNumber\":624,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"silver-helix\",\"moduleSequenceNumber\":625,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"silver-helix\",\"moduleSequenceNumber\":626,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zer0\",\"comptek\",\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":11.037999999998139,\"minDifficulty\":10,\"moneyAvailable\":961.852993720777,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"20.7.0.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":627,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":628,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":629,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":630,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":8.86,\"minDifficulty\":5,\"moneyAvailable\":245.0929013554952,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"31.2.6.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":631,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":632,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":633,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":634,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":7.755999999999999,\"minDifficulty\":5,\"moneyAvailable\":316.18327355669254,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"22.4.4.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,0,2841]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":64577.798171864,\"offlineMoneyMade\":0,\"offlineRunningTime\":221664.241,\"onlineExpGained\":28427.13973585856,\"onlineMoneyMade\":0,\"onlineRunningTime\":53186.80999978848,\"pid\":57,\"ramUsage\":1.95,\"server\":\"phantasy\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,19575,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":341545.4938601692,\"offlineMoneyMade\":0,\"offlineRunningTime\":221664.36899999998,\"onlineExpGained\":195868.09585689017,\"onlineMoneyMade\":0,\"onlineRunningTime\":53186.60999978848,\"pid\":58,\"ramUsage\":1.95,\"server\":\"phantasy\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[192587272,27688,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":481935.3694073163,\"offlineMoneyMade\":0,\"offlineRunningTime\":221664.47600000002,\"onlineExpGained\":277367.2345927529,\"onlineMoneyMade\":192587272,\"onlineRunningTime\":53186.60999978848,\"pid\":59,\"ramUsage\":1.7,\"server\":\"phantasy\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"phantasy\",\"moduleSequenceNumber\":635,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"phantasy\",\"moduleSequenceNumber\":636,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"phantasy\",\"moduleSequenceNumber\":637,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"phantasy\",\"moduleSequenceNumber\":638,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nectar-net\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7.685999999998817,\"minDifficulty\":7,\"moneyAvailable\":816.1887562708429,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"56.9.1.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,0,768]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":21844.624961887785,\"offlineMoneyMade\":0,\"offlineRunningTime\":221664.601,\"onlineExpGained\":9029.79167420789,\"onlineMoneyMade\":0,\"onlineRunningTime\":53185.609999788496,\"pid\":60,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,4624,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":60906.73237873512,\"offlineMoneyMade\":0,\"offlineRunningTime\":221664.72600000002,\"onlineExpGained\":54366.87070512596,\"onlineMoneyMade\":0,\"onlineRunningTime\":53185.4099997885,\"pid\":61,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":4,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,4284]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54511.31436789697,\"offlineMoneyMade\":0,\"offlineRunningTime\":221664.85799999998,\"onlineExpGained\":35362.384009614,\"onlineMoneyMade\":0,\"onlineRunningTime\":53185.4099997885,\"pid\":62,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[41588954,7042,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":87594.37439105721,\"offlineMoneyMade\":0,\"offlineRunningTime\":221664.96600000001,\"onlineExpGained\":83872.42045307466,\"onlineMoneyMade\":41588954,\"onlineRunningTime\":53185.4099997885,\"pid\":63,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,11692,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":179496.03393241123,\"offlineMoneyMade\":0,\"offlineRunningTime\":221665.08999999997,\"onlineExpGained\":96511.90332409619,\"onlineMoneyMade\":0,\"onlineRunningTime\":53185.2099997885,\"pid\":64,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":4,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[15592742,18734,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":284357.04865454225,\"offlineMoneyMade\":0,\"offlineRunningTime\":221665.19700000001,\"onlineExpGained\":145944.12476237572,\"onlineMoneyMade\":15592742,\"onlineRunningTime\":53185.009999788505,\"pid\":65,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"max-hardware\",\"moduleSequenceNumber\":639,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"max-hardware\",\"moduleSequenceNumber\":640,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"max-hardware\",\"moduleSequenceNumber\":641,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"max-hardware\",\"moduleSequenceNumber\":642,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"joesguns\",\"neo-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5.465999999998421,\"minDifficulty\":5,\"moneyAvailable\":554.9643502411126,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"66.2.5.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,0,1137]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":25205.82582760065,\"offlineMoneyMade\":0,\"offlineRunningTime\":221665.313,\"onlineExpGained\":13368.324392674982,\"onlineMoneyMade\":0,\"onlineRunningTime\":53184.00999978852,\"pid\":66,\"ramUsage\":1.95,\"server\":\"omega-net\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,7767,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":112304.7046364033,\"offlineMoneyMade\":0,\"offlineRunningTime\":221665.41700000002,\"onlineExpGained\":91320.82283017285,\"onlineMoneyMade\":0,\"onlineRunningTime\":53184.00999978852,\"pid\":67,\"ramUsage\":1.95,\"server\":\"omega-net\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[327854648,10336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":153587.26100279187,\"offlineMoneyMade\":0,\"offlineRunningTime\":221665.53100000002,\"onlineExpGained\":124147.87797912108,\"onlineMoneyMade\":327854648,\"onlineRunningTime\":53183.80999978852,\"pid\":68,\"ramUsage\":1.7,\"server\":\"omega-net\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omega-net\",\"moduleSequenceNumber\":643,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omega-net\",\"moduleSequenceNumber\":644,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omega-net\",\"moduleSequenceNumber\":645,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"omega-net\",\"moduleSequenceNumber\":646,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zer0\",\"the-hub\",\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":34,\"hackDifficulty\":18.40399999999978,\"minDifficulty\":11,\"moneyAvailable\":9979732.846134126,\"moneyMax\":1506189100,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":191,\"serverGrowth\":32}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"91.9.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":647,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":648,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":649,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":650,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":40,\"hackDifficulty\":40,\"minDifficulty\":13,\"moneyAvailable\":44033322,\"moneyMax\":1100833050,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":238,\"serverGrowth\":28}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"99.2.1.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,0,2796]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":64053.53977163113,\"offlineMoneyMade\":0,\"offlineRunningTime\":221665.64200000002,\"onlineExpGained\":27976.868251130087,\"onlineMoneyMade\":0,\"onlineRunningTime\":53187.40999978847,\"pid\":69,\"ramUsage\":1.95,\"server\":\"iron-gym\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,19566,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":341547.5524931352,\"offlineMoneyMade\":0,\"offlineRunningTime\":221665.76,\"onlineExpGained\":195778.04155994448,\"onlineMoneyMade\":0,\"onlineRunningTime\":53187.40999978847,\"pid\":70,\"ramUsage\":1.95,\"server\":\"iron-gym\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[189560764,27716,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":484888.97671985195,\"offlineMoneyMade\":0,\"offlineRunningTime\":221665.88999999998,\"onlineExpGained\":277577.36128562636,\"onlineMoneyMade\":189560764,\"onlineRunningTime\":53187.20999978847,\"pid\":71,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"iron-gym\",\"moduleSequenceNumber\":651,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"iron-gym\",\"moduleSequenceNumber\":652,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"iron-gym\",\"moduleSequenceNumber\":653,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"iron-gym\",\"moduleSequenceNumber\":654,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":11.072000000000003,\"minDifficulty\":10,\"moneyAvailable\":645.0585581765773,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"63.6.4.9\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":655,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":656,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":657,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":658,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"aerocorp\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":46,\"hackDifficulty\":46,\"minDifficulty\":15,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":491,\"serverGrowth\":43}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"76.0.3.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":659,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":660,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":661,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":662,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":57,\"minDifficulty\":19,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1065,\"serverGrowth\":60}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"36.9.4.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":663,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":664,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":665,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":666,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":44,\"minDifficulty\":15,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":708,\"serverGrowth\":50}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"79.9.4.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":667,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":668,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":669,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":670,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nova-med\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":514,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"40.4.6.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":671,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":672,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":673,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":674,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"comptek\",\"lexo-corp\",\"rho-construction\",\"alpha-ent\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":356,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"23.1.1.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":15.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,0,474]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":11854.116852625235,\"offlineMoneyMade\":0,\"offlineRunningTime\":221666.00699999998,\"onlineExpGained\":4742.8596391401525,\"onlineMoneyMade\":0,\"onlineRunningTime\":53186.60999978848,\"pid\":72,\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,3052,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34630.11738140368,\"offlineMoneyMade\":0,\"offlineRunningTime\":221666.11600000004,\"onlineExpGained\":30538.412697586522,\"onlineMoneyMade\":0,\"onlineRunningTime\":53186.409999788484,\"pid\":73,\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"threads\":4,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[728848130,4454,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":49110.47496558465,\"offlineMoneyMade\":0,\"offlineRunningTime\":221666.27299999996,\"onlineExpGained\":45747.58284841421,\"onlineMoneyMade\":728848130,\"onlineRunningTime\":53186.409999788484,\"pid\":74,\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"threads\":2,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":675,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":676,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":677,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":678,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"phantasy\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":220,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"96.0.4.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\".\",\"moduleSequenceNumber\":679,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\".\",\"moduleSequenceNumber\":680,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\".\",\"moduleSequenceNumber\":681,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\".\",\"moduleSequenceNumber\":682,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"helios\",\"nwo\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":505,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"78.2.4.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":7.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,2147]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":27130.359244636853,\"offlineMoneyMade\":0,\"offlineRunningTime\":221666.38700000002,\"onlineExpGained\":17722.46462853438,\"onlineMoneyMade\":0,\"onlineRunningTime\":53185.80999978849,\"pid\":75,\"ramUsage\":1.95,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,5846,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":89703.41660917178,\"offlineMoneyMade\":0,\"offlineRunningTime\":221666.505,\"onlineExpGained\":48255.95166204809,\"onlineMoneyMade\":0,\"onlineRunningTime\":53185.609999788496,\"pid\":76,\"ramUsage\":1.95,\"server\":\"CSEC\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[7724208,9367,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":142605.00342938126,\"offlineMoneyMade\":0,\"offlineRunningTime\":221666.62,\"onlineExpGained\":73362.08867541132,\"onlineMoneyMade\":7724208,\"onlineRunningTime\":53185.609999788496,\"pid\":77,\"ramUsage\":1.7,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"CSEC\",\"moduleSequenceNumber\":683,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"CSEC\",\"moduleSequenceNumber\":684,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"CSEC\",\"moduleSequenceNumber\":685,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"CSEC\",\"moduleSequenceNumber\":686,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"joesguns\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":1.086,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":55,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"91.2.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"The-Cave\",\"moduleSequenceNumber\":687,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"The-Cave\",\"moduleSequenceNumber\":688,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"The-Cave\",\"moduleSequenceNumber\":689,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"The-Cave\",\"moduleSequenceNumber\":690,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"31.4.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":0}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"5.1.1.2\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"darkweb\",\"moduleSequenceNumber\":691,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"darkweb\",\"moduleSequenceNumber\":692,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"darkweb\",\"moduleSequenceNumber\":693,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"darkweb\",\"moduleSequenceNumber\":694,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin\",\"httpPortOpen\":false,\"ip\":\"34.6.8.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2110.6900393099477,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.6100000000338,\"pid\":636,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.6100000000338,\"pid\":637,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[13093552,3056,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10238.521841478077,\"onlineMoneyMade\":13093552,\"onlineRunningTime\":755.6100000000338,\"pid\":638,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4096.900393099478,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.4100000000337,\"pid\":639,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2820,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18338.50652149291,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.4100000000337,\"pid\":640,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2864,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18884.75990723946,\"onlineMoneyMade\":2864,\"onlineRunningTime\":755.4100000000337,\"pid\":641,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.4100000000337,\"pid\":642,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.4100000000337,\"pid\":643,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3584,2816,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18156.42205957733,\"onlineMoneyMade\":3584,\"onlineRunningTime\":755.4100000000337,\"pid\":644,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.2100000000337,\"pid\":645,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.2100000000337,\"pid\":646,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2832,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19018.42501357425,\"onlineMoneyMade\":2832,\"onlineRunningTime\":755.2100000000337,\"pid\":647,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.2100000000337,\"pid\":648,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.2100000000337,\"pid\":649,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1696,1424,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10532.773575226025,\"onlineMoneyMade\":1696,\"onlineRunningTime\":755.2100000000337,\"pid\":650,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.2100000000337,\"pid\":651,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.2100000000337,\"pid\":652,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2112,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10235.610684388927,\"onlineMoneyMade\":2112,\"onlineRunningTime\":755.2100000000337,\"pid\":653,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.2100000000337,\"pid\":654,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,376,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5079.402608597163,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.2100000000337,\"pid\":655,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[496,352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4647.113024886767,\"onlineMoneyMade\":496,\"onlineRunningTime\":755.2100000000337,\"pid\":656,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin\",\"moduleSequenceNumber\":695,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin\",\"moduleSequenceNumber\":696,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin\",\"moduleSequenceNumber\":697,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin\",\"moduleSequenceNumber\":698,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-0\",\"httpPortOpen\":false,\"ip\":\"5.6.0.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2110.6900393099477,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.2100000000337,\"pid\":657,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8503.065586934357,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.2100000000337,\"pid\":658,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[12894768,3056,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10238.521841478077,\"onlineMoneyMade\":12894768,\"onlineRunningTime\":755.2100000000337,\"pid\":659,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4096.900393099478,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":660,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2820,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18338.50652149291,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":661,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2944,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19274.94089705845,\"onlineMoneyMade\":2944,\"onlineRunningTime\":755.0100000000336,\"pid\":662,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,588]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3823.773700226179,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":663,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":664,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3312,2800,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18130.409993589397,\"onlineMoneyMade\":3312,\"onlineRunningTime\":755.0100000000336,\"pid\":665,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":666,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":667,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2880,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19018.42501357425,\"onlineMoneyMade\":2880,\"onlineRunningTime\":755.0100000000336,\"pid\":668,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":669,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":670,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1744,1424,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10499.755476244125,\"onlineMoneyMade\":1744,\"onlineRunningTime\":755.0100000000336,\"pid\":671,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":672,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":673,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2144,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10367.683080316527,\"onlineMoneyMade\":2144,\"onlineRunningTime\":755.0100000000336,\"pid\":674,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":675,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":755.0100000000336,\"pid\":676,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[400,304,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3998.6786493211716,\"onlineMoneyMade\":400,\"onlineRunningTime\":755.0100000000336,\"pid\":677,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-0\",\"moduleSequenceNumber\":699,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-0\",\"moduleSequenceNumber\":700,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-0\",\"moduleSequenceNumber\":701,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-0\",\"moduleSequenceNumber\":702,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-1\",\"httpPortOpen\":false,\"ip\":\"43.9.6.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2110.6900393099477,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":678,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8503.065586934357,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":679,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[12804448,3056,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10238.521841478077,\"onlineMoneyMade\":12804448,\"onlineRunningTime\":754.8100000000336,\"pid\":680,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4096.900393099478,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":681,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2820,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18338.50652149291,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":682,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2992,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19509.04949094985,\"onlineMoneyMade\":2992,\"onlineRunningTime\":754.8100000000336,\"pid\":683,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,588]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3823.773700226179,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":684,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":685,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3504,2816,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18234.45825754113,\"onlineMoneyMade\":3504,\"onlineRunningTime\":754.8100000000336,\"pid\":686,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":687,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":688,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2896,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19117.479310519953,\"onlineMoneyMade\":2896,\"onlineRunningTime\":754.8100000000336,\"pid\":689,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":690,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":691,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1632,1456,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10334.664981334628,\"onlineMoneyMade\":1632,\"onlineRunningTime\":754.8100000000336,\"pid\":692,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":693,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.8100000000336,\"pid\":694,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2208,1296,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10367.683080316527,\"onlineMoneyMade\":2208,\"onlineRunningTime\":754.8100000000336,\"pid\":695,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.6100000000336,\"pid\":696,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,376,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5079.402608597163,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.6100000000336,\"pid\":697,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[416,336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4106.75104524877,\"onlineMoneyMade\":416,\"onlineRunningTime\":754.6100000000336,\"pid\":698,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-1\",\"moduleSequenceNumber\":703,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-1\",\"moduleSequenceNumber\":704,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-1\",\"moduleSequenceNumber\":705,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-1\",\"moduleSequenceNumber\":706,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-2\",\"httpPortOpen\":false,\"ip\":\"30.8.5.2\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2110.6900393099477,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.6100000000336,\"pid\":699,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.6100000000336,\"pid\":700,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[15711456,3056,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10238.521841478077,\"onlineMoneyMade\":15711456,\"onlineRunningTime\":754.6100000000336,\"pid\":701,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4096.900393099478,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.6100000000336,\"pid\":702,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2820,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18338.50652149291,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.6100000000336,\"pid\":703,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2992,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19509.04949094985,\"onlineMoneyMade\":2992,\"onlineRunningTime\":754.6100000000336,\"pid\":704,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.6100000000336,\"pid\":705,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.6100000000336,\"pid\":706,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3024,2800,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18052.373795625597,\"onlineMoneyMade\":3024,\"onlineRunningTime\":754.6100000000336,\"pid\":707,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":708,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":709,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2736,2352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19018.42501357425,\"onlineMoneyMade\":2736,\"onlineRunningTime\":754.4100000000335,\"pid\":710,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":711,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":712,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1824,1440,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10796.91836708122,\"onlineMoneyMade\":1824,\"onlineRunningTime\":754.4100000000335,\"pid\":713,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":714,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":715,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2048,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10631.827872171722,\"onlineMoneyMade\":2048,\"onlineRunningTime\":754.4100000000335,\"pid\":716,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":717,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":718,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[464,368,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4430.968233031568,\"onlineMoneyMade\":464,\"onlineRunningTime\":754.4100000000335,\"pid\":719,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-2\",\"moduleSequenceNumber\":707,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-2\",\"moduleSequenceNumber\":708,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-2\",\"moduleSequenceNumber\":709,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-2\",\"moduleSequenceNumber\":710,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-3\",\"httpPortOpen\":false,\"ip\":\"28.2.8.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":720,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":721,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14038544,3056,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10238.521841478077,\"onlineMoneyMade\":14038544,\"onlineRunningTime\":754.4100000000335,\"pid\":722,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4096.900393099478,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":723,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2820,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18338.50652149291,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.4100000000335,\"pid\":724,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[3008,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19509.04949094985,\"onlineMoneyMade\":3008,\"onlineRunningTime\":754.4100000000335,\"pid\":725,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,588]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3823.773700226179,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.2100000000335,\"pid\":726,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.2100000000335,\"pid\":727,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2624,2800,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17272.011815987607,\"onlineMoneyMade\":2624,\"onlineRunningTime\":754.2100000000335,\"pid\":728,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.2100000000335,\"pid\":729,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.2100000000335,\"pid\":730,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2976,2352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19117.479310519953,\"onlineMoneyMade\":2976,\"onlineRunningTime\":754.2100000000335,\"pid\":731,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.2100000000335,\"pid\":732,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.2100000000335,\"pid\":733,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1728,1440,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10697.864070135523,\"onlineMoneyMade\":1728,\"onlineRunningTime\":754.2100000000335,\"pid\":734,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.0100000000334,\"pid\":735,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.0100000000334,\"pid\":736,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2256,1328,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10664.845971153622,\"onlineMoneyMade\":2256,\"onlineRunningTime\":754.0100000000334,\"pid\":737,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.0100000000334,\"pid\":738,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.0100000000334,\"pid\":739,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[464,368,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4430.968233031568,\"onlineMoneyMade\":464,\"onlineRunningTime\":754.0100000000334,\"pid\":740,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-3\",\"moduleSequenceNumber\":711,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-3\",\"moduleSequenceNumber\":712,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-3\",\"moduleSequenceNumber\":713,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-3\",\"moduleSequenceNumber\":714,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-4\",\"httpPortOpen\":false,\"ip\":\"11.2.7.3\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2110.6900393099477,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.0100000000334,\"pid\":741,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":754.0100000000334,\"pid\":742,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14491904,3056,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10238.521841478077,\"onlineMoneyMade\":14491904,\"onlineRunningTime\":754.0100000000334,\"pid\":743,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,602]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3914.815931183945,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.8100000000334,\"pid\":744,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.8100000000334,\"pid\":745,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2944,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19248.928831070516,\"onlineMoneyMade\":2944,\"onlineRunningTime\":753.8100000000334,\"pid\":746,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.8100000000334,\"pid\":747,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.8100000000334,\"pid\":748,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2736,2800,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17584.1566078428,\"onlineMoneyMade\":2736,\"onlineRunningTime\":753.8100000000334,\"pid\":749,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.6100000000333,\"pid\":750,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.6100000000333,\"pid\":751,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2896,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18919.37071662855,\"onlineMoneyMade\":2896,\"onlineRunningTime\":753.6100000000333,\"pid\":752,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.6100000000333,\"pid\":753,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.6100000000333,\"pid\":754,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1664,1440,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10433.719278280329,\"onlineMoneyMade\":1664,\"onlineRunningTime\":753.6100000000333,\"pid\":755,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.6100000000333,\"pid\":756,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1081,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8923.141249858418,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.6100000000333,\"pid\":757,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2368,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10565.791674207923,\"onlineMoneyMade\":2368,\"onlineRunningTime\":753.6100000000333,\"pid\":758,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.4100000000333,\"pid\":759,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.4100000000333,\"pid\":760,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[336,304,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3782.533857465973,\"onlineMoneyMade\":336,\"onlineRunningTime\":753.4100000000333,\"pid\":761,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-4\",\"moduleSequenceNumber\":715,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-4\",\"moduleSequenceNumber\":716,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-4\",\"moduleSequenceNumber\":717,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-4\",\"moduleSequenceNumber\":718,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-5\",\"httpPortOpen\":false,\"ip\":\"69.3.0.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.4100000000333,\"pid\":762,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.4100000000333,\"pid\":763,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14525392,3040,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10184.917015082905,\"onlineMoneyMade\":14525392,\"onlineRunningTime\":753.4100000000333,\"pid\":764,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4096.900393099478,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.4100000000333,\"pid\":765,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.4100000000333,\"pid\":766,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2864,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18858.747841251527,\"onlineMoneyMade\":2864,\"onlineRunningTime\":753.4100000000333,\"pid\":767,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.4100000000333,\"pid\":768,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.4100000000333,\"pid\":769,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2608,2800,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17115.93942006001,\"onlineMoneyMade\":2608,\"onlineRunningTime\":753.4100000000333,\"pid\":770,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.2100000000332,\"pid\":771,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.2100000000332,\"pid\":772,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3104,2352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19216.53360746565,\"onlineMoneyMade\":3104,\"onlineRunningTime\":753.2100000000332,\"pid\":773,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.2100000000332,\"pid\":774,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.2100000000332,\"pid\":775,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1600,1440,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10103.538288461332,\"onlineMoneyMade\":1600,\"onlineRunningTime\":753.2100000000332,\"pid\":776,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.2100000000332,\"pid\":777,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.2100000000332,\"pid\":778,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2384,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10532.773575226023,\"onlineMoneyMade\":2384,\"onlineRunningTime\":753.2100000000332,\"pid\":779,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.0100000000332,\"pid\":780,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,376,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5079.402608597163,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.0100000000332,\"pid\":781,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[448,368,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4593.0768269229675,\"onlineMoneyMade\":448,\"onlineRunningTime\":753.0100000000332,\"pid\":782,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-5\",\"moduleSequenceNumber\":719,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-5\",\"moduleSequenceNumber\":720,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-5\",\"moduleSequenceNumber\":721,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-5\",\"moduleSequenceNumber\":722,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-6\",\"httpPortOpen\":false,\"ip\":\"73.0.7.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.0100000000332,\"pid\":783,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.0100000000332,\"pid\":784,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14127648,3040,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10184.917015082905,\"onlineMoneyMade\":14127648,\"onlineRunningTime\":753.0100000000332,\"pid\":785,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.0100000000332,\"pid\":786,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":753.0100000000332,\"pid\":787,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2880,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18936.784039215323,\"onlineMoneyMade\":2880,\"onlineRunningTime\":753.0100000000332,\"pid\":788,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,588]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3823.773700226179,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.8100000000331,\"pid\":789,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.8100000000331,\"pid\":790,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2816,2800,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17662.192805806604,\"onlineMoneyMade\":2816,\"onlineRunningTime\":752.8100000000331,\"pid\":791,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.8100000000331,\"pid\":792,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.8100000000331,\"pid\":793,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2480,2352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18523.153528845745,\"onlineMoneyMade\":2480,\"onlineRunningTime\":752.8100000000331,\"pid\":794,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.6100000000331,\"pid\":795,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.6100000000331,\"pid\":796,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1600,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10664.845971153623,\"onlineMoneyMade\":1600,\"onlineRunningTime\":752.6100000000331,\"pid\":797,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.6100000000331,\"pid\":798,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.6100000000331,\"pid\":799,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2368,1328,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10664.845971153622,\"onlineMoneyMade\":2368,\"onlineRunningTime\":752.6100000000331,\"pid\":800,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.6100000000331,\"pid\":801,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,376,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5079.402608597163,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.6100000000331,\"pid\":802,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[416,336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4268.85963914017,\"onlineMoneyMade\":416,\"onlineRunningTime\":752.6100000000331,\"pid\":803,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-6\",\"moduleSequenceNumber\":723,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-6\",\"moduleSequenceNumber\":724,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-6\",\"moduleSequenceNumber\":725,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-6\",\"moduleSequenceNumber\":726,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-7\",\"httpPortOpen\":false,\"ip\":\"37.7.5.8\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.6100000000331,\"pid\":804,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.6100000000331,\"pid\":805,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14089200,3040,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10184.917015082905,\"onlineMoneyMade\":14089200,\"onlineRunningTime\":752.6100000000331,\"pid\":806,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.410000000033,\"pid\":807,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.410000000033,\"pid\":808,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2976,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19405.001226998116,\"onlineMoneyMade\":2976,\"onlineRunningTime\":752.410000000033,\"pid\":809,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.410000000033,\"pid\":810,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.410000000033,\"pid\":811,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2864,2800,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17428.084211915208,\"onlineMoneyMade\":2864,\"onlineRunningTime\":752.410000000033,\"pid\":812,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,490]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4044.7171252827234,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.410000000033,\"pid\":813,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.410000000033,\"pid\":814,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2432,2352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18424.099231900047,\"onlineMoneyMade\":2432,\"onlineRunningTime\":752.410000000033,\"pid\":815,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.210000000033,\"pid\":816,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.210000000033,\"pid\":817,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1728,1440,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10400.701179298427,\"onlineMoneyMade\":1728,\"onlineRunningTime\":752.210000000033,\"pid\":818,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.210000000033,\"pid\":819,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.210000000033,\"pid\":820,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2304,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10631.827872171722,\"onlineMoneyMade\":2304,\"onlineRunningTime\":752.210000000033,\"pid\":821,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.210000000033,\"pid\":822,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.210000000033,\"pid\":823,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[448,384,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4701.149222850567,\"onlineMoneyMade\":448,\"onlineRunningTime\":752.210000000033,\"pid\":824,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-7\",\"moduleSequenceNumber\":727,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-7\",\"moduleSequenceNumber\":728,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-7\",\"moduleSequenceNumber\":729,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-7\",\"moduleSequenceNumber\":730,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-8\",\"httpPortOpen\":false,\"ip\":\"64.9.0.2\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.210000000033,\"pid\":825,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.210000000033,\"pid\":826,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14518400,3040,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10184.917015082905,\"onlineMoneyMade\":14518400,\"onlineRunningTime\":752.210000000033,\"pid\":827,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.010000000033,\"pid\":828,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.010000000033,\"pid\":829,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2976,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19326.965029034316,\"onlineMoneyMade\":2976,\"onlineRunningTime\":752.010000000033,\"pid\":830,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.010000000033,\"pid\":831,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.010000000033,\"pid\":832,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3088,2800,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17818.265201734197,\"onlineMoneyMade\":3088,\"onlineRunningTime\":752.010000000033,\"pid\":833,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.010000000033,\"pid\":834,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":752.010000000033,\"pid\":835,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3232,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19084.46121153805,\"onlineMoneyMade\":3232,\"onlineRunningTime\":752.010000000033,\"pid\":836,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.8100000000329,\"pid\":837,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1269,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10474.991902007707,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.8100000000329,\"pid\":838,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1648,1424,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10103.538288461332,\"onlineMoneyMade\":1648,\"onlineRunningTime\":751.8100000000329,\"pid\":839,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.6100000000329,\"pid\":840,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.6100000000329,\"pid\":841,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2080,1280,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9938.447793551832,\"onlineMoneyMade\":2080,\"onlineRunningTime\":751.6100000000329,\"pid\":842,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.6100000000329,\"pid\":843,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.6100000000329,\"pid\":844,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[432,352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4376.932035067769,\"onlineMoneyMade\":432,\"onlineRunningTime\":751.6100000000329,\"pid\":845,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-8\",\"moduleSequenceNumber\":731,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-8\",\"moduleSequenceNumber\":732,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-8\",\"moduleSequenceNumber\":733,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-8\",\"moduleSequenceNumber\":734,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-9\",\"httpPortOpen\":false,\"ip\":\"77.0.4.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.6100000000329,\"pid\":846,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.6100000000329,\"pid\":847,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[13685600,3040,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10184.917015082905,\"onlineMoneyMade\":13685600,\"onlineRunningTime\":751.6100000000329,\"pid\":848,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.6100000000329,\"pid\":849,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.6100000000329,\"pid\":850,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2896,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19014.82023717912,\"onlineMoneyMade\":2896,\"onlineRunningTime\":751.6100000000329,\"pid\":851,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.4100000000328,\"pid\":852,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.4100000000328,\"pid\":853,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3296,2784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18026.361729637665,\"onlineMoneyMade\":3296,\"onlineRunningTime\":751.4100000000328,\"pid\":854,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.4100000000328,\"pid\":855,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.4100000000328,\"pid\":856,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2992,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19183.515508483753,\"onlineMoneyMade\":2992,\"onlineRunningTime\":751.4100000000328,\"pid\":857,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.4100000000328,\"pid\":858,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.4100000000328,\"pid\":859,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1712,1440,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10697.864070135522,\"onlineMoneyMade\":1712,\"onlineRunningTime\":751.4100000000328,\"pid\":860,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.2100000000328,\"pid\":861,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.2100000000328,\"pid\":862,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2224,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10037.50209049753,\"onlineMoneyMade\":2224,\"onlineRunningTime\":751.2100000000328,\"pid\":863,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.2100000000328,\"pid\":864,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.2100000000328,\"pid\":865,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[432,352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4593.0768269229675,\"onlineMoneyMade\":432,\"onlineRunningTime\":751.2100000000328,\"pid\":866,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-9\",\"moduleSequenceNumber\":735,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-9\",\"moduleSequenceNumber\":736,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-9\",\"moduleSequenceNumber\":737,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-9\",\"moduleSequenceNumber\":738,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-10\",\"httpPortOpen\":false,\"ip\":\"94.7.3.6\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.2100000000328,\"pid\":867,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.2100000000328,\"pid\":868,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[13545968,3040,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10184.917015082905,\"onlineMoneyMade\":13545968,\"onlineRunningTime\":751.2100000000328,\"pid\":869,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,602]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3914.815931183945,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.2100000000328,\"pid\":870,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.2100000000328,\"pid\":871,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2912,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19092.85643514292,\"onlineMoneyMade\":2912,\"onlineRunningTime\":751.2100000000328,\"pid\":872,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.0100000000327,\"pid\":873,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.0100000000327,\"pid\":874,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3376,2784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18026.361729637665,\"onlineMoneyMade\":3376,\"onlineRunningTime\":751.0100000000327,\"pid\":875,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.0100000000327,\"pid\":876,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.0100000000327,\"pid\":877,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3200,2320,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18985.40691459235,\"onlineMoneyMade\":3200,\"onlineRunningTime\":751.0100000000327,\"pid\":878,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.0100000000327,\"pid\":879,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":751.0100000000327,\"pid\":880,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1632,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9839.393496606135,\"onlineMoneyMade\":1632,\"onlineRunningTime\":751.0100000000327,\"pid\":881,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.8100000000327,\"pid\":882,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.8100000000327,\"pid\":883,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2160,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10565.791674207923,\"onlineMoneyMade\":2160,\"onlineRunningTime\":750.8100000000327,\"pid\":884,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.8100000000327,\"pid\":885,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,376,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5079.402608597163,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.8100000000327,\"pid\":886,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[480,336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4539.040628959167,\"onlineMoneyMade\":480,\"onlineRunningTime\":750.8100000000327,\"pid\":887,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-10\",\"moduleSequenceNumber\":739,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-10\",\"moduleSequenceNumber\":740,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-10\",\"moduleSequenceNumber\":741,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-10\",\"moduleSequenceNumber\":742,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-11\",\"httpPortOpen\":false,\"ip\":\"21.3.8.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.8100000000327,\"pid\":888,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8503.065586934357,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.8100000000327,\"pid\":889,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[15604544,3040,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10184.917015082905,\"onlineMoneyMade\":15604544,\"onlineRunningTime\":750.8100000000327,\"pid\":890,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.6100000000326,\"pid\":891,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.6100000000326,\"pid\":892,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2992,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19483.037424961916,\"onlineMoneyMade\":2992,\"onlineRunningTime\":750.6100000000326,\"pid\":893,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.6100000000326,\"pid\":894,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.6100000000326,\"pid\":895,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3376,2784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17948.325531673865,\"onlineMoneyMade\":3376,\"onlineRunningTime\":750.6100000000326,\"pid\":896,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.4100000000326,\"pid\":897,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.4100000000326,\"pid\":898,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3280,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19183.515508483753,\"onlineMoneyMade\":3280,\"onlineRunningTime\":750.4100000000326,\"pid\":899,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.4100000000326,\"pid\":900,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.4100000000326,\"pid\":901,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1728,1360,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10037.502090497532,\"onlineMoneyMade\":1728,\"onlineRunningTime\":750.4100000000326,\"pid\":902,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.4100000000326,\"pid\":903,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.4100000000326,\"pid\":904,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2400,1296,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10532.773575226023,\"onlineMoneyMade\":2400,\"onlineRunningTime\":750.4100000000326,\"pid\":905,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.2100000000326,\"pid\":906,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,376,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5079.402608597163,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.2100000000326,\"pid\":907,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[384,352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4268.85963914017,\"onlineMoneyMade\":384,\"onlineRunningTime\":750.2100000000326,\"pid\":908,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-11\",\"moduleSequenceNumber\":743,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-11\",\"moduleSequenceNumber\":744,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-11\",\"moduleSequenceNumber\":745,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-11\",\"moduleSequenceNumber\":746,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-12\",\"httpPortOpen\":false,\"ip\":\"90.0.2.9\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,630]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2110.6900393099477,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.2100000000326,\"pid\":909,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.2100000000326,\"pid\":910,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[15195984,3040,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10184.917015082905,\"onlineMoneyMade\":15195984,\"onlineRunningTime\":750.2100000000326,\"pid\":911,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.2100000000326,\"pid\":912,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.2100000000326,\"pid\":913,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2976,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19405.001226998116,\"onlineMoneyMade\":2976,\"onlineRunningTime\":750.2100000000326,\"pid\":914,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,560]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3641.6892383106465,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.2100000000326,\"pid\":915,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.2100000000326,\"pid\":916,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2864,2784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17870.289333710065,\"onlineMoneyMade\":2864,\"onlineRunningTime\":750.2100000000326,\"pid\":917,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,462]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3813.590432409425,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.0100000000325,\"pid\":918,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.0100000000325,\"pid\":919,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3088,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19084.46121153805,\"onlineMoneyMade\":3088,\"onlineRunningTime\":750.0100000000325,\"pid\":920,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.0100000000325,\"pid\":921,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.0100000000325,\"pid\":922,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1664,1440,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10400.701179298429,\"onlineMoneyMade\":1664,\"onlineRunningTime\":750.0100000000325,\"pid\":923,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.0100000000325,\"pid\":924,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":750.0100000000325,\"pid\":925,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2000,1296,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10037.50209049753,\"onlineMoneyMade\":2000,\"onlineRunningTime\":750.0100000000325,\"pid\":926,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.8100000000325,\"pid\":927,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,376,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5079.402608597163,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.8100000000325,\"pid\":928,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[432,352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4376.932035067769,\"onlineMoneyMade\":432,\"onlineRunningTime\":749.8100000000325,\"pid\":929,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-12\",\"moduleSequenceNumber\":747,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-12\",\"moduleSequenceNumber\":748,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-12\",\"moduleSequenceNumber\":749,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-12\",\"moduleSequenceNumber\":750,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-13\",\"httpPortOpen\":false,\"ip\":\"22.1.3.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.8100000000325,\"pid\":930,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.8100000000325,\"pid\":931,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14644160,3040,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10184.917015082905,\"onlineMoneyMade\":14644160,\"onlineRunningTime\":749.8100000000325,\"pid\":932,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.8100000000325,\"pid\":933,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.8100000000325,\"pid\":934,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2976,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19405.001226998116,\"onlineMoneyMade\":2976,\"onlineRunningTime\":749.8100000000325,\"pid\":935,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.8100000000325,\"pid\":936,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.8100000000325,\"pid\":937,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2848,2784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17714.21693778247,\"onlineMoneyMade\":2848,\"onlineRunningTime\":749.8100000000325,\"pid\":938,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,462]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3813.590432409425,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.6100000000324,\"pid\":939,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.6100000000324,\"pid\":940,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2608,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18985.40691459235,\"onlineMoneyMade\":2608,\"onlineRunningTime\":749.6100000000324,\"pid\":941,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.6100000000324,\"pid\":942,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.6100000000324,\"pid\":943,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1680,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10169.574486425132,\"onlineMoneyMade\":1680,\"onlineRunningTime\":749.6100000000324,\"pid\":944,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.6100000000324,\"pid\":945,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.6100000000324,\"pid\":946,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2224,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10433.719278280325,\"onlineMoneyMade\":2224,\"onlineRunningTime\":749.6100000000324,\"pid\":947,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.4100000000324,\"pid\":948,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,376,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5079.402608597163,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.4100000000324,\"pid\":949,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[480,336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4430.968233031568,\"onlineMoneyMade\":480,\"onlineRunningTime\":749.4100000000324,\"pid\":950,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-13\",\"moduleSequenceNumber\":751,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-13\",\"moduleSequenceNumber\":752,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-13\",\"moduleSequenceNumber\":753,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-13\",\"moduleSequenceNumber\":754,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-14\",\"httpPortOpen\":false,\"ip\":\"2.5.9.6\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.4100000000324,\"pid\":951,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.4100000000324,\"pid\":952,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14073808,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10131.312188687732,\"onlineMoneyMade\":14073808,\"onlineRunningTime\":749.4100000000324,\"pid\":953,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.4100000000324,\"pid\":954,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.4100000000324,\"pid\":955,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2976,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19378.989161010184,\"onlineMoneyMade\":2976,\"onlineRunningTime\":749.4100000000324,\"pid\":956,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.2100000000323,\"pid\":957,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.2100000000323,\"pid\":958,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2896,2784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17636.18073981867,\"onlineMoneyMade\":2896,\"onlineRunningTime\":749.2100000000323,\"pid\":959,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.2100000000323,\"pid\":960,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.2100000000323,\"pid\":961,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2448,2320,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18490.135429863847,\"onlineMoneyMade\":2448,\"onlineRunningTime\":749.2100000000323,\"pid\":962,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.0100000000323,\"pid\":963,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.0100000000323,\"pid\":964,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1472,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9905.429694569935,\"onlineMoneyMade\":1472,\"onlineRunningTime\":749.0100000000323,\"pid\":965,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.0100000000323,\"pid\":966,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1081,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8923.141249858418,\"onlineMoneyMade\":0,\"onlineRunningTime\":749.0100000000323,\"pid\":967,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2208,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10433.719278280325,\"onlineMoneyMade\":2208,\"onlineRunningTime\":749.0100000000323,\"pid\":968,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.8100000000322,\"pid\":969,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.8100000000322,\"pid\":970,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[336,288,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3890.6062533935724,\"onlineMoneyMade\":336,\"onlineRunningTime\":748.8100000000322,\"pid\":971,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-14\",\"moduleSequenceNumber\":755,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-14\",\"moduleSequenceNumber\":756,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-14\",\"moduleSequenceNumber\":757,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-14\",\"moduleSequenceNumber\":758,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-15\",\"httpPortOpen\":false,\"ip\":\"18.8.7.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.8100000000322,\"pid\":972,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.8100000000322,\"pid\":973,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[13295184,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10131.312188687732,\"onlineMoneyMade\":13295184,\"onlineRunningTime\":748.8100000000322,\"pid\":974,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,602]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3914.815931183945,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.8100000000322,\"pid\":975,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.8100000000322,\"pid\":976,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2960,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19300.952963046384,\"onlineMoneyMade\":2960,\"onlineRunningTime\":748.8100000000322,\"pid\":977,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,560]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3641.6892383106465,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.6100000000322,\"pid\":978,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.6100000000322,\"pid\":979,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2544,2784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16777.782562216886,\"onlineMoneyMade\":2544,\"onlineRunningTime\":748.6100000000322,\"pid\":980,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,462]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3813.590432409425,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.6100000000322,\"pid\":981,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.6100000000322,\"pid\":982,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2752,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19084.46121153805,\"onlineMoneyMade\":2752,\"onlineRunningTime\":748.6100000000322,\"pid\":983,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.6100000000322,\"pid\":984,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.6100000000322,\"pid\":985,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1536,1408,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10004.483991515632,\"onlineMoneyMade\":1536,\"onlineRunningTime\":748.6100000000322,\"pid\":986,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.4100000000321,\"pid\":987,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.4100000000321,\"pid\":988,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2288,1296,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10400.701179298425,\"onlineMoneyMade\":2288,\"onlineRunningTime\":748.4100000000321,\"pid\":989,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.4100000000321,\"pid\":990,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.4100000000321,\"pid\":991,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[464,368,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4593.0768269229675,\"onlineMoneyMade\":464,\"onlineRunningTime\":748.4100000000321,\"pid\":992,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-15\",\"moduleSequenceNumber\":759,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-15\",\"moduleSequenceNumber\":760,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-15\",\"moduleSequenceNumber\":761,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-15\",\"moduleSequenceNumber\":762,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-16\",\"httpPortOpen\":false,\"ip\":\"94.4.9.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.4100000000321,\"pid\":993,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.4100000000321,\"pid\":994,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14663568,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10131.312188687732,\"onlineMoneyMade\":14663568,\"onlineRunningTime\":748.4100000000321,\"pid\":995,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.2100000000321,\"pid\":996,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.2100000000321,\"pid\":997,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2976,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19378.989161010184,\"onlineMoneyMade\":2976,\"onlineRunningTime\":748.2100000000321,\"pid\":998,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.2100000000321,\"pid\":999,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.2100000000321,\"pid\":1000,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2768,2784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17402.07214592727,\"onlineMoneyMade\":2768,\"onlineRunningTime\":748.2100000000321,\"pid\":1001,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.2100000000321,\"pid\":1002,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.2100000000321,\"pid\":1003,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2528,2320,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18688.24402375525,\"onlineMoneyMade\":2528,\"onlineRunningTime\":748.2100000000321,\"pid\":1004,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.010000000032,\"pid\":1005,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.010000000032,\"pid\":1006,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1760,1376,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10367.683080316527,\"onlineMoneyMade\":1760,\"onlineRunningTime\":748.010000000032,\"pid\":1007,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.010000000032,\"pid\":1008,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1081,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8923.141249858418,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.010000000032,\"pid\":1009,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2080,1280,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10400.701179298425,\"onlineMoneyMade\":2080,\"onlineRunningTime\":748.010000000032,\"pid\":1010,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.010000000032,\"pid\":1011,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":748.010000000032,\"pid\":1012,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[528,384,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4809.221618778166,\"onlineMoneyMade\":528,\"onlineRunningTime\":748.010000000032,\"pid\":1013,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-16\",\"moduleSequenceNumber\":763,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-16\",\"moduleSequenceNumber\":764,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-16\",\"moduleSequenceNumber\":765,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-16\",\"moduleSequenceNumber\":766,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-17\",\"httpPortOpen\":false,\"ip\":\"48.3.9.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.810000000032,\"pid\":1014,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8503.065586934357,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.810000000032,\"pid\":1015,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14445616,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10131.312188687732,\"onlineMoneyMade\":14445616,\"onlineRunningTime\":747.810000000032,\"pid\":1016,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,602]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3914.815931183945,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.810000000032,\"pid\":1017,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.810000000032,\"pid\":1018,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2960,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19300.952963046384,\"onlineMoneyMade\":2960,\"onlineRunningTime\":747.810000000032,\"pid\":1019,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.810000000032,\"pid\":1020,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.810000000032,\"pid\":1021,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2912,2784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17636.18073981867,\"onlineMoneyMade\":2912,\"onlineRunningTime\":747.810000000032,\"pid\":1022,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.610000000032,\"pid\":1023,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.610000000032,\"pid\":1024,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2576,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18787.29832070095,\"onlineMoneyMade\":2576,\"onlineRunningTime\":747.610000000032,\"pid\":1025,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.610000000032,\"pid\":1026,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.610000000032,\"pid\":1027,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1664,1424,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10400.701179298429,\"onlineMoneyMade\":1664,\"onlineRunningTime\":747.610000000032,\"pid\":1028,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.610000000032,\"pid\":1029,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1081,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8923.141249858418,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.610000000032,\"pid\":1030,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[1936,1280,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9806.375397624233,\"onlineMoneyMade\":1936,\"onlineRunningTime\":747.610000000032,\"pid\":1031,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.4100000000319,\"pid\":1032,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,376,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5079.402608597163,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.4100000000319,\"pid\":1033,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[432,368,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4593.0768269229675,\"onlineMoneyMade\":432,\"onlineRunningTime\":747.4100000000319,\"pid\":1034,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-17\",\"moduleSequenceNumber\":767,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-17\",\"moduleSequenceNumber\":768,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-17\",\"moduleSequenceNumber\":769,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-17\",\"moduleSequenceNumber\":770,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-18\",\"httpPortOpen\":false,\"ip\":\"9.0.6.4\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.4100000000319,\"pid\":1035,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.4100000000319,\"pid\":1036,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14397232,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10131.312188687732,\"onlineMoneyMade\":14397232,\"onlineRunningTime\":747.4100000000319,\"pid\":1037,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,602]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3914.815931183945,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.4100000000319,\"pid\":1038,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.4100000000319,\"pid\":1039,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2944,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19222.916765082584,\"onlineMoneyMade\":2944,\"onlineRunningTime\":747.4100000000319,\"pid\":1040,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.2100000000319,\"pid\":1041,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.2100000000319,\"pid\":1042,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3056,2784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17792.253135746265,\"onlineMoneyMade\":3056,\"onlineRunningTime\":747.2100000000319,\"pid\":1043,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.0100000000318,\"pid\":1044,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.0100000000318,\"pid\":1045,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2608,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19084.46121153805,\"onlineMoneyMade\":2608,\"onlineRunningTime\":747.0100000000318,\"pid\":1046,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.0100000000318,\"pid\":1047,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.0100000000318,\"pid\":1048,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1504,1408,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10070.520189479432,\"onlineMoneyMade\":1504,\"onlineRunningTime\":747.0100000000318,\"pid\":1049,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.0100000000318,\"pid\":1050,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1081,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8923.141249858418,\"onlineMoneyMade\":0,\"onlineRunningTime\":747.0100000000318,\"pid\":1051,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2240,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10334.664981334627,\"onlineMoneyMade\":2240,\"onlineRunningTime\":747.0100000000318,\"pid\":1052,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.8100000000318,\"pid\":1053,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,376,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":5079.402608597163,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.8100000000318,\"pid\":1054,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[512,336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4593.0768269229675,\"onlineMoneyMade\":512,\"onlineRunningTime\":746.8100000000318,\"pid\":1055,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-18\",\"moduleSequenceNumber\":771,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-18\",\"moduleSequenceNumber\":772,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-18\",\"moduleSequenceNumber\":773,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-18\",\"moduleSequenceNumber\":774,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-19\",\"httpPortOpen\":false,\"ip\":\"27.4.2.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.8100000000318,\"pid\":1056,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8503.065586934357,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.8100000000318,\"pid\":1057,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[12729472,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10131.312188687732,\"onlineMoneyMade\":12729472,\"onlineRunningTime\":746.8100000000318,\"pid\":1058,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.8100000000318,\"pid\":1059,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.8100000000318,\"pid\":1060,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2992,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19457.02535897398,\"onlineMoneyMade\":2992,\"onlineRunningTime\":746.8100000000318,\"pid\":1061,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.6100000000317,\"pid\":1062,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.6100000000317,\"pid\":1063,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3328,2768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17844.277267722133,\"onlineMoneyMade\":3328,\"onlineRunningTime\":746.6100000000317,\"pid\":1064,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.6100000000317,\"pid\":1065,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.6100000000317,\"pid\":1066,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3360,2320,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19051.443112556153,\"onlineMoneyMade\":3360,\"onlineRunningTime\":746.6100000000317,\"pid\":1067,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.6100000000317,\"pid\":1068,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.6100000000317,\"pid\":1069,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1520,1440,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10103.538288461334,\"onlineMoneyMade\":1520,\"onlineRunningTime\":746.6100000000317,\"pid\":1070,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.4100000000317,\"pid\":1071,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1081,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8923.141249858418,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.4100000000317,\"pid\":1072,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2048,1264,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10004.48399151563,\"onlineMoneyMade\":2048,\"onlineRunningTime\":746.4100000000317,\"pid\":1073,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.4100000000317,\"pid\":1074,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.4100000000317,\"pid\":1075,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[448,368,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4430.968233031568,\"onlineMoneyMade\":448,\"onlineRunningTime\":746.4100000000317,\"pid\":1076,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-19\",\"moduleSequenceNumber\":775,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-19\",\"moduleSequenceNumber\":776,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-19\",\"moduleSequenceNumber\":777,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-19\",\"moduleSequenceNumber\":778,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-20\",\"httpPortOpen\":false,\"ip\":\"63.6.0.3\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.4100000000317,\"pid\":1077,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.4100000000317,\"pid\":1078,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[15397056,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10131.312188687732,\"onlineMoneyMade\":15397056,\"onlineRunningTime\":746.4100000000317,\"pid\":1079,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,602]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3914.815931183945,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.2100000000316,\"pid\":1080,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.2100000000316,\"pid\":1081,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[3008,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19457.02535897398,\"onlineMoneyMade\":3008,\"onlineRunningTime\":746.2100000000316,\"pid\":1082,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.2100000000316,\"pid\":1083,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16810.29764470184,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.2100000000316,\"pid\":1084,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3136,2768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17922.313465685933,\"onlineMoneyMade\":3136,\"onlineRunningTime\":746.2100000000316,\"pid\":1085,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,462]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3813.590432409425,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.2100000000316,\"pid\":1086,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.2100000000316,\"pid\":1087,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2992,2320,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18952.38881561045,\"onlineMoneyMade\":2992,\"onlineRunningTime\":746.2100000000316,\"pid\":1088,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.0100000000316,\"pid\":1089,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.0100000000316,\"pid\":1090,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1712,1376,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10070.520189479432,\"onlineMoneyMade\":1712,\"onlineRunningTime\":746.0100000000316,\"pid\":1091,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.0100000000316,\"pid\":1092,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1128,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9311.10391289574,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.0100000000316,\"pid\":1093,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2112,1280,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10004.48399151563,\"onlineMoneyMade\":2112,\"onlineRunningTime\":746.0100000000316,\"pid\":1094,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.0100000000316,\"pid\":1095,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":746.0100000000316,\"pid\":1096,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[480,336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4539.040628959167,\"onlineMoneyMade\":480,\"onlineRunningTime\":746.0100000000316,\"pid\":1097,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-20\",\"moduleSequenceNumber\":779,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-20\",\"moduleSequenceNumber\":780,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-20\",\"moduleSequenceNumber\":781,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-20\",\"moduleSequenceNumber\":782,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-21\",\"httpPortOpen\":false,\"ip\":\"7.6.2.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.8100000000316,\"pid\":1098,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8503.065586934357,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.8100000000316,\"pid\":1099,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14723088,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10131.312188687732,\"onlineMoneyMade\":14723088,\"onlineRunningTime\":745.8100000000316,\"pid\":1100,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4005.858162141711,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.8100000000316,\"pid\":1101,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.8100000000316,\"pid\":1102,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2976,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19378.989161010184,\"onlineMoneyMade\":2976,\"onlineRunningTime\":745.8100000000316,\"pid\":1103,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.8100000000316,\"pid\":1104,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16504.655869343627,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.8100000000316,\"pid\":1105,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2816,2768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17844.277267722133,\"onlineMoneyMade\":2816,\"onlineRunningTime\":745.8100000000316,\"pid\":1106,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,476]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3929.153778846074,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.6100000000315,\"pid\":1107,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.6100000000315,\"pid\":1108,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3328,2320,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18952.38881561045,\"onlineMoneyMade\":3328,\"onlineRunningTime\":745.6100000000315,\"pid\":1109,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.6100000000315,\"pid\":1110,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1222,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10087.029238970385,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.6100000000315,\"pid\":1111,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1696,1408,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10268.62878337083,\"onlineMoneyMade\":1696,\"onlineRunningTime\":745.6100000000315,\"pid\":1112,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.6100000000315,\"pid\":1113,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1081,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8923.141249858418,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.6100000000315,\"pid\":1114,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2304,1296,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10301.646882352727,\"onlineMoneyMade\":2304,\"onlineRunningTime\":745.6100000000315,\"pid\":1115,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.4100000000315,\"pid\":1116,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.4100000000315,\"pid\":1117,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[416,320,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4052.7148472849713,\"onlineMoneyMade\":416,\"onlineRunningTime\":745.4100000000315,\"pid\":1118,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-21\",\"moduleSequenceNumber\":783,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-21\",\"moduleSequenceNumber\":784,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-21\",\"moduleSequenceNumber\":785,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-21\",\"moduleSequenceNumber\":786,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-22\",\"httpPortOpen\":false,\"ip\":\"73.6.2.9\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.4100000000315,\"pid\":1119,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2585,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8660.529764470179,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.4100000000315,\"pid\":1120,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[14154752,3024,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10131.312188687732,\"onlineMoneyMade\":14154752,\"onlineRunningTime\":745.4100000000315,\"pid\":1121,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,602]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3914.815931183945,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.4100000000315,\"pid\":1122,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.4100000000315,\"pid\":1123,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2960,2976,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19274.940897058448,\"onlineMoneyMade\":2960,\"onlineRunningTime\":745.4100000000315,\"pid\":1124,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.2100000000314,\"pid\":1125,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16504.655869343627,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.2100000000314,\"pid\":1126,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2576,2768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16985.879090120347,\"onlineMoneyMade\":2576,\"onlineRunningTime\":745.2100000000314,\"pid\":1127,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,462]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3813.590432409425,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.2100000000314,\"pid\":1128,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2115,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17458.31983667951,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.2100000000314,\"pid\":1129,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3120,2320,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18754.28022171905,\"onlineMoneyMade\":3120,\"onlineRunningTime\":745.2100000000314,\"pid\":1130,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.0100000000314,\"pid\":1131,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.0100000000314,\"pid\":1132,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1552,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9872.411595588035,\"onlineMoneyMade\":1552,\"onlineRunningTime\":745.0100000000314,\"pid\":1133,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.0100000000314,\"pid\":1134,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1081,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8923.141249858418,\"onlineMoneyMade\":0,\"onlineRunningTime\":745.0100000000314,\"pid\":1135,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2400,1280,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10301.646882352727,\"onlineMoneyMade\":2400,\"onlineRunningTime\":745.0100000000314,\"pid\":1136,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.8100000000313,\"pid\":1137,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.8100000000313,\"pid\":1138,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[432,352,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4268.85963914017,\"onlineMoneyMade\":432,\"onlineRunningTime\":744.8100000000313,\"pid\":1139,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-22\",\"moduleSequenceNumber\":787,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-22\",\"moduleSequenceNumber\":788,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-22\",\"moduleSequenceNumber\":789,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-22\",\"moduleSequenceNumber\":790,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-23\",\"httpPortOpen\":false,\"ip\":\"44.0.3.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1023.05,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,616]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2063.785816214171,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.8100000000313,\"pid\":1140,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8503.065586934357,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.8100000000313,\"pid\":1141,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[13748144,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10077.70736229256,\"onlineMoneyMade\":13748144,\"onlineRunningTime\":744.8100000000313,\"pid\":1142,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,602]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3914.815931183945,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.8100000000313,\"pid\":1143,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,2773,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18032.864746134695,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.8100000000313,\"pid\":1144,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2976,2976,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":19352.97709502225,\"onlineMoneyMade\":2976,\"onlineRunningTime\":744.8100000000313,\"pid\":1145,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,574]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3732.7314692684126,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.6100000000313,\"pid\":1146,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,2538,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":16504.655869343627,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.6100000000313,\"pid\":1147,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2592,2768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17063.91528808414,\"onlineMoneyMade\":2592,\"onlineRunningTime\":744.6100000000313,\"pid\":1148,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,462]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3813.590432409425,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.6100000000313,\"pid\":1149,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2162,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17846.282499716835,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.6100000000313,\"pid\":1150,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2912,2320,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":18952.38881561045,\"onlineMoneyMade\":2912,\"onlineRunningTime\":744.6100000000313,\"pid\":1151,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,308]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2542.3936216062834,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.6100000000313,\"pid\":1152,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1175,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9699.066575933062,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.6100000000313,\"pid\":1153,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1440,1408,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":9773.357298642337,\"onlineMoneyMade\":1440,\"onlineRunningTime\":744.6100000000313,\"pid\":1154,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,280]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2311.266928732985,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.4100000000312,\"pid\":1155,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1034,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8535.178586821095,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.4100000000312,\"pid\":1156,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2160,1296,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":10202.592585407028,\"onlineMoneyMade\":2160,\"onlineRunningTime\":744.4100000000312,\"pid\":1157,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1134.7601572397916,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.4100000000312,\"pid\":1158,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":14,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,329,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4444.477282522517,\"onlineMoneyMade\":0,\"onlineRunningTime\":744.4100000000312,\"pid\":1159,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":47,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[384,304,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4052.7148472849713,\"onlineMoneyMade\":384,\"onlineRunningTime\":744.4100000000312,\"pid\":1160,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-23\",\"moduleSequenceNumber\":791,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-23\",\"moduleSequenceNumber\":792,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-23\",\"moduleSequenceNumber\":793,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-23\",\"moduleSequenceNumber\":794,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.0383,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":62068.43098532044,\"favor\":0.002,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.0248,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":13053.704759098851,\"favor\":0.002,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.0405,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":266.04235306508764,\"favor\":0.002,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":35.8436,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":5.5857,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":2.9365,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":33.6494809752057,\"favor\":0.0228,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"BitRunners\",\"playerReputation\":1079.2981362430746}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":205630.40338412015}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":2,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":191334.37304471363}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":28.2161,\"isBanned\":false,\"isMember\":true,\"name\":\"Aevum\",\"playerReputation\":35055.537671344726}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":53.9436,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":75940.62933445256}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":2.6257,\"isBanned\":false,\"isMember\":true,\"name\":\"Tetrads\",\"playerReputation\":12446.772192308123}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":29.4895,\"isBanned\":false,\"isMember\":true,\"name\":\"Slum Snakes\",\"playerReputation\":78277.75617731469}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":32.4213,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":41121.49439621174}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":2.6478,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":12447.816635030887}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":67.5443,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":92969.57340516686}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":true}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":true}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":20387.858983709437,\"lastPrice\":20328.840715632523,\"playerShares\":75000,\"playerAvgPx\":18956.229635829673,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.46,\"b\":true,\"otlkMag\":17.060470330031627,\"otlkMagForecast\":68.59270352462552,\"cap\":224302750,\"spreadPerc\":0.1,\"shareTxForMovement\":57329,\"shareTxUntilMovement\":18331,\"totalShares\":125200000,\"maxShares\":25000000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":85746.91580009535,\"lastPrice\":85530.99249515074,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.4,\"b\":false,\"otlkMag\":21.54886396399882,\"otlkMagForecast\":27.920227240638326,\"cap\":697947830,\"spreadPerc\":0.1,\"shareTxForMovement\":63642,\"shareTxUntilMovement\":19840,\"totalShares\":84800000,\"maxShares\":17000000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":40504.97406064668,\"lastPrice\":40326.814973540655,\"playerShares\":75000,\"playerAvgPx\":37747.7969055864,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":12.9946882068207,\"otlkMagForecast\":62.30100944696524,\"cap\":491751359,\"spreadPerc\":0.6,\"shareTxForMovement\":74866,\"shareTxUntilMovement\":44082,\"totalShares\":76700000,\"maxShares\":15300000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":39200.66418180656,\"lastPrice\":39361.47779063717,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":8.874709356633764,\"otlkMagForecast\":58.78654617798264,\"cap\":438432018,\"spreadPerc\":0.3,\"shareTxForMovement\":31919,\"shareTxUntilMovement\":23535,\"totalShares\":82600000,\"maxShares\":16500000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":127093.84834013885,\"lastPrice\":126558.68939686642,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":true,\"otlkMag\":8.517229075608249,\"otlkMagForecast\":58.29713946193705,\"cap\":110049031,\"spreadPerc\":0.3,\"shareTxForMovement\":81100,\"shareTxUntilMovement\":81100,\"totalShares\":53000000,\"maxShares\":10600000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":82057.50885070291,\"lastPrice\":81522.41936759403,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.04,\"b\":true,\"otlkMag\":6.9771645200782775,\"otlkMagForecast\":56.08998665506528,\"cap\":1197871215,\"spreadPerc\":0.2,\"shareTxForMovement\":76885,\"shareTxUntilMovement\":76885,\"totalShares\":27300000,\"maxShares\":5500000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":5685.166262490834,\"lastPrice\":5714.947125479175,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.83,\"b\":true,\"otlkMag\":6.952408850685494,\"otlkMagForecast\":58.31174593617849,\"cap\":231359786,\"spreadPerc\":0.1,\"shareTxForMovement\":85143,\"shareTxUntilMovement\":85143,\"totalShares\":72500000,\"maxShares\":14500000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":398933.37073881243,\"lastPrice\":402206.4742114439,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.3,\"b\":false,\"otlkMag\":24.035302396418356,\"otlkMagForecast\":24.985475321624474,\"cap\":75761213,\"spreadPerc\":0.3,\"shareTxForMovement\":66069,\"shareTxUntilMovement\":44216,\"totalShares\":67500000,\"maxShares\":13500000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":23177.036233763836,\"lastPrice\":23050.470812474665,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.87,\"b\":true,\"otlkMag\":6.830283867264307,\"otlkMagForecast\":57.407315415655134,\"cap\":360517964,\"spreadPerc\":0.5,\"shareTxForMovement\":63724,\"shareTxUntilMovement\":63724,\"totalShares\":59500000,\"maxShares\":11900000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":24564.83465165197,\"lastPrice\":24458.324303081914,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":7.4253497129522525,\"otlkMagForecast\":58.49722872231484,\"cap\":150737577,\"spreadPerc\":0.9,\"shareTxForMovement\":90550,\"shareTxUntilMovement\":90550,\"totalShares\":48800000,\"maxShares\":9800000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":5637.128710555457,\"lastPrice\":5657.052043566124,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.56,\"b\":false,\"otlkMag\":8.763840423165986,\"otlkMagForecast\":42.715904853172596,\"cap\":160441975,\"spreadPerc\":1,\"shareTxForMovement\":37827,\"shareTxUntilMovement\":36578,\"totalShares\":72700000,\"maxShares\":14500000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":3421.004123497528,\"lastPrice\":3405.315090402898,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":5.63607303966517,\"otlkMagForecast\":55.667287551585055,\"cap\":274084723,\"spreadPerc\":0.8,\"shareTxForMovement\":102638,\"shareTxUntilMovement\":102638,\"totalShares\":73000000,\"maxShares\":14600000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":5258.611881478302,\"lastPrice\":5281.843805270543,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":5.233720039771573,\"otlkMagForecast\":53.56323436735956,\"cap\":229427496,\"spreadPerc\":0.3,\"shareTxForMovement\":103641,\"shareTxUntilMovement\":103641,\"totalShares\":59100000,\"maxShares\":11800000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":6095.134939979674,\"lastPrice\":6117.8310460559305,\"playerShares\":75000,\"playerAvgPx\":6006.701909605494,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":true,\"otlkMag\":10.108001703051324,\"otlkMagForecast\":59.04710949828154,\"cap\":457057671,\"spreadPerc\":0.9,\"shareTxForMovement\":86830,\"shareTxUntilMovement\":50490,\"totalShares\":47800000,\"maxShares\":9600000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":6730.847697016407,\"lastPrice\":6755.486169156858,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":false,\"otlkMag\":7.144162074430298,\"otlkMagForecast\":42.90809807236841,\"cap\":73243206,\"spreadPerc\":0.8,\"shareTxForMovement\":93290,\"shareTxUntilMovement\":93290,\"totalShares\":56800000,\"maxShares\":11400000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":13716.920812611266,\"lastPrice\":13652.298417229877,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":false,\"otlkMag\":1.9383732662624409,\"otlkMagForecast\":49.46353855859835,\"cap\":221832107,\"spreadPerc\":0.9,\"shareTxForMovement\":74760,\"shareTxUntilMovement\":74760,\"totalShares\":57000000,\"maxShares\":11400000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":3233.816534812983,\"lastPrice\":3218.177256708959,\"playerShares\":75000,\"playerAvgPx\":2592.3404283301184,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":true,\"otlkMag\":12.16857673467585,\"otlkMagForecast\":59.84143719983924,\"cap\":353295577,\"spreadPerc\":1,\"shareTxForMovement\":101637,\"shareTxUntilMovement\":64424,\"totalShares\":41400000,\"maxShares\":8300000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":56786.40976658112,\"lastPrice\":56994.278141854316,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":false,\"otlkMag\":9.241729117514362,\"otlkMagForecast\":38.26252152714115,\"cap\":253947942,\"spreadPerc\":0.8,\"shareTxForMovement\":111343,\"shareTxUntilMovement\":7812,\"totalShares\":24500000,\"maxShares\":4900000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":16461.165182476903,\"lastPrice\":16537.0053788957,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":true,\"otlkMag\":6.990701695506918,\"otlkMagForecast\":56.00200065420125,\"cap\":295376191,\"spreadPerc\":0.5,\"shareTxForMovement\":79589,\"shareTxUntilMovement\":79589,\"totalShares\":32100000,\"maxShares\":6400000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":6475.298102774464,\"lastPrice\":6577.4663144121805,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.5,\"b\":false,\"otlkMag\":7.100351276589273,\"otlkMagForecast\":41.61735639168527,\"cap\":101833291,\"spreadPerc\":0.5,\"shareTxForMovement\":47385,\"shareTxUntilMovement\":19635,\"totalShares\":78400000,\"maxShares\":15700000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":2976.1259230915675,\"lastPrice\":2997.914321505357,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.16,\"b\":false,\"otlkMag\":8.927431808635037,\"otlkMagForecast\":42.43846310836779,\"cap\":145924042,\"spreadPerc\":0.5,\"shareTxForMovement\":105034,\"shareTxUntilMovement\":64562,\"totalShares\":44100000,\"maxShares\":8800000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":6094.082074721006,\"lastPrice\":6073.38349811793,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":false,\"otlkMag\":3.181252678122602,\"otlkMagForecast\":48.83601326565903,\"cap\":28073637,\"spreadPerc\":0.7,\"shareTxForMovement\":124942,\"shareTxUntilMovement\":124942,\"totalShares\":28600000,\"maxShares\":5700000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":1752.099076108892,\"lastPrice\":1771.4504910497749,\"playerShares\":75000,\"playerAvgPx\":1210.5452558946831,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.75,\"b\":true,\"otlkMag\":12.25122299540412,\"otlkMagForecast\":58.88015840738404,\"cap\":109180514,\"spreadPerc\":1.6,\"shareTxForMovement\":35525,\"shareTxUntilMovement\":5715,\"totalShares\":35700000,\"maxShares\":7100000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":423.3283371661311,\"lastPrice\":427.7366996819353,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.65,\"b\":false,\"otlkMag\":5.140146653871039,\"otlkMagForecast\":47.44497139716234,\"cap\":133362435,\"spreadPerc\":0.5,\"shareTxForMovement\":66313,\"shareTxUntilMovement\":66313,\"totalShares\":35200000,\"maxShares\":7000000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":5328.707929815828,\"lastPrice\":5361.329860998694,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.97,\"b\":false,\"otlkMag\":6.015331310214625,\"otlkMagForecast\":44.16638067998357,\"cap\":23655107,\"spreadPerc\":1,\"shareTxForMovement\":110066,\"shareTxUntilMovement\":110066,\"totalShares\":54700000,\"maxShares\":10900000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":48050.29418403601,\"lastPrice\":47409.970632594726,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.14,\"b\":false,\"otlkMag\":6.8463823292795905,\"otlkMagForecast\":41.39662393171169,\"cap\":20263421,\"spreadPerc\":1.2,\"shareTxForMovement\":38414,\"shareTxUntilMovement\":9836,\"totalShares\":12100000,\"maxShares\":2400000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":2372.7968169105343,\"lastPrice\":2357.0284503953244,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.06,\"b\":true,\"otlkMag\":5.33975630444266,\"otlkMagForecast\":54.97941822353986,\"cap\":62784249,\"spreadPerc\":0.6,\"shareTxForMovement\":30877,\"shareTxUntilMovement\":30877,\"totalShares\":22700000,\"maxShares\":4500000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":1505.7993397393498,\"lastPrice\":1512.736887381159,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":7.070340964683753,\"otlkMagForecast\":42.426354610734045,\"cap\":4146969,\"spreadPerc\":0.7,\"shareTxForMovement\":175587,\"shareTxUntilMovement\":175587,\"totalShares\":70500000,\"maxShares\":14100000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":146.66913475499535,\"lastPrice\":144.66956160576012,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.19,\"b\":true,\"otlkMag\":7.335468670654963,\"otlkMagForecast\":55.47640811836253,\"cap\":54722733,\"spreadPerc\":1.1,\"shareTxForMovement\":59995,\"shareTxUntilMovement\":43125,\"totalShares\":13200000,\"maxShares\":2600000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":1279.3816722814995,\"lastPrice\":1259.2742289760868,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.53,\"b\":false,\"otlkMag\":6.925900533077727,\"otlkMagForecast\":40.80615716033526,\"cap\":26794538,\"spreadPerc\":0.8,\"shareTxForMovement\":51515,\"shareTxUntilMovement\":38480,\"totalShares\":28800000,\"maxShares\":5800000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":13599.745793988015,\"lastPrice\":13731.068020529712,\"playerShares\":75000,\"playerAvgPx\":9028.065578978229,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.53,\"b\":true,\"otlkMag\":15.573541854736723,\"otlkMagForecast\":66.59948898620469,\"cap\":24152066,\"spreadPerc\":0.5,\"shareTxForMovement\":54604,\"shareTxUntilMovement\":41084,\"totalShares\":85200000,\"maxShares\":17000000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":21103.53439230139,\"lastPrice\":21208.754393837156,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":false,\"otlkMag\":9.792057526254219,\"otlkMagForecast\":41.56338512943053,\"cap\":313250777,\"spreadPerc\":0.6,\"shareTxForMovement\":148878,\"shareTxUntilMovement\":68518,\"totalShares\":15300000,\"maxShares\":3100000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":32403.833549012437,\"lastPrice\":32281.59105609217,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":false,\"otlkMag\":13.838401566363133,\"otlkMagForecast\":37.31034088532863,\"cap\":71685549,\"spreadPerc\":0.9,\"shareTxForMovement\":154806,\"shareTxUntilMovement\":92916,\"totalShares\":19200000,\"maxShares\":3800000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":1349903,\"lastUpdate\":1645743705013,\"ticksUntilCycle\":31}","SettingsSave":"{\"ActiveScriptsServerPageSize\":20,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-320,\"y\":265,\"opened\":false}}","VersionSave":"10","AllGangsSave":"","LastExportBonus":"1645665621379","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}","SaveTimestamp":"1645743705665"}}