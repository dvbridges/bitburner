{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":454,\"hp\":26,\"max_hp\":26,\"strength\":165,\"defense\":165,\"dexterity\":165,\"agility\":165,\"charisma\":88,\"intelligence\":0,\"hacking_chance_mult\":1.11459615813105,\"hacking_speed_mult\":1.1263854009236245,\"hacking_money_mult\":1.061520150601,\"hacking_grow_mult\":1.061520150601,\"hacking_exp\":43281322.33728135,\"strength_exp\":67227.5128942492,\"defense_exp\":67227.5128942492,\"dexterity_exp\":67248.53099323109,\"agility_exp\":67248.53099323109,\"charisma_exp\":6567.162476365032,\"intelligence_exp\":0,\"hacking_mult\":1.252248783660235,\"strength_mult\":1.061520150601,\"defense_mult\":1.061520150601,\"dexterity_mult\":1.061520150601,\"agility_mult\":1.061520150601,\"charisma_mult\":1.061520150601,\"hacking_exp_mult\":1.1676721656611,\"strength_exp_mult\":1.1676721656611,\"defense_exp_mult\":1.1676721656611,\"dexterity_exp_mult\":1.1676721656611,\"agility_exp_mult\":1.1676721656611,\"charisma_exp_mult\":1.1676721656611,\"company_rep_mult\":1.061520150601,\"faction_rep_mult\":1.061520150601,\"money\":417196350.20501214,\"city\":\"Volhaven\",\"location\":\"VitaLife\",\"jobs\":{\"FoodNStuff\":\"Employee\",\"VitaLife\":\"Junior Software Engineer\"},\"companyName\":\"VitaLife\",\"currentServer\":\"home\",\"purchasedServers\":[\"odin\",\"odin-0\",\"odin-1\",\"odin-2\",\"odin-3\",\"odin-4\",\"odin-5\",\"odin-6\",\"odin-7\",\"odin-8\",\"odin-9\",\"odin-10\",\"odin-11\",\"odin-12\",\"odin-13\",\"odin-14\",\"odin-15\",\"odin-16\",\"odin-17\",\"odin-18\",\"odin-19\",\"odin-20\",\"odin-21\",\"odin-22\",\"odin-23\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":182165.3999999917,\"ram\":64,\"totalMoneyGenerated\":988021186.6608986,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":174354.7999999864,\"ram\":64,\"totalMoneyGenerated\":912282740.4534284,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":174353.5999999864,\"ram\":64,\"totalMoneyGenerated\":911158323.764541,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":103761.79999999826,\"ram\":64,\"totalMoneyGenerated\":382482396.14371544,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":99693.19999999007,\"ram\":64,\"totalMoneyGenerated\":647793832.8375137,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":99687.59999999007,\"ram\":64,\"totalMoneyGenerated\":820343136.243187,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":99685.39999999007,\"ram\":64,\"totalMoneyGenerated\":371651279.85709715,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":99682.99999999008,\"ram\":64,\"totalMoneyGenerated\":371644850.97880465,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":99680.59999999007,\"ram\":64,\"totalMoneyGenerated\":371641049.16786295,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":471.79999999998194,\"ram\":64,\"totalMoneyGenerated\":4483734.051030804,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":471.39999999998196,\"ram\":64,\"totalMoneyGenerated\":4475946.264313578,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":470.999999999982,\"ram\":64,\"totalMoneyGenerated\":4468008.020483706,\"name\":\"hacknet-node-11\"}}],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"Slum Snakes\",\"Sector-12\",\"Netburners\",\"Tian Di Hui\",\"Tetrads\",\"Aevum\",\"CyberSec\",\"NiteSec\"],\"factionInvitations\":[],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"}],\"augmentations\":[{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":6,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"}],\"sourceFiles\":[],\"numPeopleKilled\":4,\"karma\":-56.35,\"crime_money_mult\":1.061520150601,\"crime_success_mult\":1.061520150601,\"isWorking\":true,\"focus\":false,\"workType\":\"Working for Company\",\"workCostMult\":3,\"workExpMult\":2,\"currentWorkFactionName\":\"\",\"currentWorkFactionDescription\":\"\",\"workHackExpGainRate\":0.21018098981899802,\"workStrExpGainRate\":0,\"workDefExpGainRate\":0,\"workDexExpGainRate\":0,\"workAgiExpGainRate\":0,\"workChaExpGainRate\":0.10509049490949901,\"workRepGainRate\":0.4779766991534065,\"workMoneyGainRate\":152.858901686544,\"workMoneyLossRate\":0,\"workHackExpGained\":311.6143355056521,\"workStrExpGained\":0,\"workDefExpGained\":0,\"workDexExpGained\":0,\"workAgiExpGained\":0,\"workChaExpGained\":155.80716775282605,\"workRepGained\":706.922148683957,\"workMoneyGained\":226628.60764047754,\"createProgramName\":\"\",\"createProgramReqLvl\":25,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":366600,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":28800000,\"work_money_mult\":1.061520150601,\"hacknet_node_money_mult\":1.061520150601,\"hacknet_node_purchase_cost_mult\":0.9414801494009999,\"hacknet_node_ram_cost_mult\":0.9414801494009999,\"hacknet_node_core_cost_mult\":0.9414801494009999,\"hacknet_node_level_cost_mult\":0.9414801494009999,\"hasWseAccount\":true,\"hasTixApiAccess\":true,\"has4SData\":true,\"has4SDataTixApi\":false,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":1,\"lastUpdate\":1645573088414,\"totalPlaytime\":395108800,\"playtimeSinceLastAug\":182878000,\"playtimeSinceLastBitnode\":395108800,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":-934003010,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":388516.375119966,\"gang\":0,\"hacking\":6285030591.265561,\"hacknet\":5790446484.449038,\"hacknet_expenses\":-4624560962.953126,\"hospitalization\":-6725000,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":417195350.20501214,\"work\":5268731.069651397,\"servers\":-1760000000,\"other\":-316400000,\"augmentations\":-4022250000}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":-934003010,\"class\":-2089674.4000000437,\"codingcontract\":0,\"corporation\":0,\"crime\":6626516.3751199655,\"gang\":0,\"hacking\":13452981225.098963,\"hacknet\":14965610633.72489,\"hacknet_expenses\":-10774183409.807798,\"hospitalization\":-36934451.957396284,\"infiltration\":1531701.4985711244,\"sleeves\":0,\"stock\":-4939068859.832475,\"total\":628393562.2223012,\"work\":14320159.169641702,\"servers\":-3717898016.5950418,\"other\":-630199587.2910845,\"augmentations\":-6778299663.70588}},\"scriptProdSinceLastAug\":4356012918,\"exploits\":[],\"achievements\":[{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1645178948427},{\"ID\":\"NS2\",\"unlockedOn\":1645180688422},{\"ID\":\"TOR\",\"unlockedOn\":1645192788148},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1645193148154},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1645193988156},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1645201346201},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1645201646188},{\"ID\":\"WORKOUT\",\"unlockedOn\":1645204586189},{\"ID\":\"FROZE\",\"unlockedOn\":1645207110260},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1645218712775},{\"ID\":\"TRAVEL\",\"unlockedOn\":1645218772781},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1645261128514},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1645292693406},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1645292693414},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1645316650399},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1645319346575},{\"ID\":\"4S\",\"unlockedOn\":1645354568255},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1645390232477},{\"ID\":\"NITESEC\",\"unlockedOn\":1645483036483}],\"factionWorkType\":\"Faction Hacking Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":true,\"ip\":\"63.5.0.7\",\"isConnectedTo\":true,\"maxRam\":1024,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"democracy-is-dead.lit\",\"secret-societies.lit\",\"synthetic-muscles.lit\",\"the-failed-frontier.lit\",\"brighter-than-the-sun.lit\",\"the-hidden-world.lit\",\"the-new-god.lit\",\"tensions-in-tech-race.lit\",\"new-triads.lit\",\"simulated-reality.lit\",\"man-and-machine.lit\",\"A-Green-Tomorrow.lit\",\"history-of-synthoids.lit\",\"coded-intelligence.lit\",\"beyond-man.lit\",\"alpha-omega.lit\",\"cost-of-immortality.lit\",\"sector-12-crime.lit\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"fl1ght.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\",\"DeepscanV1.exe\",\"AutoLink.exe\",\"ServerProfiler.exe\",\"AutoLink.exe\",\"relaySMTP.exe\",\"HTTPWorm.exe\",\"DeepscanV2.exe\",\"SQLInject.exe\"],\"ramUsed\":1009.4000000000001,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.4846731280133,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.279,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.409999999995,\"pid\":1,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.318885290095,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.305,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.409999999995,\"pid\":2,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2939360,1952,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":837.5293122738827,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.322,\"onlineExpGained\":6539.788820211148,\"onlineMoneyMade\":2939360,\"onlineRunningTime\":579.409999999995,\"pid\":3,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.68075710966974,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.345,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.409999999995,\"pid\":4,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1620,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.0542616961204,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.359,\"onlineExpGained\":10534.886725112938,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.409999999995,\"pid\":5,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[3948256,1920,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1286.98955409187,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.371000000001,\"onlineExpGained\":9208.271359728358,\"onlineMoneyMade\":3948256,\"onlineRunningTime\":579.409999999995,\"pid\":6,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.68181384985064,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.384,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.2099999999949,\"pid\":7,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1016.04633571432,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.395,\"onlineExpGained\":9071.7080132917,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.2099999999949,\"pid\":8,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[4663568,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1106.3625392016738,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.406,\"onlineExpGained\":8219.812852186895,\"onlineMoneyMade\":4663568,\"onlineRunningTime\":579.2099999999949,\"pid\":9,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.4270246131666,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.415,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.2099999999949,\"pid\":10,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.710265265412,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.436,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.2099999999949,\"pid\":11,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[4948592,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1232.3910907756533,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.449,\"onlineExpGained\":8188.488547511156,\"onlineMoneyMade\":4948592,\"onlineRunningTime\":579.2099999999949,\"pid\":12,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.9522095884387,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.465,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.0099999999949,\"pid\":13,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.8572994454518,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.478000000001,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.0099999999949,\"pid\":14,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[5787488,896,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":659.1883054512136,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.494,\"onlineExpGained\":4688.570055429769,\"onlineMoneyMade\":5787488,\"onlineRunningTime\":579.0099999999949,\"pid\":15,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.47643153582386,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.503,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.0099999999949,\"pid\":16,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,450,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.4295267659801,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.512,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.0099999999949,\"pid\":17,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[7832592,752,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":716.5108046801065,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.525,\"onlineExpGained\":4556.497659502172,\"onlineMoneyMade\":7832592,\"onlineRunningTime\":579.0099999999949,\"pid\":18,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.537,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.0099999999949,\"pid\":19,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.6776576184686,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.546,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.0099999999949,\"pid\":20,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[3775936,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":562.8565283676863,\"offlineMoneyMade\":0,\"offlineRunningTime\":12499.554,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":3775936,\"onlineRunningTime\":579.0099999999949,\"pid\":21,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t\\n\\tvar baseName = ns.args[0]\\n\\tvar botCount = ns.args[1]\\n\\tvar ram = 1024\\n\\n\\tfor (let i = 0; i < botCount; i++) {\\n\\t\\tlet botName = baseName\\n\\t\\tawait ns.purchaseServer(botName, ram)\\n\\t}\\n}\",\"filename\":\"setupBotnet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"setupBotnet.js\",\"url\":\"blob:file:///4178c3cb-848a-4749-a975-c692216119a2\",\"moduleSequenceNumber\":3979}],\"dependents\":[],\"ramUsage\":3.85,\"server\":\"home\",\"moduleSequenceNumber\":398,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push('home')\\n\\n\\tvar blockedServers = ns.getPurchasedServers()\\n\\tblockedServers.push(\\\"darkweb\\\")\\n\\tblockedServers.push(\\\"home\\\")\\n\\n\\tvar servers = ns.scan(ns.getHostname());\\n\\tvar hackFiles = [\\\"weaken.script\\\", \\\"grow.script\\\", \\\"hacker.script\\\", \\\"deployHack.script\\\"]\\n\\n\\tservers = servers.filter(s => !blockedServers.includes(s))\\n\\n\\t// Copy all hack files to servers\\n\\tfor (let eachServer in ownedServers) {\\n\\t\\tlet current = ownedServers[eachServer]\\n\\t\\tif (current != 'home') {\\n\\t\\t\\tawait ns.scp(hackFiles, 'home', current)\\n\\t\\t}\\n\\t}\\n\\n\\t// Deploy the hack files at each of the servers\\n\\tfor (let eachServer in ownedServers) {\\n\\t\\tlet currentServer = ownedServers[eachServer]\\n\\t\\tfor (let eachTarget in servers) {\\n\\t\\t\\tlet currentTarget = servers[eachTarget]\\n\\t\\t\\tif (!blockedServers.includes(currentTarget)) {\\n\\t\\t\\t\\tns.print(\\\"deploying botnet: \\\", currentServer)\\n\\t\\t\\t\\t// await ns.exec(\\\"deployHack.script\\\", \\\"home\\\", 6, currentServer, currentTarget, 3, 12, 4)\\n\\t\\t\\n\\t\\t\\t\\tlet weaken = 15\\n\\t\\t\\t\\tlet grow = 45\\n\\t\\t\\t\\tlet hack = 16\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tawait ns.exec(\\\"weaken.script\\\", currentServer, weaken, currentTarget)\\n\\t\\t\\t\\tawait ns.exec(\\\"grow.script\\\", currentServer, grow, currentTarget)\\n\\t\\t\\t\\tawait ns.exec(\\\"hacker.script\\\", currentServer, hack, currentTarget)\\n\\t\\t\\t\\tawait ns.sleep(5)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"deployBotnet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"deployBotnet.js\",\"url\":\"blob:file:///fd2f4a93-00d4-42d0-8b03-9f450f9ea698\",\"moduleSequenceNumber\":8071}],\"dependents\":[],\"ramUsage\":6.4,\"server\":\"home\",\"moduleSequenceNumber\":399,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet servers = ns.getPurchasedServers()\\n\\tns.exit()\\n\\tfor (let s in servers) {\\n\\t\\tlet current = servers[s]\\n\\t\\tns.deleteServer(current)\\n\\t}\\n}\",\"filename\":\"deleteServer.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"deleteServer.js\",\"url\":\"blob:file:///f7286121-4b25-4b24-8361-01e348fbbe71\",\"moduleSequenceNumber\":3978}],\"dependents\":[],\"ramUsage\":6.1,\"server\":\"home\",\"moduleSequenceNumber\":400,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push('home')\\n\\tfor (let eachBot in ownedServers) {\\n\\t\\tlet currentBot = ownedServers[eachBot]\\n\\t\\tns.killall(currentBot)\\n\\t}\\n}\",\"filename\":\"killBotnet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"killBotnet.js\",\"url\":\"blob:file:///dd979684-15c8-4f79-9b51-2f7d0791c995\",\"moduleSequenceNumber\":3578}],\"dependents\":[],\"ramUsage\":4.35,\"server\":\"home\",\"moduleSequenceNumber\":401,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog(\\\"ALL\\\")\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\tvar currentServer\\n\\tstack.push(ns.getHostname())\\n\\tvar portHackers = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe', 'SQLInject.exe']\\n\\tvar hackablePorts = ns.ls(\\\"home\\\", \\\".exe\\\").filter(a => portHackers.includes(a))\\n\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// open ports\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tns.print(\\\"opening ports on \\\", currentTarget)\\n\\t\\tif (ns.fileExists(portHackers[0], 'home')) {\\n\\t\\t\\tns.brutessh(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[1], 'home')) {\\n\\t\\t\\tns.ftpcrack(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[2], 'home')) {\\n\\t\\t\\tns.relaysmtp(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[3], 'home')) {\\n\\t\\t\\tns.httpworm(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[4], 'home')) {\\n\\t\\t\\tns.sqlinject(currentTarget)\\n\\t\\t}\\n\\t}\\n\\n\\t// get root access\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tlet nPorts = ns.getServerNumPortsRequired(currentTarget);\\n\\t\\t// check if we can run nuke \\n\\t\\tif (nPorts <= hackablePorts.length) {\\n\\t\\t\\tns.print(\\\"running nuke on \\\", currentTarget)\\n\\t\\t\\tif (ns.fileExists(\\\"NUKE.exe\\\", 'home')) {\\n\\t\\t\\t\\tns.nuke(currentTarget)\\n\\t\\t\\t}\\t\\n\\t\\t}\\t\\n\\t}\\n}\",\"filename\":\"walkNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"walkNodes.js\",\"url\":\"blob:file:///f8ba07ba-c78a-45fb-8a0d-92c8a1a918d5\",\"moduleSequenceNumber\":1589}],\"dependents\":[],\"ramUsage\":4.8,\"server\":\"home\",\"moduleSequenceNumber\":3180,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":403,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":404,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"home\",\"moduleSequenceNumber\":405,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":406,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\ttargetName = args[0]\\n\\n\\tweakenThreads = 1\\n\\tgrowThreads = 1\\n\\thackThreads = 1\\n\\n\\twhile (ns.getServerRequiredHackingLevel(targetName) > ns.getHackingLevel()) {\\n\\t\\tawait ns.sleep(5000)\\n\\t}\\n\\t\\n\\tns.exec(\\\"weaken.script\\\", targetName, weakenThreads, targetName)\\n\\tns.exec(\\\"grow.script\\\", targetName, growThreads, targetName)\\n\\tns.exec(\\\"hacker.script\\\", targetName, hackThreads, targetName)\\n}\",\"filename\":\"test.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.05,\"server\":\"home\",\"moduleSequenceNumber\":407,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog(\\\"ALL\\\")\\n\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar deployStack = []\\n\\tvar currentServer\\n\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\townedServers.push(\\\"home\\\")\\n\\n\\tvar hackFiles = [\\\"weaken.script\\\", \\\"grow.script\\\", \\\"hacker.script\\\", \\\"deployHack.script\\\"]\\n\\tvar portHackers = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe', 'SQLInject.exe']\\n\\n\\tstack.push(ns.getHostname())\\n\\t\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\t// ns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// copy over hack files\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\t// ns.print(\\\"copying hacker files to \\\", currentTarget)\\n\\t\\tawait ns.scp(hackFiles, \\\"home\\\", currentTarget)\\n\\t}\\n\\n\\t// start hacks from each node\\n\\tfor (let each in visited) {\\n\\t\\tcurrentServer = visited[each]\\n\\t\\tdeployStack.push(...ns.scan(currentServer))\\n\\t\\t\\n\\t\\t// Remove out of level and unopned port nodes, and owned nodes\\n\\t\\tvar removeNodes = []\\n\\t\\tfor (let each in deployStack) {\\n\\t\\t\\tlet currentTarget = deployStack[each]\\n\\t\\t\\tlet hackable = (ns.getServerRequiredHackingLevel(currentTarget) <= ns.getHackingLevel())\\n\\t\\t\\tlet portsOpened = (ns.getServerNumPortsRequired(currentTarget) <= portHackers.length)\\n\\t\\t\\tlet ownedServer = ownedServers.includes(currentTarget)\\n\\t\\t\\tlet haveNoRam = (ns.getServerMaxRam(currentTarget) < 1)\\n\\t\\t\\tif (!hackable || !portsOpened || ownedServer || haveNoRam) {\\n\\t\\t\\t\\tremoveNodes.push(currentTarget)\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// remove unwanted nodes\\n\\t\\tdeployStack = deployStack.filter(node => !removeNodes.includes(node))\\n\\t\\tvar copyStack =  [...deployStack]\\n\\t\\tvar totalServers = deployStack.length\\n\\n\\t\\twhile (deployStack.length > 0) {\\n\\t\\t\\tlet currentTarget = deployStack.pop()\\t\\t\\t\\n\\t\\t\\t// calculate Ram per server\\n\\t\\t\\tlet serverRam = ns.getServerMaxRam(currentServer)\\n\\t\\t\\tlet availableRam = parseFloat(serverRam) / totalServers\\n\\t\\t\\t\\n\\t\\t\\tns.print(\\\"server \\\", currentServer)\\n\\t\\t\\tns.print(\\\"target \\\", currentTarget)\\n\\t\\t\\tns.print(\\\"server ram \\\", serverRam)\\n\\t\\t\\tns.print(\\\"Available ram \\\", availableRam)\\n\\t\\t\\tns.print(\\\"n servers \\\", totalServers)\\n\\t\\t\\tns.print(\\\"targets \\\", copyStack)\\n\\n\\t\\t\\t// calculate how many threads can be run per hack type\\n\\t\\t\\tlet threads = calculateThreads(ns, availableRam)\\n\\t\\t\\tlet totalThreads = threads.reduce((a, b) => a + b, 0)\\n\\n\\t\\t\\tns.print(\\\"Allowed threads: \\\", threads)\\n\\t\\t\\tns.print(currentServer, \\\" \\\", currentTarget)\\n\\t\\n\\t\\t\\tawait ns.exec(\\\"deployHack.script\\\", \\\"home\\\", totalThreads, currentServer, currentTarget, threads[0], threads[1], threads[2])\\n\\t\\t\\tawait ns.sleep(200)\\t\\n\\t\\t}\\t\\n\\t}\\n\\tns.enableLog(\\\"ALL\\\")\\n}\\n\\nfunction calculateThreads(ns, serverRam) {\\n\\tvar weaken = 1.95 \\n\\tvar grow = 1.95 \\n\\tvar hack = 1.70\\n\\n\\tvar modifier1 = parseFloat((parseFloat(2)/16).toFixed(3))\\n\\tvar modifier2 = parseFloat((parseFloat(10)/16).toFixed(3))\\n\\tvar modifier3 = parseFloat((parseFloat(4)/16).toFixed(3))\\n\\n\\tvar sumOf = weaken + grow + hack\\n\\tvar freeRam = serverRam\\n\\tvar threads = [1, 1, 1]\\n\\t\\n\\tfor (let i = 0; i < 1000; i++) {\\t\\t\\n\\t\\tlet t1 = (threads[0] + modifier1)\\n\\t\\tlet t2 = (threads[1] + modifier2)\\n\\t\\tlet t3 = (threads[2] + modifier3)\\n\\n \\t\\tlet w = weaken * (t1).toFixed(0)\\n\\t\\tlet g = grow * (t2).toFixed(0)\\n\\t\\tlet h = hack * (t3).toFixed(0)\\n\\t\\t\\n\\t\\tsumOf = w + g + h\\n\\t\\t\\n\\t\\tif (sumOf < freeRam) {\\n\\t\\t\\tthreads[0] = t1\\n\\t\\t\\tthreads[1] = t2\\n\\t\\t\\tthreads[2] = t3\\n\\t\\t} else {\\n\\t\\t\\treturn [\\n\\t\\t\\t\\tparseInt(threads[0].toFixed(0)),\\n\\t\\t\\t\\tparseInt(threads[1].toFixed(0)),\\n\\t\\t\\t\\tparseInt(threads[2].toFixed(0))]\\n\\t\\t}\\n\\t}\\n\\treturn threads\\n}\",\"filename\":\"deployToNodes.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"deployToNodes.js\",\"url\":\"blob:file:///f9a4db0b-a787-4085-b4a5-90a0a67de0ad\",\"moduleSequenceNumber\":1590}],\"dependents\":[],\"ramUsage\":6.7,\"server\":\"home\",\"moduleSequenceNumber\":1590,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\tvar currentServer\\n\\tstack.push(ns.getHostname())\\n\\tvar portHackers = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe']\\n\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// open ports\\n\\townedServers.push(\\\"home\\\")\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tif (!ownedServers.includes(currentTarget)) {\\n\\t\\t\\tns.killall(currentTarget)\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"killNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"killNodes.js\",\"url\":\"blob:file:///55b6fe30-6d96-4912-9891-ce156d7b5116\",\"moduleSequenceNumber\":5147}],\"dependents\":[],\"ramUsage\":4.6,\"server\":\"home\",\"moduleSequenceNumber\":409,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    ns.print(\\\"hello\\\")\\r\\n}\",\"filename\":\"test-vscode.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":410,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t// ns.disableLog(\\\"ALL\\\")\\n\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar deployStack = []\\n\\tvar currentServer\\n\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\townedServers.push(\\\"home\\\")\\n\\t\\n\\tstack.push(ns.getHostname())\\n\\t\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\t// ns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// copy over lit files\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tlet files = ns.ls(currentTarget)\\n\\t\\tlet validFiles = files.filter(f => f.endsWith(\\\".lit\\\")) \\n\\t\\tfor (let file in validFiles) {\\n\\t\\t\\tlet currentFile = validFiles[file]\\n\\t\\t\\tns.print(currentFile, \\\" \\\", currentTarget)\\n\\t\\t\\tawait ns.scp(currentFile, currentTarget, \\\"home\\\")\\n\\t\\t}\\n\\t}\\n\\n\\t\\n\\t\\n\\tns.enableLog(\\\"ALL\\\")\\n}\",\"filename\":\"getLit.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"getLit.js\",\"url\":\"blob:file:///7287c303-642b-41e8-abb5-a4895c344622\",\"moduleSequenceNumber\":3175}],\"dependents\":[],\"ramUsage\":4.9,\"server\":\"home\",\"moduleSequenceNumber\":411,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\tvar currentServer\\n\\tstack.push(ns.getHostname())\\n\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"scanNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"scanNodes.js\",\"url\":\"blob:file:///35e54f48-e8cc-45d2-9623-da46449e4575\",\"moduleSequenceNumber\":135}],\"dependents\":[],\"ramUsage\":4.1,\"server\":\"home\",\"moduleSequenceNumber\":412,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet currentStock = \\\"FSIG\\\"\\n\\tlet sym = ns.stock.getSymbols()\\n\\tfor (let each in sym) {\\n\\t\\tlet current = sym[each]\\n\\t\\t// need 4S TIX api\\n\\t\\tns.print(ns.stock.getForecast(current))\\n\\t}\\n\\t\\n\\tns.print(ns.stock.purchase4SMarketData())\\n\\tns.print(ns.stock.getAskPrice(currentStock))\\n\\t// Other things to consinder\\n\\t// ns.codingcontract\\n}\",\"filename\":\"stockMarket.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"stockMarket.js\",\"url\":\"blob:file:///7d08cf64-eb09-43fb-8775-f5102e1e021c\",\"moduleSequenceNumber\":889}],\"dependents\":[],\"ramUsage\":10.6,\"server\":\"home\",\"moduleSequenceNumber\":413,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.purchase4SMarketData\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t// Start walk from home\\n\\tvar target = ns.args[0]\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\n\\tvar startNode = \\\"home\\\"\\n\\tvar visited = []\\n\\tvar path = []\\n\\tvar stack = []\\n\\tvar nextStack = []\\n\\tstack.push(startNode)\\n\\tvar found = false\\n\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\tnextStack.push(...ns.scan(stack))\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\t\\n\\t\\t\\tnextStack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\tns.print(path)\\n}\",\"filename\":\"findPathToNode.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"findPathToNode.js\",\"url\":\"blob:file:///a4716c5d-fbbb-4a18-93c2-4bd641ff5074\",\"moduleSequenceNumber\":1991}],\"dependents\":[],\"ramUsage\":4.05,\"server\":\"home\",\"moduleSequenceNumber\":414,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"odin\",\"odin-0\",\"odin-1\",\"odin-2\",\"odin-3\",\"odin-4\",\"odin-5\",\"odin-6\",\"odin-7\",\"odin-8\",\"odin-9\",\"odin-10\",\"odin-11\",\"odin-12\",\"odin-13\",\"odin-14\",\"odin-15\",\"odin-16\",\"odin-17\",\"odin-18\",\"odin-19\",\"odin-20\",\"odin-21\",\"odin-22\",\"odin-23\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"readme.txt\",\"text\":\"Exposing servers on network\\r\\n---------------------------\\r\\n\\r\\nFirst, open ports on all accessible servers, note to add any additional .exe files as requires\\r\\n$ walkNodes.js\\r\\n\\r\\nNext, we want to set up our botnet. However, we want to do several things\\r\\n\\r\\nGet each node to hack available servers\\r\\nEach node must calculate how much RAM it has, and how many threads can be Running\\r\\nReceive a hack script which calculates when to weaken, grow and hack\\r\\nNumber of threads determined by RAM\\r\\nThe total RAM cost can be calculated by simply multiplying the base RAM cost of the script with the number of threads\\r\\n1) write the hack script\\r\\n2) calculate its ram usage\\r\\n3) calculate how many threads each function (grow etc) should use, relative to RAM available\\r\\n4) calculate cost to run for each available servers\\r\\n5) combine cost so that all servers can be hacked, based on RAM available\\r\\n\\r\\nRunning a Botnet\\r\\n----------------\\r\\n\\r\\nTo purchase a botnet army of size N, where each will be called 'odin_N'\\r\\n$ setupBotnet.js N \\r\\n\\r\\nTo deploy botnet using N threads\\r\\n$ deployBotnet.js N\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1.002,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"33.5.0.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"ecorp\",\"moduleSequenceNumber\":415,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"ecorp\",\"moduleSequenceNumber\":416,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"ecorp\",\"moduleSequenceNumber\":417,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"ecorp\",\"moduleSequenceNumber\":418,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":46814868507,\"moneyMax\":1170371712675,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1391,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"44.7.6.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"megacorp\",\"moduleSequenceNumber\":419,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"megacorp\",\"moduleSequenceNumber\":420,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"megacorp\",\"moduleSequenceNumber\":421,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"megacorp\",\"moduleSequenceNumber\":422,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":59209134677,\"moneyMax\":1480228366925,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1232,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"97.4.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"b-and-a\",\"moduleSequenceNumber\":423,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"b-and-a\",\"moduleSequenceNumber\":424,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"b-and-a\",\"moduleSequenceNumber\":425,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"b-and-a\",\"moduleSequenceNumber\":426,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"4sigma\",\"ecorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":23609893927,\"moneyMax\":590247348175,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1119,\"serverGrowth\":80}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"65.6.1.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"blade\",\"moduleSequenceNumber\":427,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"blade\",\"moduleSequenceNumber\":428,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"blade\",\"moduleSequenceNumber\":429,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"blade\",\"moduleSequenceNumber\":430,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnitek\",\"megacorp\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":38441237744,\"moneyMax\":961030943600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1067,\"serverGrowth\":60}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"41.5.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nwo\",\"moduleSequenceNumber\":431,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nwo\",\"moduleSequenceNumber\":432,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nwo\",\"moduleSequenceNumber\":433,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"nwo\",\"moduleSequenceNumber\":434,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\".\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":35519516090,\"moneyMax\":887987902250,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1094,\"serverGrowth\":78}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"71.2.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"clarkinc\",\"moduleSequenceNumber\":435,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"clarkinc\",\"moduleSequenceNumber\":436,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"clarkinc\",\"moduleSequenceNumber\":437,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"clarkinc\",\"moduleSequenceNumber\":438,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":50,\"minDifficulty\":17,\"moneyAvailable\":18595327536,\"moneyMax\":464883188400,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1154,\"serverGrowth\":63}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"77.6.5.0\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnitek\",\"moduleSequenceNumber\":439,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnitek\",\"moduleSequenceNumber\":440,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omnitek\",\"moduleSequenceNumber\":441,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"omnitek\",\"moduleSequenceNumber\":442,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"fulcrumtech\",\"blade\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":16122030693,\"moneyMax\":403050767325,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":905,\"serverGrowth\":98}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"29.9.9.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"4sigma\",\"moduleSequenceNumber\":443,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"4sigma\",\"moduleSequenceNumber\":444,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"4sigma\",\"moduleSequenceNumber\":445,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"4sigma\",\"moduleSequenceNumber\":446,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"helios\",\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":21878321258,\"moneyMax\":546958031450,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1172,\"serverGrowth\":85}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-601398-Sector-12.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[8,-3,3,4,4,8,-8,-4,-7,-3,5,7,-5,0,5,-5,-7,-6,-2,-10,8,-6,10,0,-8,6,-3,9,-4,-9,-3,7,-4,-4,-1,4,-10,6,-2,-8],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"57.4.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":447,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":448,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":449,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":450,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":22063742406,\"moneyMax\":551593560150,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1287,\"serverGrowth\":91}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"85.0.5.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":451,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":452,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":453,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":454,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":1515329495,\"moneyMax\":37883237375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1119,\"serverGrowth\":85}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-858349-FoodNStuff.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"72690751390\",0],\"reward\":{\"name\":\"FoodNStuff\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"18.3.4.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":455,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":456,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":457,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":458,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1218,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"24.5.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"stormtech\",\"moduleSequenceNumber\":459,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"stormtech\",\"moduleSequenceNumber\":460,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"stormtech\",\"moduleSequenceNumber\":461,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"stormtech\",\"moduleSequenceNumber\":462,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":1142805160,\"moneyMax\":28570129000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1047,\"serverGrowth\":72}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"45.8.1.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"defcomm\",\"moduleSequenceNumber\":463,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"defcomm\",\"moduleSequenceNumber\":464,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"defcomm\",\"moduleSequenceNumber\":465,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"defcomm\",\"moduleSequenceNumber\":466,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":831280811,\"moneyMax\":20782020275,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":901,\"serverGrowth\":61}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"77.1.3.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"infocomm\",\"moduleSequenceNumber\":467,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"infocomm\",\"moduleSequenceNumber\":468,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"infocomm\",\"moduleSequenceNumber\":469,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"infocomm\",\"moduleSequenceNumber\":470,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":687102481,\"moneyMax\":17177562025,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":888,\"serverGrowth\":47}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"80.8.9.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"helios\",\"moduleSequenceNumber\":471,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"helios\",\"moduleSequenceNumber\":472,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"helios\",\"moduleSequenceNumber\":473,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"helios\",\"moduleSequenceNumber\":474,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"microdyne\",\"4sigma\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":717952687,\"moneyMax\":17948817175,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":811,\"serverGrowth\":74}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"62.3.6.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"vitalife\",\"moduleSequenceNumber\":475,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"vitalife\",\"moduleSequenceNumber\":476,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"vitalife\",\"moduleSequenceNumber\":477,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"vitalife\",\"moduleSequenceNumber\":478,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"run4theh111z\",\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":718186347,\"moneyMax\":17954658675,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":802,\"serverGrowth\":62}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"31.8.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"icarus\",\"moduleSequenceNumber\":479,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"icarus\",\"moduleSequenceNumber\":480,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"icarus\",\"moduleSequenceNumber\":481,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"icarus\",\"moduleSequenceNumber\":482,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"unitalife\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":951540387,\"moneyMax\":23788509675,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":912,\"serverGrowth\":95}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"41.1.0.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"univ-energy\",\"moduleSequenceNumber\":483,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"univ-energy\",\"moduleSequenceNumber\":484,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"univ-energy\",\"moduleSequenceNumber\":485,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"univ-energy\",\"moduleSequenceNumber\":486,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1195323089,\"moneyMax\":29883077225,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":839,\"serverGrowth\":90}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"76.9.3.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"titan-labs\",\"moduleSequenceNumber\":487,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"titan-labs\",\"moduleSequenceNumber\":488,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"titan-labs\",\"moduleSequenceNumber\":489,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"titan-labs\",\"moduleSequenceNumber\":490,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"taiyang-digital\",\"stormtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":855716075,\"moneyMax\":21392901875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":847,\"serverGrowth\":63}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"66.0.3.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"microdyne\",\"moduleSequenceNumber\":491,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"microdyne\",\"moduleSequenceNumber\":492,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"microdyne\",\"moduleSequenceNumber\":493,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"microdyne\",\"moduleSequenceNumber\":494,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nova-med\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":596734583,\"moneyMax\":14918364575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":840,\"serverGrowth\":86}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"14.7.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":495,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":496,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":497,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":498,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zeus-med\",\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":843034008,\"moneyMax\":21075850200,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":902,\"serverGrowth\":79}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"74.0.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":499,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":500,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":501,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":502,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"rho-construction\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":821553154,\"moneyMax\":20538828850,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":862,\"serverGrowth\":77}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"45.9.8.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aerocorp\",\"moduleSequenceNumber\":503,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aerocorp\",\"moduleSequenceNumber\":504,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"aerocorp\",\"moduleSequenceNumber\":505,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"aerocorp\",\"moduleSequenceNumber\":506,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"millenium-fitness\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":1173075193,\"moneyMax\":29326879825,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":852,\"serverGrowth\":64}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"62.8.6.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnia\",\"moduleSequenceNumber\":507,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnia\",\"moduleSequenceNumber\":508,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omnia\",\"moduleSequenceNumber\":509,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"omnia\",\"moduleSequenceNumber\":510,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"global-pharm\",\"defcomm\",\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":988517663,\"moneyMax\":24712941575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":887,\"serverGrowth\":67}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"90.4.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-def\",\"moduleSequenceNumber\":511,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-def\",\"moduleSequenceNumber\":512,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zb-def\",\"moduleSequenceNumber\":513,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zb-def\",\"moduleSequenceNumber\":514,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"icarus\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":948059693,\"moneyMax\":23701492325,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":795,\"serverGrowth\":73}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"26.6.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":515,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":516,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":517,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":518,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nova-med\",\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":813696226,\"moneyMax\":20342405650,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":782,\"serverGrowth\":73}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"25.3.5.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"solaris\",\"moduleSequenceNumber\":519,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"solaris\",\"moduleSequenceNumber\":520,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"solaris\",\"moduleSequenceNumber\":521,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"solaris\",\"moduleSequenceNumber\":522,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"deltaone\",\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":739815020,\"moneyMax\":18495375500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":823,\"serverGrowth\":80}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"30.0.9.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"deltaone\",\"moduleSequenceNumber\":523,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"deltaone\",\"moduleSequenceNumber\":524,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"deltaone\",\"moduleSequenceNumber\":525,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"deltaone\",\"moduleSequenceNumber\":526,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"galactic-cyber\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":1455837033,\"moneyMax\":36395925825,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":815,\"serverGrowth\":62}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"30.1.2.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"global-pharm\",\"moduleSequenceNumber\":527,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"global-pharm\",\"moduleSequenceNumber\":528,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"global-pharm\",\"moduleSequenceNumber\":529,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"global-pharm\",\"moduleSequenceNumber\":530,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"millenium-fitness\",\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1744782662,\"moneyMax\":43619566550,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":802,\"serverGrowth\":88}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"89.2.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nova-med\",\"moduleSequenceNumber\":531,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nova-med\",\"moduleSequenceNumber\":532,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nova-med\",\"moduleSequenceNumber\":533,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"nova-med\",\"moduleSequenceNumber\":534,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zeus-med\",\"microdyne\",\"applied-energetics\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1249635245,\"moneyMax\":31240881125,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":791,\"serverGrowth\":77}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"9.7.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zeus-med\",\"moduleSequenceNumber\":535,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zeus-med\",\"moduleSequenceNumber\":536,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zeus-med\",\"moduleSequenceNumber\":537,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zeus-med\",\"moduleSequenceNumber\":538,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":1353435682,\"moneyMax\":33835892050,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":802,\"serverGrowth\":70}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"45.1.6.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"unitalife\",\"moduleSequenceNumber\":539,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"unitalife\",\"moduleSequenceNumber\":540,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"unitalife\",\"moduleSequenceNumber\":541,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"unitalife\",\"moduleSequenceNumber\":542,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"aerocorp\",\"icarus\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1099379380,\"moneyMax\":27484484500,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":807,\"serverGrowth\":75}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"91.8.1.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":543,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":544,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":545,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":546,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":739435794,\"moneyMax\":18485894850,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":673,\"serverGrowth\":63}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"83.7.3.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rho-construction\",\"moduleSequenceNumber\":547,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rho-construction\",\"moduleSequenceNumber\":548,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"rho-construction\",\"moduleSequenceNumber\":549,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"rho-construction\",\"moduleSequenceNumber\":550,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":574695581,\"moneyMax\":14367389525,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":481,\"serverGrowth\":45}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"33.3.1.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":551,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":552,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":553,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":554,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":52,\"minDifficulty\":17,\"moneyAvailable\":663047938,\"moneyMax\":16576198450,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":561,\"serverGrowth\":53}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"27.2.9.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aevum-police\",\"moduleSequenceNumber\":555,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aevum-police\",\"moduleSequenceNumber\":556,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"aevum-police\",\"moduleSequenceNumber\":557,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"aevum-police\",\"moduleSequenceNumber\":558,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":232476560,\"moneyMax\":5811914000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":436,\"serverGrowth\":36}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-66104.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[45,23,8],[13,16,38],[17,8,23],[22,1,12],[47,7,41],[6,2,19],[24,20,15],[28,27,27],[8,15,8],[37,28,6],[49,36,12],[29,37,28]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-772372-FoodNStuff.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[104,155,39,34,182,37,37,2,163,143,156,159,124,13,173,14,52,176,98,124,105,79,160,29,164,191],\"reward\":{\"name\":\"FoodNStuff\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"61.6.5.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":559,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":560,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":561,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":562,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"the-hub\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":245002764,\"moneyMax\":6125069100,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":371,\"serverGrowth\":45}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"63.5.6.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-institute\",\"moduleSequenceNumber\":563,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-institute\",\"moduleSequenceNumber\":564,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zb-institute\",\"moduleSequenceNumber\":565,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zb-institute\",\"moduleSequenceNumber\":566,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":838545105,\"moneyMax\":20963627625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":767,\"serverGrowth\":78}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"94.6.1.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"summit-uni\",\"moduleSequenceNumber\":567,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"summit-uni\",\"moduleSequenceNumber\":568,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"summit-uni\",\"moduleSequenceNumber\":569,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"summit-uni\",\"moduleSequenceNumber\":570,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":45,\"minDifficulty\":15,\"moneyAvailable\":346661906,\"moneyMax\":8666547650,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":461,\"serverGrowth\":56}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"67.6.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"syscore\",\"moduleSequenceNumber\":571,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"syscore\",\"moduleSequenceNumber\":572,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"syscore\",\"moduleSequenceNumber\":573,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"syscore\",\"moduleSequenceNumber\":574,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":417952270,\"moneyMax\":10448806750,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":563,\"serverGrowth\":68}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-278474.cct\",\"type\":\"Array Jumping Game\",\"data\":[4,0,8,2],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"2.4.0.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"catalyst\",\"moduleSequenceNumber\":575,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"catalyst\",\"moduleSequenceNumber\":576,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"catalyst\",\"moduleSequenceNumber\":577,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"catalyst\",\"moduleSequenceNumber\":578,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":502297104,\"moneyMax\":12557427600,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":431,\"serverGrowth\":27}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"59.0.9.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":7.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,0,8]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":677.3041968410263,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.186,\"onlineExpGained\":119.28204871794574,\"onlineMoneyMade\":0,\"onlineRunningTime\":9680.61000000144,\"pid\":22,\"ramUsage\":1.95,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,24,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1931.5818345200823,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.27799999999,\"onlineExpGained\":357.8461461538373,\"onlineMoneyMade\":0,\"onlineRunningTime\":9680.61000000144,\"pid\":23,\"ramUsage\":1.95,\"server\":\"the-hub\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[2352357,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2975.967472615121,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.354,\"onlineExpGained\":525.5865271634482,\"onlineMoneyMade\":2352357,\"onlineRunningTime\":9680.410000001439,\"pid\":24,\"ramUsage\":1.7,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"the-hub\",\"moduleSequenceNumber\":579,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"the-hub\",\"moduleSequenceNumber\":580,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"the-hub\",\"moduleSequenceNumber\":581,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"the-hub\",\"moduleSequenceNumber\":582,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omega-net\",\"rothman-uni\",\"zb-institute\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":43,\"hackDifficulty\":43,\"minDifficulty\":14,\"moneyAvailable\":182041176,\"moneyMax\":4551029400,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":304,\"serverGrowth\":47}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":true,\"ip\":\"17.8.8.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"comptek\",\"moduleSequenceNumber\":583,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"comptek\",\"moduleSequenceNumber\":584,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"comptek\",\"moduleSequenceNumber\":585,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"comptek\",\"moduleSequenceNumber\":586,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"silver-helix\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":236889903,\"moneyMax\":5922247575,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":387,\"serverGrowth\":57}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"27.1.0.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,0,45]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3175.589521648318,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.428,\"onlineExpGained\":607.9072270927456,\"onlineMoneyMade\":0,\"onlineRunningTime\":9680.210000001438,\"pid\":25,\"ramUsage\":1.95,\"server\":\"netlink\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,180,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12549.7389414031,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.51,\"onlineExpGained\":2431.628908370982,\"onlineMoneyMade\":0,\"onlineRunningTime\":9680.210000001438,\"pid\":26,\"ramUsage\":1.95,\"server\":\"netlink\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[12287128,152,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12541.920169986208,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.59599999999,\"onlineExpGained\":2539.701304298581,\"onlineMoneyMade\":12287128,\"onlineRunningTime\":9680.010000001437,\"pid\":27,\"ramUsage\":1.7,\"server\":\"netlink\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"netlink\",\"moduleSequenceNumber\":587,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"netlink\",\"moduleSequenceNumber\":588,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"netlink\",\"moduleSequenceNumber\":589,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"netlink\",\"moduleSequenceNumber\":590,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":417,\"serverGrowth\":45}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"8.4.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":591,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":592,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":593,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":594,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"neo-net\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":83292164,\"moneyMax\":2082304100,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":253,\"serverGrowth\":42}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"2.2.1.6\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"n00dles\",\"moduleSequenceNumber\":595,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"n00dles\",\"moduleSequenceNumber\":596,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"n00dles\",\"moduleSequenceNumber\":597,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"n00dles\",\"moduleSequenceNumber\":598,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":2.9280000000000017,\"minDifficulty\":1,\"moneyAvailable\":1750000,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"47.0.2.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":599,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":600,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":601,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":602,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":3.8320000000000007,\"minDifficulty\":3,\"moneyAvailable\":223.16127013050982,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"71.2.0.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":603,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":604,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":605,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":606,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":6.597999999999994,\"minDifficulty\":3,\"moneyAvailable\":575.2538683805776,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"18.0.4.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":15.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,0,0,39]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":671.2703139583334,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.668,\"onlineExpGained\":117,\"onlineMoneyMade\":0,\"onlineRunningTime\":9683.410000001453,\"pid\":28,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.746,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":9683.210000001452,\"pid\":29,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,0,69]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3248.9925821382176,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.818,\"onlineExpGained\":569.5622074377713,\"onlineMoneyMade\":0,\"onlineRunningTime\":9683.210000001452,\"pid\":30,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1239,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5149.141094531251,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.892,\"onlineExpGained\":939.75,\"onlineMoneyMade\":0,\"onlineRunningTime\":9683.210000001452,\"pid\":31,\"ramUsage\":1.7,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,101,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4785.263453970234,\"offlineMoneyMade\":0,\"offlineRunningTime\":94544.96,\"onlineExpGained\":833.706999292968,\"onlineMoneyMade\":0,\"onlineRunningTime\":9683.01000000145,\"pid\":32,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,0,46]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3199.5082647151507,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.036,\"onlineExpGained\":540.84689715308,\"onlineMoneyMade\":0,\"onlineRunningTime\":9683.01000000145,\"pid\":33,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[7776831,300,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14409.327815312394,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.10500000001,\"onlineExpGained\":2540.3299904199216,\"onlineMoneyMade\":7776831,\"onlineRunningTime\":9683.01000000145,\"pid\":34,\"ramUsage\":1.7,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,69,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4072.0860018361013,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.172,\"onlineExpGained\":811.2703457296203,\"onlineMoneyMade\":0,\"onlineRunningTime\":9682.81000000145,\"pid\":35,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"joesguns\",\"moduleSequenceNumber\":607,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"joesguns\",\"moduleSequenceNumber\":608,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"joesguns\",\"moduleSequenceNumber\":609,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"joesguns\",\"moduleSequenceNumber\":610,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\",\"zer0\",\"max-hardware\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5,\"minDifficulty\":5,\"moneyAvailable\":241.93042631659227,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"69.7.5.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":27.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,0,8]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":677.3108319049862,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.254,\"onlineExpGained\":119.28204871794574,\"onlineMoneyMade\":0,\"onlineRunningTime\":9681.810000001446,\"pid\":36,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,24,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1931.6011909317035,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.331,\"onlineExpGained\":357.8461461538373,\"onlineMoneyMade\":0,\"onlineRunningTime\":9681.610000001445,\"pid\":37,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,0,15]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1058.5396880836415,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.405,\"onlineExpGained\":202.63574236424856,\"onlineMoneyMade\":0,\"onlineRunningTime\":9681.610000001445,\"pid\":38,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[4006998,52,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4841.4565559464345,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.472,\"onlineExpGained\":916.9807495192074,\"onlineMoneyMade\":4006998,\"onlineRunningTime\":9681.410000001442,\"pid\":39,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,40,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2788.857460551001,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.541,\"onlineExpGained\":540.3619796379961,\"onlineMoneyMade\":0,\"onlineRunningTime\":9681.410000001442,\"pid\":40,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,217]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9466.773627627099,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.607,\"onlineExpGained\":1791.2318697680664,\"onlineMoneyMade\":0,\"onlineRunningTime\":9681.210000001442,\"pid\":41,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[7979486,100,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7547.016589028413,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.67199999999,\"onlineExpGained\":1513.0135429863892,\"onlineMoneyMade\":7979486,\"onlineRunningTime\":9681.210000001442,\"pid\":42,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,708,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32256.823545586536,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.737,\"onlineExpGained\":5844.203519796285,\"onlineMoneyMade\":0,\"onlineRunningTime\":9681.210000001442,\"pid\":43,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[13345788,2336,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":105718.38208625455,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.80900000001,\"onlineExpGained\":18832.698206800666,\"onlineMoneyMade\":13345788,\"onlineRunningTime\":9681.01000000144,\"pid\":44,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zer0\",\"moduleSequenceNumber\":611,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zer0\",\"moduleSequenceNumber\":612,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zer0\",\"moduleSequenceNumber\":613,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zer0\",\"moduleSequenceNumber\":614,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"joesguns\",\"silver-helix\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8.977999999999975,\"minDifficulty\":8,\"moneyAvailable\":87873078.2457857,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"43.5.3.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":15.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,0,38]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2069.0759849432743,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.888,\"onlineExpGained\":380.2292537707304,\"onlineMoneyMade\":0,\"onlineRunningTime\":9684.210000001456,\"pid\":45,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,112,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5432.941330657261,\"offlineMoneyMade\":0,\"offlineRunningTime\":94545.952,\"onlineExpGained\":1120.6756953242584,\"onlineMoneyMade\":0,\"onlineRunningTime\":9684.210000001456,\"pid\":46,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,26]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2150.1768373017967,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.018,\"onlineExpGained\":351.2352867646975,\"onlineMoneyMade\":0,\"onlineRunningTime\":9684.010000001455,\"pid\":47,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[11292659,134,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6883.486885722936,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.08300000001,\"onlineExpGained\":1465.8838336161054,\"onlineMoneyMade\":11292659,\"onlineRunningTime\":9684.010000001455,\"pid\":48,\"ramUsage\":1.7,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,98,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7430.389748868763,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.148,\"onlineExpGained\":1323.8868501130905,\"onlineMoneyMade\":0,\"onlineRunningTime\":9684.010000001455,\"pid\":49,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[13150779,144,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":11554.361113242801,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.22,\"onlineExpGained\":2063.5073097425898,\"onlineMoneyMade\":13150779,\"onlineRunningTime\":9683.810000001455,\"pid\":50,\"ramUsage\":1.7,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nectar-net\",\"moduleSequenceNumber\":615,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nectar-net\",\"moduleSequenceNumber\":616,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nectar-net\",\"moduleSequenceNumber\":617,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"nectar-net\",\"moduleSequenceNumber\":618,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"iron-gym\",\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7.603999999999976,\"minDifficulty\":7,\"moneyAvailable\":13776589.897446895,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"89.6.7.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,0,207]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9747.107574611651,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.291,\"onlineExpGained\":1708.6866223133125,\"onlineMoneyMade\":0,\"onlineRunningTime\":9682.210000001447,\"pid\":51,\"ramUsage\":1.95,\"server\":\"neo-net\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,909,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43067.87884734472,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.35600000001,\"onlineExpGained\":7503.362993636736,\"onlineMoneyMade\":0,\"onlineRunningTime\":9682.010000001446,\"pid\":52,\"ramUsage\":1.95,\"server\":\"neo-net\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[30029300,1168,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":56543.09080464005,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.41200000001,\"onlineExpGained\":9963.211367788286,\"onlineMoneyMade\":30029300,\"onlineRunningTime\":9681.810000001446,\"pid\":53,\"ramUsage\":1.7,\"server\":\"neo-net\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"neo-net\",\"moduleSequenceNumber\":619,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"neo-net\",\"moduleSequenceNumber\":620,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"neo-net\",\"moduleSequenceNumber\":621,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"neo-net\",\"moduleSequenceNumber\":622,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"max-hardware\",\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8.783999999999986,\"minDifficulty\":8,\"moneyAvailable\":5056677.9143749215,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"81.1.5.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":60.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,0,230]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":15997.74205909756,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.48199999999,\"onlineExpGained\":2704.2344857653943,\"onlineMoneyMade\":0,\"onlineRunningTime\":9680.410000001439,\"pid\":54,\"ramUsage\":1.95,\"server\":\"silver-helix\",\"threads\":5,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,1311,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":77370.55543910022,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.54000000001,\"onlineExpGained\":15414.136568862774,\"onlineMoneyMade\":0,\"onlineRunningTime\":9680.410000001439,\"pid\":55,\"ramUsage\":1.95,\"server\":\"silver-helix\",\"threads\":19,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[196295544,1608,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":93939.90742393276,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.61,\"onlineExpGained\":19846.729617269495,\"onlineMoneyMade\":196295544,\"onlineRunningTime\":9680.210000001438,\"pid\":56,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":8,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"silver-helix\",\"moduleSequenceNumber\":623,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"silver-helix\",\"moduleSequenceNumber\":624,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"silver-helix\",\"moduleSequenceNumber\":625,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"silver-helix\",\"moduleSequenceNumber\":626,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zer0\",\"comptek\",\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":18.72200000000005,\"minDifficulty\":10,\"moneyAvailable\":48261174.2916629,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"20.7.0.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":627,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":628,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":629,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":630,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5.768000000000001,\"minDifficulty\":5,\"moneyAvailable\":246.46938897245536,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"31.2.6.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":631,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":632,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":633,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":634,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":6.6320000000000014,\"minDifficulty\":5,\"moneyAvailable\":256.3662120703689,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"22.4.4.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,0,435]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":23517.41534843075,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.66799999999,\"onlineExpGained\":4352.624352375459,\"onlineMoneyMade\":0,\"onlineRunningTime\":9683.810000001455,\"pid\":57,\"ramUsage\":1.95,\"server\":\"phantasy\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,2205,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":120882.12170263252,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.741,\"onlineExpGained\":22063.302751696338,\"onlineMoneyMade\":0,\"onlineRunningTime\":9683.610000001454,\"pid\":58,\"ramUsage\":1.95,\"server\":\"phantasy\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[64754372,3080,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":167590.72767781594,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.80200000001,\"onlineExpGained\":31128.768644230575,\"onlineMoneyMade\":64754372,\"onlineRunningTime\":9683.610000001454,\"pid\":59,\"ramUsage\":1.7,\"server\":\"phantasy\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"phantasy\",\"moduleSequenceNumber\":635,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"phantasy\",\"moduleSequenceNumber\":636,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"phantasy\",\"moduleSequenceNumber\":637,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"phantasy\",\"moduleSequenceNumber\":638,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nectar-net\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7.667999999999988,\"minDifficulty\":7,\"moneyAvailable\":55421217.12113465,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"56.9.1.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,0,120]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7452.212917830381,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.874,\"onlineExpGained\":1410.9049490949917,\"onlineMoneyMade\":0,\"onlineRunningTime\":9682.610000001448,\"pid\":60,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,332,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19141.185280399128,\"offlineMoneyMade\":0,\"offlineRunningTime\":94546.945,\"onlineExpGained\":3903.5036924961446,\"onlineMoneyMade\":0,\"onlineRunningTime\":9682.410000001448,\"pid\":61,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":4,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,428]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18608.607780881168,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.01999999999,\"onlineExpGained\":3532.936591063283,\"onlineMoneyMade\":0,\"onlineRunningTime\":9682.410000001448,\"pid\":62,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[5571954,446,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":26605.83845743414,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.08200000001,\"onlineExpGained\":5549.559466440275,\"onlineMoneyMade\":5571954,\"onlineRunningTime\":9682.410000001448,\"pid\":63,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1416,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":64514.46999391665,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.15299999999,\"onlineExpGained\":11688.40703959257,\"onlineMoneyMade\":0,\"onlineRunningTime\":9682.210000001447,\"pid\":64,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":4,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[12885444,2322,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":105150.63677050726,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.212,\"onlineExpGained\":18708.88033561855,\"onlineMoneyMade\":12885444,\"onlineRunningTime\":9682.010000001446,\"pid\":65,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"max-hardware\",\"moduleSequenceNumber\":639,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"max-hardware\",\"moduleSequenceNumber\":640,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"max-hardware\",\"moduleSequenceNumber\":641,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"max-hardware\",\"moduleSequenceNumber\":642,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"joesguns\",\"neo-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":12.35399999999998,\"minDifficulty\":5,\"moneyAvailable\":56154259.26826595,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"66.2.5.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,0,138]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9598.711521046793,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.27900000001,\"onlineExpGained\":1622.5406914592393,\"onlineMoneyMade\":0,\"onlineRunningTime\":9681.01000000144,\"pid\":66,\"ramUsage\":1.95,\"server\":\"omega-net\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,621,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36649.464022529566,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.337,\"onlineExpGained\":7301.433111566559,\"onlineMoneyMade\":0,\"onlineRunningTime\":9681.01000000144,\"pid\":67,\"ramUsage\":1.95,\"server\":\"omega-net\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[93252544,808,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":47793.842493456694,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.40299999999,\"onlineExpGained\":9958.63743236212,\"onlineMoneyMade\":93252544,\"onlineRunningTime\":9680.81000000144,\"pid\":68,\"ramUsage\":1.7,\"server\":\"omega-net\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omega-net\",\"moduleSequenceNumber\":643,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omega-net\",\"moduleSequenceNumber\":644,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omega-net\",\"moduleSequenceNumber\":645,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"omega-net\",\"moduleSequenceNumber\":646,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zer0\",\"the-hub\",\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":34,\"hackDifficulty\":30.656000000000112,\"minDifficulty\":11,\"moneyAvailable\":58983328.16001842,\"moneyMax\":1506189100,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":191,\"serverGrowth\":32}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"91.9.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":647,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":648,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":649,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":650,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":40,\"hackDifficulty\":40,\"minDifficulty\":13,\"moneyAvailable\":44033322,\"moneyMax\":1100833050,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":238,\"serverGrowth\":28}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"99.2.1.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,0,432]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":23332.98046898424,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.466,\"onlineExpGained\":4322.606253393559,\"onlineMoneyMade\":0,\"onlineRunningTime\":9684.410000001457,\"pid\":69,\"ramUsage\":1.95,\"server\":\"iron-gym\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,2205,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":120882.96155901188,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.53300000001,\"onlineExpGained\":22063.302751696338,\"onlineMoneyMade\":0,\"onlineRunningTime\":9684.410000001457,\"pid\":70,\"ramUsage\":1.95,\"server\":\"iron-gym\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[62850040,3104,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":168945.49238249834,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.606,\"onlineExpGained\":31308.877238121982,\"onlineMoneyMade\":62850040,\"onlineRunningTime\":9684.210000001456,\"pid\":71,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"iron-gym\",\"moduleSequenceNumber\":651,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"iron-gym\",\"moduleSequenceNumber\":652,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"iron-gym\",\"moduleSequenceNumber\":653,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"iron-gym\",\"moduleSequenceNumber\":654,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":100,\"minDifficulty\":10,\"moneyAvailable\":500000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"63.6.4.9\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":655,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":656,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":657,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":658,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"aerocorp\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":46,\"hackDifficulty\":46,\"minDifficulty\":15,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":491,\"serverGrowth\":43}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"76.0.3.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":659,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":660,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":661,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":662,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":57,\"minDifficulty\":19,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1065,\"serverGrowth\":60}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"36.9.4.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":663,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":664,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":665,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":666,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":44,\"minDifficulty\":15,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":708,\"serverGrowth\":50}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"79.9.4.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":667,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":668,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":669,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":670,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nova-med\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":514,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"40.4.6.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":671,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":672,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":673,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":674,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"comptek\",\"lexo-corp\",\"rho-construction\",\"alpha-ent\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":356,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"23.1.1.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":15.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,0,76]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4138.218882452741,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.672,\"onlineExpGained\":760.4585075414608,\"onlineMoneyMade\":0,\"onlineRunningTime\":9683.610000001454,\"pid\":72,\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,224,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10866.05736109169,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.736,\"onlineExpGained\":2241.351390648517,\"onlineMoneyMade\":0,\"onlineRunningTime\":9683.410000001453,\"pid\":73,\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"threads\":4,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[25014462,296,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14730.627295283508,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.82400000001,\"onlineExpGained\":3141.8943601055066,\"onlineMoneyMade\":25014462,\"onlineRunningTime\":9683.410000001453,\"pid\":74,\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"threads\":2,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":675,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":676,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":677,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":678,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"phantasy\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":220,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"96.0.4.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\".\",\"moduleSequenceNumber\":679,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\".\",\"moduleSequenceNumber\":680,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\".\",\"moduleSequenceNumber\":681,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\".\",\"moduleSequenceNumber\":682,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"helios\",\"nwo\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":505,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"78.2.4.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":7.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,212]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9251.757442032496,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.891,\"onlineExpGained\":1749.9592460406914,\"onlineMoneyMade\":0,\"onlineRunningTime\":9682.81000000145,\"pid\":75,\"ramUsage\":1.95,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,708,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32257.46919616875,\"offlineMoneyMade\":0,\"offlineRunningTime\":94547.959,\"onlineExpGained\":5844.203519796285,\"onlineMoneyMade\":0,\"onlineRunningTime\":9682.610000001448,\"pid\":76,\"ramUsage\":1.95,\"server\":\"CSEC\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[6381523,1166,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":52738.2938846233,\"offlineMoneyMade\":0,\"offlineRunningTime\":94548.025,\"onlineExpGained\":9391.585529163909,\"onlineMoneyMade\":6381523,\"onlineRunningTime\":9682.610000001448,\"pid\":77,\"ramUsage\":1.7,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"CSEC\",\"moduleSequenceNumber\":683,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"CSEC\",\"moduleSequenceNumber\":684,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"CSEC\",\"moduleSequenceNumber\":685,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"CSEC\",\"moduleSequenceNumber\":686,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"joesguns\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":1.064,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":55,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"91.2.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"The-Cave\",\"moduleSequenceNumber\":687,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"The-Cave\",\"moduleSequenceNumber\":688,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"The-Cave\",\"moduleSequenceNumber\":689,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"The-Cave\",\"moduleSequenceNumber\":690,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"31.4.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":0}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"5.1.1.2\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"darkweb\",\"moduleSequenceNumber\":691,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"darkweb\",\"moduleSequenceNumber\":692,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"darkweb\",\"moduleSequenceNumber\":693,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"darkweb\",\"moduleSequenceNumber\":694,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin\",\"httpPortOpen\":false,\"ip\":\"34.6.8.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,405]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":218.119347313542,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.053,\"onlineExpGained\":1356.8721681278234,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.6099999999967,\"pid\":78,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.3585654252587,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.063,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.6099999999967,\"pid\":79,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[3440192,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.6438142072913,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.07,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":3440192,\"onlineRunningTime\":587.6099999999967,\"pid\":80,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,420]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":423.37584074711475,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.08,\"onlineExpGained\":2731.2669287329863,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.6099999999967,\"pid\":81,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.153758278969,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.086,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.6099999999967,\"pid\":82,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[3675120,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1332.2243507863575,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.096,\"onlineExpGained\":7465.462938536824,\"onlineMoneyMade\":3675120,\"onlineRunningTime\":587.6099999999967,\"pid\":83,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7012958034395,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.103000000001,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":84,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.130773749593,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.112000000001,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":85,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[4345952,1712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1196.7461103271494,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.119,\"onlineExpGained\":8792.078303921426,\"onlineMoneyMade\":4345952,\"onlineRunningTime\":587.4099999999967,\"pid\":86,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.4454167261151,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.128,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":87,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.7823891753756,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.135,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":88,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[4467536,1376,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1261.12156719117,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.145,\"onlineExpGained\":7924.343755655956,\"onlineMoneyMade\":4467536,\"onlineRunningTime\":587.4099999999967,\"pid\":89,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,195]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.48201193849033,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.152,\"onlineExpGained\":1609.632325367615,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":90,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.892535947959,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.161,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":91,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[5424496,944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":773.8714765001,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.168,\"onlineExpGained\":5315.913936085868,\"onlineMoneyMade\":5424496,\"onlineRunningTime\":587.4099999999967,\"pid\":92,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.48222690007225,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.177,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":93,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.8937225358911,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.184000000001,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":94,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[6852848,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":831.1969519437484,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.193000000001,\"onlineExpGained\":4688.570055429771,\"onlineMoneyMade\":6852848,\"onlineRunningTime\":587.4099999999967,\"pid\":95,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.2,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":96,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.705604464603,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.208,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":97,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[3170064,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.1647199800485,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.215,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":3170064,\"onlineRunningTime\":587.4099999999967,\"pid\":98,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin\",\"moduleSequenceNumber\":695,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin\",\"moduleSequenceNumber\":696,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin\",\"moduleSequenceNumber\":697,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin\",\"moduleSequenceNumber\":698,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-0\",\"httpPortOpen\":false,\"ip\":\"5.6.0.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.497864940759,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.224,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":99,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.367359967089,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.231,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":100,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2605664,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.6564709024123,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.24,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":2605664,\"onlineRunningTime\":587.4099999999967,\"pid\":101,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,420]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":423.38149701667203,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.247,\"onlineExpGained\":2731.2669287329863,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":102,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.1744866440529,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.256,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.4099999999967,\"pid\":103,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[3422192,1952,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1399.9832754107852,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.263,\"onlineExpGained\":7465.462938536824,\"onlineMoneyMade\":3422192,\"onlineRunningTime\":587.4099999999967,\"pid\":104,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.70587501088943,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.272,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":105,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.1477425582643,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.279,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":106,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[4049760,1712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1196.7622901934728,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.288,\"onlineExpGained\":8870.114501885224,\"onlineMoneyMade\":4049760,\"onlineRunningTime\":587.2099999999966,\"pid\":107,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.44977614699627,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.297,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":108,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.800033222019,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.306,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":109,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[4172528,1376,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1175.1518934589833,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.314,\"onlineExpGained\":7924.343755655955,\"onlineMoneyMade\":4172528,\"onlineRunningTime\":587.2099999999966,\"pid\":110,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,195]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.48348227571063,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.323,\"onlineExpGained\":1609.632325367615,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":111,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9012547897213,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.33,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":112,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[5082352,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":773.8821248370217,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.34,\"onlineExpGained\":5216.859639140168,\"onlineMoneyMade\":5082352,\"onlineRunningTime\":587.2099999999966,\"pid\":113,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.48368863882926,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.347,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":114,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9025961499924,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.356,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":115,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[6431456,784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":831.2082560568025,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.363,\"onlineExpGained\":4688.570055429771,\"onlineMoneyMade\":6431456,\"onlineRunningTime\":587.2099999999966,\"pid\":116,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.372,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":117,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7128655787044,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.380000000001,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":118,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[10844000,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":562.894173585601,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.39,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":10844000,\"onlineRunningTime\":587.2099999999966,\"pid\":119,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-0\",\"moduleSequenceNumber\":699,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-0\",\"moduleSequenceNumber\":700,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-0\",\"moduleSequenceNumber\":701,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-0\",\"moduleSequenceNumber\":702,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-1\",\"httpPortOpen\":false,\"ip\":\"43.9.6.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.50027994986485,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.397,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":120,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.3764162512359,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.404,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.2099999999966,\"pid\":121,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2395856,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.6693509509766,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.413,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":2395856,\"onlineRunningTime\":587.2099999999966,\"pid\":122,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,420]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":423.38735650549495,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.42,\"onlineExpGained\":2731.2669287329863,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":123,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.1955808038153,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.429,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":124,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[3186736,1952,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1400.0026507871594,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.436,\"onlineExpGained\":7387.426740573024,\"onlineMoneyMade\":3186736,\"onlineRunningTime\":587.0099999999966,\"pid\":125,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7105626019477,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.445,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":126,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.1652194151002,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.451000000001,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":127,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3774144,1712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1196.778757276358,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.460000000001,\"onlineExpGained\":9182.259293740422,\"onlineMoneyMade\":3774144,\"onlineRunningTime\":587.0099999999966,\"pid\":128,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.45413556787753,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.466,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":129,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.8174709055438,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.475,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":130,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3896560,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1261.155566661427,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.482,\"onlineExpGained\":7528.126567873159,\"onlineMoneyMade\":3896560,\"onlineRunningTime\":587.0099999999966,\"pid\":131,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,195]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.48492681754108,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.491,\"onlineExpGained\":1609.632325367615,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":132,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9098704499244,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.497,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":133,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[4761872,944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":773.8924017203298,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.506,\"onlineExpGained\":5315.913936085868,\"onlineMoneyMade\":4761872,\"onlineRunningTime\":587.0099999999966,\"pid\":134,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.48511598373317,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.513,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":135,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9111602194159,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.522,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":136,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[5868432,752,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":745.2310913434096,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.529,\"onlineExpGained\":4490.461461538372,\"onlineMoneyMade\":5868432,\"onlineRunningTime\":587.0099999999966,\"pid\":137,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.538,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":138,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7198311823481,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.545,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":139,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[10304432,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":562.9015585326562,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.554,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":10304432,\"onlineRunningTime\":587.0099999999966,\"pid\":140,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-1\",\"moduleSequenceNumber\":703,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-1\",\"moduleSequenceNumber\":704,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-1\",\"moduleSequenceNumber\":705,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-1\",\"moduleSequenceNumber\":706,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-2\",\"httpPortOpen\":false,\"ip\":\"30.8.5.2\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.50256932265876,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.561,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":141,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":785.2621273153678,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.57,\"onlineExpGained\":4824.434375565596,\"onlineMoneyMade\":0,\"onlineRunningTime\":587.0099999999966,\"pid\":142,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2504208,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.681635390359,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.578,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":2504208,\"onlineRunningTime\":587.0099999999966,\"pid\":143,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,420]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":423.3944691797885,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.630000000001,\"onlineExpGained\":2731.2669287329863,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":144,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.2232592677806,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.656,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":145,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2967952,1952,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1467.7730116886544,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.677,\"onlineExpGained\":7777.607730392025,\"onlineMoneyMade\":2967952,\"onlineRunningTime\":586.8099999999965,\"pid\":146,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.71728238566124,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.693000000001,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":147,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.191739529252,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.712,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":148,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3517136,1728,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1196.8045110280793,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.729,\"onlineExpGained\":9286.307557692155,\"onlineMoneyMade\":3517136,\"onlineRunningTime\":586.8099999999965,\"pid\":149,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.4612035046908,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.74,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":150,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.8457426527968,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.749,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":151,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3639776,1360,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1175.1938218588432,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.76,\"onlineExpGained\":7825.2894587102555,\"onlineMoneyMade\":3639776,\"onlineRunningTime\":586.8099999999965,\"pid\":152,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,195]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.48733438725851,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.771,\"onlineExpGained\":1609.632325367615,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":153,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9245222313476,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.781,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":154,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[4462112,944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":773.9099219491021,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.789,\"onlineExpGained\":5712.131123868665,\"onlineMoneyMade\":4462112,\"onlineRunningTime\":586.8099999999965,\"pid\":155,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.4875923411568,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.801,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":156,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9259667731781,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.809000000001,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":157,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[5674784,752,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":831.238577677701,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.819,\"onlineExpGained\":4589.515758484071,\"onlineMoneyMade\":5674784,\"onlineRunningTime\":586.8099999999965,\"pid\":158,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.827,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":159,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7321159742289,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.836,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":160,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[7716784,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.185962960373,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.844000000001,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":7716784,\"onlineRunningTime\":586.8099999999965,\"pid\":161,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-2\",\"moduleSequenceNumber\":707,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-2\",\"moduleSequenceNumber\":708,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-2\",\"moduleSequenceNumber\":709,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-2\",\"moduleSequenceNumber\":710,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-3\",\"httpPortOpen\":false,\"ip\":\"28.2.8.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,405]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":218.13332435323682,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.854,\"onlineExpGained\":1356.8721681278234,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":162,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4004441958798,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.863,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.8099999999965,\"pid\":163,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2567184,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.7036729300991,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.874,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":2567184,\"onlineRunningTime\":586.8099999999965,\"pid\":164,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,420]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":423.4030043889407,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.882,\"onlineExpGained\":2731.2669287329863,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":165,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.2521570473389,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.893,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":166,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2763632,1952,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1400.0550651001254,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.904,\"onlineExpGained\":7309.390542609225,\"onlineMoneyMade\":2763632,\"onlineRunningTime\":586.6099999999965,\"pid\":167,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7232705800189,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.914,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":168,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.2130775521327,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.922,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":169,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3276944,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1264.5687988347236,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.933,\"onlineExpGained\":8714.042105957626,\"onlineMoneyMade\":3276944,\"onlineRunningTime\":586.6099999999965,\"pid\":170,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.4664141734364,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.942000000001,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":171,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.8666885093387,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.952,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":172,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3399552,1360,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1261.2037914293292,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.960000000001,\"onlineExpGained\":7726.235161764555,\"onlineMoneyMade\":3399552,\"onlineRunningTime\":586.6099999999965,\"pid\":173,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.97809096290106,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.97,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":174,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9346340241609,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.977,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":175,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[4180288,944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":773.9221180094136,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.986,\"onlineExpGained\":5018.751045248769,\"onlineMoneyMade\":4180288,\"onlineRunningTime\":586.6099999999965,\"pid\":176,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.48926044303246,\"offlineMoneyMade\":0,\"offlineRunningTime\":12500.995,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":177,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9360785659914,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.005000000001,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":178,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[5324864,752,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":745.2598858772301,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.012,\"onlineExpGained\":4391.407164592671,\"onlineMoneyMade\":5324864,\"onlineRunningTime\":586.6099999999965,\"pid\":179,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.022,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":180,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7402636197032,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.029,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":181,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[9407632,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":562.9233531325016,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.038,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":9407632,\"onlineRunningTime\":586.6099999999965,\"pid\":182,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-3\",\"moduleSequenceNumber\":711,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-3\",\"moduleSequenceNumber\":712,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-3\",\"moduleSequenceNumber\":713,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-3\",\"moduleSequenceNumber\":714,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-4\",\"httpPortOpen\":false,\"ip\":\"11.2.7.3\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.5093397239092,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.046,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":183,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4104951008289,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.055,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.6099999999965,\"pid\":184,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[3041232,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.71766974588,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.062,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":3041232,\"onlineRunningTime\":586.6099999999965,\"pid\":185,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,405]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7274975407419,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.07,\"onlineExpGained\":2633.7216812782367,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":186,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.2745924542535,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.077,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":187,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2583616,1952,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1400.0754484440563,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.086,\"onlineExpGained\":7543.499136500624,\"onlineMoneyMade\":2583616,\"onlineRunningTime\":586.4099999999964,\"pid\":188,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7281207464896,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.093,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":189,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.2314688956633,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.103000000001,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":190,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3052800,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1264.586703806812,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.11,\"onlineExpGained\":8089.752522247228,\"onlineMoneyMade\":3052800,\"onlineRunningTime\":586.4099999999964,\"pid\":191,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.47097995743627,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.119,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":192,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.8846421006601,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.126,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":193,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3175616,1376,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1261.2215478292262,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.136,\"onlineExpGained\":8122.452349547357,\"onlineMoneyMade\":3175616,\"onlineRunningTime\":586.4099999999964,\"pid\":194,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.98106603119476,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.143,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":195,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.943714001381,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.153,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":196,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[3917584,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":773.9328901642064,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.16,\"onlineExpGained\":5613.076826922965,\"onlineMoneyMade\":3917584,\"onlineRunningTime\":586.4099999999964,\"pid\":197,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.49075657564258,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.169,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":198,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9449005893131,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.176,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":199,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[4999168,784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":831.2628482733762,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.184000000001,\"onlineExpGained\":4589.515758484071,\"onlineMoneyMade\":4999168,\"onlineRunningTime\":586.4099999999964,\"pid\":200,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.191,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":201,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.747482518025,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.2,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":202,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[6967520,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.198222422786,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.207,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":6967520,\"onlineRunningTime\":586.4099999999964,\"pid\":203,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-4\",\"moduleSequenceNumber\":715,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-4\",\"moduleSequenceNumber\":716,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-4\",\"moduleSequenceNumber\":717,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-4\",\"moduleSequenceNumber\":718,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-5\",\"httpPortOpen\":false,\"ip\":\"69.3.0.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.51169889465422,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.215,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":204,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4193943395859,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.225,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.4099999999964,\"pid\":205,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2796528,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.7303264410014,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.232,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":2796528,\"onlineRunningTime\":586.4099999999964,\"pid\":206,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,405]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7321038440939,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.24,\"onlineExpGained\":2633.7216812782367,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":207,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.2953208193376,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.247,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":208,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2406224,1952,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1332.3479803555397,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.256,\"onlineExpGained\":7465.462938536825,\"onlineMoneyMade\":2406224,\"onlineRunningTime\":586.2099999999964,\"pid\":209,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.73272704984157,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.263,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":210,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.2486409236005,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.272,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":211,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2844864,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1196.8571673977701,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.279,\"onlineExpGained\":7855.6439283558275,\"onlineMoneyMade\":2844864,\"onlineRunningTime\":586.2099999999964,\"pid\":212,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.4753393783174,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.288,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":213,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.902079784185,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.295,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":214,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2966048,1360,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1261.2383962314007,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.303,\"onlineExpGained\":7825.289458710256,\"onlineMoneyMade\":2966048,\"onlineRunningTime\":586.2099999999964,\"pid\":215,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.9839895087088,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.313,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":216,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9525360247026,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.324,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":217,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[3670976,944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":859.9371962135469,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.331,\"onlineExpGained\":5811.185420814364,\"onlineMoneyMade\":3670976,\"onlineRunningTime\":586.2099999999964,\"pid\":218,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.49223551132614,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.341,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":219,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9537226126347,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.347,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":220,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[4687536,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":745.2803937853754,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.356,\"onlineExpGained\":4589.515758484071,\"onlineMoneyMade\":4687536,\"onlineRunningTime\":586.2099999999964,\"pid\":221,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.363,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":222,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7547014163467,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.371000000001,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.2099999999964,\"pid\":223,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[8593296,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":562.9386633885913,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.378,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":8593296,\"onlineRunningTime\":586.2099999999964,\"pid\":224,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-5\",\"moduleSequenceNumber\":719,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-5\",\"moduleSequenceNumber\":720,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-5\",\"moduleSequenceNumber\":721,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-5\",\"moduleSequenceNumber\":722,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-6\",\"httpPortOpen\":false,\"ip\":\"73.0.7.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.5140999441698,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.387,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":225,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4282412298796,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.394,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":226,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2960704,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.7429831361222,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.402,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":2960704,\"onlineRunningTime\":586.0099999999964,\"pid\":227,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,405]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7366830515438,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.409,\"onlineExpGained\":2633.7216812782367,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":228,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.3161711159812,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.418,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":229,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2241024,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1309.7834126949567,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.424,\"onlineExpGained\":7361.414674585092,\"onlineMoneyMade\":2241024,\"onlineRunningTime\":586.0099999999964,\"pid\":230,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.73733335319355,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.433,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":231,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.2657113419052,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.44,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":232,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2651888,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1196.8734430029474,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.449,\"onlineExpGained\":8714.042105957626,\"onlineMoneyMade\":2651888,\"onlineRunningTime\":586.0099999999964,\"pid\":233,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.47967300380884,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.456,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":234,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.9197238308284,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.466,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":235,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2770592,1344,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1261.2554464108473,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.472,\"onlineExpGained\":7924.343755655956,\"onlineMoneyMade\":2770592,\"onlineRunningTime\":586.0099999999964,\"pid\":236,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.9868785923697,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.481,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":237,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,675,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9609969125667,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.488,\"onlineExpGained\":5571.804203195592,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":238,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[3439440,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":859.9486149727784,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.497,\"onlineExpGained\":5315.913936085868,\"onlineMoneyMade\":3439440,\"onlineRunningTime\":586.0099999999964,\"pid\":239,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,165]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.9872569247539,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.503,\"onlineExpGained\":1361.9965830033666,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":240,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9622866820582,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.513,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":241,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[4405344,784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":831.2851240255712,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.519,\"onlineExpGained\":4721.588154411671,\"onlineMoneyMade\":4405344,\"onlineRunningTime\":586.0099999999964,\"pid\":242,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.529,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":243,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7616248042108,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.535,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":586.0099999999964,\"pid\":244,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[8166480,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":562.9461834261413,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.545,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":8166480,\"onlineRunningTime\":586.0099999999964,\"pid\":245,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-6\",\"moduleSequenceNumber\":723,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-6\",\"moduleSequenceNumber\":724,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-6\",\"moduleSequenceNumber\":725,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-6\",\"moduleSequenceNumber\":726,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-7\",\"httpPortOpen\":false,\"ip\":\"37.7.5.8\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.51638931696377,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.551,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.8099999999963,\"pid\":246,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4369310747835,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.56,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.8099999999963,\"pid\":247,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2751344,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.7552675755047,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.567000000001,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":2751344,\"onlineRunningTime\":585.8099999999963,\"pid\":248,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,405]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.74120806718975,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.576000000001,\"onlineExpGained\":2633.7216812782367,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.8099999999963,\"pid\":249,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.3362898232688,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.583,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.8099999999963,\"pid\":250,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2087872,1920,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1309.801014192942,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.592,\"onlineExpGained\":8219.812852186893,\"onlineMoneyMade\":2087872,\"onlineRunningTime\":585.8099999999963,\"pid\":251,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7418583688394,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.6,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.8099999999963,\"pid\":252,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.2828833698425,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.609,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.8099999999963,\"pid\":253,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2471408,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1129.1409730109085,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.616,\"onlineExpGained\":8557.969710030027,\"onlineMoneyMade\":2471408,\"onlineRunningTime\":585.8099999999963,\"pid\":254,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.4840582200798,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.626,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":255,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.9370583327939,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.634,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":256,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2588176,1376,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1089.2809667719882,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.643,\"onlineExpGained\":7726.235161764558,\"onlineMoneyMade\":2588176,\"onlineRunningTime\":585.6099999999963,\"pid\":257,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.98976767603057,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.649,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":258,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9697673451087,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.658,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":259,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[3222848,896,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":773.9640922677441,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.664,\"onlineExpGained\":5117.805342194469,\"onlineMoneyMade\":3222848,\"onlineRunningTime\":585.6099999999963,\"pid\":260,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,165]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.99018040226787,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.673,\"onlineExpGained\":1361.9965830033666,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":261,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9709023422612,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.68,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":262,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[4134736,752,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":831.2963616438428,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.688,\"onlineExpGained\":4589.515758484071,\"onlineMoneyMade\":4134736,\"onlineRunningTime\":585.6099999999963,\"pid\":263,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.695,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":264,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7687592709732,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.704,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":265,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[2286528,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.21524382514457,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.711,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":2286528,\"onlineRunningTime\":585.6099999999963,\"pid\":266,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-7\",\"moduleSequenceNumber\":727,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-7\",\"moduleSequenceNumber\":728,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-7\",\"moduleSequenceNumber\":729,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-7\",\"moduleSequenceNumber\":730,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-8\",\"httpPortOpen\":false,\"ip\":\"64.9.0.2\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.51873452811859,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.719000000001,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":267,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4456209196875,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.726,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":268,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2830640,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.7677753683301,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.735,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":2830640,\"onlineRunningTime\":585.6099999999963,\"pid\":269,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,405]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.74567889103133,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.741,\"onlineExpGained\":2633.7216812782367,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":270,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.356774325234,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.751,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.6099999999963,\"pid\":271,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1943984,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1309.8184061492843,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.758,\"onlineExpGained\":7361.414674585092,\"onlineMoneyMade\":1943984,\"onlineRunningTime\":585.6099999999963,\"pid\":272,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7463833844852,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.767,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":273,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.2996489592488,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.774,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":274,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2303264,1712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1061.4066930126103,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.783,\"onlineExpGained\":8245.824918174829,\"onlineMoneyMade\":2303264,\"onlineRunningTime\":585.4099999999962,\"pid\":275,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.48826286862203,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.789,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":276,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.953980108522,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.798,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":277,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2430528,1360,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1003.2980215983498,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.804,\"onlineExpGained\":7726.235161764558,\"onlineMoneyMade\":2430528,\"onlineRunningTime\":585.4099999999962,\"pid\":278,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.99258797198533,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.813,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":279,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9780734606338,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.819,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":280,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[2869616,944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":773.9742453331812,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.828,\"onlineExpGained\":5514.022529977266,\"onlineMoneyMade\":2869616,\"onlineRunningTime\":585.4099999999962,\"pid\":281,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,165]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.9929663043695,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.835000000001,\"onlineExpGained\":1361.9965830033666,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":282,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9793632301254,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.844000000001,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":283,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[3882320,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":917.304496875496,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.851,\"onlineExpGained\":5183.84154015827,\"onlineMoneyMade\":3882320,\"onlineRunningTime\":585.4099999999962,\"pid\":284,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.861,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":285,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7756404430577,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.867,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":286,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[7648256,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":562.9611334409112,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.877,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":7648256,\"onlineRunningTime\":585.4099999999962,\"pid\":287,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-8\",\"moduleSequenceNumber\":731,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-8\",\"moduleSequenceNumber\":732,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-8\",\"moduleSequenceNumber\":733,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-8\",\"moduleSequenceNumber\":734,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-9\",\"httpPortOpen\":false,\"ip\":\"77.0.4.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.52106577968317,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.886,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":288,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4545725069078,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.897,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.4099999999962,\"pid\":289,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[3263424,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.7804320634513,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.905,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":3263424,\"onlineRunningTime\":585.4099999999962,\"pid\":290,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,405]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7503664820896,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.914,\"onlineExpGained\":2633.7216812782367,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":291,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.377380758759,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.92,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":292,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1814432,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1377.5864765438575,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.929,\"onlineExpGained\":8688.030039969692,\"onlineMoneyMade\":1814432,\"onlineRunningTime\":585.2099999999962,\"pid\":293,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7509625919351,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.936,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":294,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.3169225968188,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.944,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":295,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2146800,1712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1061.4209562954607,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.951000000001,\"onlineExpGained\":8245.824918174829,\"onlineMoneyMade\":2146800,\"onlineRunningTime\":585.2099999999962,\"pid\":296,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.49267388028295,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.960000000001,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":297,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.971417792047,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.967,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":298,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2270416,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1089.3099814264688,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.976,\"onlineExpGained\":7528.126567873159,\"onlineMoneyMade\":2270416,\"onlineRunningTime\":585.2099999999962,\"pid\":299,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.9954942525728,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.982,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":300,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9869470747353,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.991,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":301,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[2688496,912,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":687.9864620908725,\"offlineMoneyMade\":0,\"offlineRunningTime\":12501.998,\"onlineExpGained\":4622.53385746597,\"onlineMoneyMade\":2688496,\"onlineRunningTime\":585.2099999999962,\"pid\":302,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,165]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.99590697881007,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.006,\"onlineExpGained\":1361.9965830033666,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":303,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9880820718879,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.013,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":304,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[3644288,784,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":917.3170437531094,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.022,\"onlineExpGained\":5084.7872432125705,\"onlineMoneyMade\":3644288,\"onlineRunningTime\":585.2099999999962,\"pid\":305,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.028,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":306,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7828171255998,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.037,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.2099999999962,\"pid\":307,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[7278640,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":562.9686084482962,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.043,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":7278640,\"onlineRunningTime\":585.2099999999962,\"pid\":308,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-9\",\"moduleSequenceNumber\":735,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-9\",\"moduleSequenceNumber\":736,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-9\",\"moduleSequenceNumber\":737,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-9\",\"moduleSequenceNumber\":738,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-10\",\"httpPortOpen\":false,\"ip\":\"94.7.3.6\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.5233830716575,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.052,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":309,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4630006094953,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.058,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":310,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2723728,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.7924931493902,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.067000000001,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":2723728,\"onlineRunningTime\":585.0099999999961,\"pid\":311,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.75467473051884,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.073,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":312,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.3971336713687,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.082,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":313,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1690048,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1377.6039967541365,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.088,\"onlineExpGained\":8922.138633861096,\"onlineMoneyMade\":1690048,\"onlineRunningTime\":585.0099999999961,\"pid\":314,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7553250321685,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.097,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":315,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.3331801380612,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.104,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":316,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2000864,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1129.1857715689985,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.112000000001,\"onlineExpGained\":8011.7163242834295,\"onlineMoneyMade\":2000864,\"onlineRunningTime\":585.0099999999961,\"pid\":317,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.496749551876,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.118,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":318,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1289.9879268415377,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.127,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":319,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2121824,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1175.3229914135688,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.134,\"onlineExpGained\":8221.506646493053,\"onlineMoneyMade\":2121824,\"onlineRunningTime\":585.0099999999961,\"pid\":320,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.99826295774784,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.143,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":321,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.995150008701,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.15,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":322,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[2519408,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":859.9942212219971,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.16,\"onlineExpGained\":4523.479560520269,\"onlineMoneyMade\":2519408,\"onlineRunningTime\":585.0099999999961,\"pid\":323,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,165]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":214.9986756839851,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.167,\"onlineExpGained\":1361.9965830033666,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":324,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":644.9964397781926,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.175000000001,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":325,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[3420656,704,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":831.3292100664826,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.182,\"onlineExpGained\":4688.570055429771,\"onlineMoneyMade\":3420656,\"onlineRunningTime\":585.0099999999961,\"pid\":326,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.19,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":327,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7895716503452,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.197,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":585.0099999999961,\"pid\":328,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[1993536,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.2320288191371,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.208,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":1993536,\"onlineRunningTime\":585.0099999999961,\"pid\":329,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-10\",\"moduleSequenceNumber\":739,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-10\",\"moduleSequenceNumber\":740,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-10\",\"moduleSequenceNumber\":741,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-10\",\"moduleSequenceNumber\":742,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-11\",\"httpPortOpen\":false,\"ip\":\"21.3.8.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.52564452527108,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.214,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.8099999999961,\"pid\":330,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4716381059359,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.223,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.8099999999961,\"pid\":331,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2725856,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":930.8046286864766,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.23,\"onlineExpGained\":6646.998473001495,\"onlineMoneyMade\":2725856,\"onlineRunningTime\":584.8099999999961,\"pid\":332,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,405]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.75914555436054,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.238,\"onlineExpGained\":2633.7216812782367,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.8099999999961,\"pid\":333,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.4170085155374,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.245,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.8099999999961,\"pid\":334,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1574512,1920,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1309.8702677058477,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.253,\"onlineExpGained\":8844.102435897294,\"onlineMoneyMade\":1574512,\"onlineRunningTime\":584.8099999999961,\"pid\":335,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.75974166420616,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.26,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.8099999999961,\"pid\":336,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.3499457274677,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.269,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.8099999999961,\"pid\":337,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1864832,1712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1061.4485489557358,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.276,\"onlineExpGained\":7933.68012631963,\"onlineMoneyMade\":1864832,\"onlineRunningTime\":584.8099999999961,\"pid\":338,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5010315865877,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.284,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.8099999999961,\"pid\":339,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1290.0049517988255,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.292,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.8099999999961,\"pid\":340,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1982496,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1175.3384090314546,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.298,\"onlineExpGained\":8320.560943438755,\"onlineMoneyMade\":1982496,\"onlineRunningTime\":584.8099999999961,\"pid\":341,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.00108325370255,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.307,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.609999999996,\"pid\":342,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0035593057856,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.313,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.609999999996,\"pid\":343,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[2361744,944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":860.0053648304036,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.322,\"onlineExpGained\":5712.131123868666,\"onlineMoneyMade\":2361744,\"onlineRunningTime\":584.609999999996,\"pid\":344,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.50072219458008,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.328,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.609999999996,\"pid\":345,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0047974844974,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.337,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.609999999996,\"pid\":346,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[3152272,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":831.3399822212756,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.344000000001,\"onlineExpGained\":4886.678649321171,\"onlineMoneyMade\":3152272,\"onlineRunningTime\":584.609999999996,\"pid\":347,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.353000000001,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.609999999996,\"pid\":348,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.7964106066499,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.359,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.609999999996,\"pid\":349,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[6856912,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":562.9832432519114,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.368,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":6856912,\"onlineRunningTime\":584.609999999996,\"pid\":350,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-11\",\"moduleSequenceNumber\":743,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-11\",\"moduleSequenceNumber\":744,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-11\",\"moduleSequenceNumber\":745,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-11\",\"moduleSequenceNumber\":746,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-12\",\"httpPortOpen\":false,\"ip\":\"90.0.2.9\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.5278780597042,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.374,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.609999999996,\"pid\":351,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4800138600602,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.383,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.609999999996,\"pid\":352,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2327648,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.2756430980238,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.389000000001,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":2327648,\"onlineRunningTime\":584.609999999996,\"pid\":353,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.76348089869185,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.398000000001,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.409999999996,\"pid\":354,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.4363956334691,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.404,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.409999999996,\"pid\":355,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1466720,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1309.8871358080837,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.414,\"onlineExpGained\":8766.066237933494,\"onlineMoneyMade\":1466720,\"onlineRunningTime\":584.409999999996,\"pid\":356,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.76410410443947,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.421,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.409999999996,\"pid\":357,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.3663048783428,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.43,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.409999999996,\"pid\":358,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1737696,1712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1129.2150351432351,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.436,\"onlineExpGained\":7231.35434464543,\"onlineMoneyMade\":1737696,\"onlineRunningTime\":584.409999999996,\"pid\":359,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.50518464435027,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.445,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.409999999996,\"pid\":360,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1290.021357666757,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.451000000001,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.409999999996,\"pid\":361,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1851072,1376,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1089.3521528762237,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.460000000001,\"onlineExpGained\":7429.0722709274605,\"onlineMoneyMade\":1851072,\"onlineRunningTime\":584.409999999996,\"pid\":362,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.0038175650245,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.466,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.209999999996,\"pid\":363,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0119170120904,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.475,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.209999999996,\"pid\":364,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[2213216,912,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":745.3475214149444,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.482,\"onlineExpGained\":5481.004430995367,\"onlineMoneyMade\":2213216,\"onlineRunningTime\":584.209999999996,\"pid\":365,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.50212374409415,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.491,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.209999999996,\"pid\":366,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0130520092429,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.497,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.209999999996,\"pid\":367,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[3025216,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":716.6816848069554,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.506,\"onlineExpGained\":4853.660550339272,\"onlineMoneyMade\":3025216,\"onlineRunningTime\":584.209999999996,\"pid\":368,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.512,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.209999999996,\"pid\":369,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8032495629548,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.521,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.209999999996,\"pid\":370,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[5159536,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.2428022861061,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.527,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":5159536,\"onlineRunningTime\":584.209999999996,\"pid\":371,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-12\",\"moduleSequenceNumber\":747,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-12\",\"moduleSequenceNumber\":748,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-12\",\"moduleSequenceNumber\":749,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-12\",\"moduleSequenceNumber\":750,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-13\",\"httpPortOpen\":false,\"ip\":\"22.1.3.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.53013951331775,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.536,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.0099999999959,\"pid\":372,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4883896141845,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.543,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.0099999999959,\"pid\":373,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[1867552,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.2871011296656,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.551,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":1867552,\"onlineRunningTime\":584.0099999999959,\"pid\":374,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7678162430232,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.558,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.0099999999959,\"pid\":375,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.456148546079,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.566,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.0099999999959,\"pid\":376,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1366128,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1377.6574389049872,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.573,\"onlineExpGained\":8844.102435897294,\"onlineMoneyMade\":1366128,\"onlineRunningTime\":584.0099999999959,\"pid\":377,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7684665446729,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.582,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.0099999999959,\"pid\":378,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.3824608099526,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.589,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.0099999999959,\"pid\":379,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1549936,1712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1264.737226961996,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.598,\"onlineExpGained\":7309.390542609229,\"onlineMoneyMade\":1549936,\"onlineRunningTime\":584.0099999999959,\"pid\":380,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5092861113332,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.604,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.0099999999959,\"pid\":381,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":967.528554809525,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.613,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":584.0099999999959,\"pid\":382,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1729728,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1089.3660938513494,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.62,\"onlineExpGained\":7726.235161764558,\"onlineMoneyMade\":1729728,\"onlineRunningTime\":584.0099999999959,\"pid\":383,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.00662066405263,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.629,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.8099999999959,\"pid\":384,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0201715368357,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.635,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.8099999999959,\"pid\":385,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[2074144,912,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":659.3544804989577,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.645,\"onlineExpGained\":5481.004430995366,\"onlineMoneyMade\":2074144,\"onlineRunningTime\":583.8099999999959,\"pid\":386,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.5034994982184,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.651,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.8099999999959,\"pid\":387,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.021512897107,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.661,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.8099999999959,\"pid\":388,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2841296,704,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":630.6880041653009,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.667,\"onlineExpGained\":4655.551956447871,\"onlineMoneyMade\":2841296,\"onlineRunningTime\":583.8099999999959,\"pid\":389,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.676,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.8099999999959,\"pid\":390,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8100885192596,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.683,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.8099999999959,\"pid\":391,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[5847472,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.24837476902127,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.692000000001,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":5847472,\"onlineRunningTime\":583.8099999999959,\"pid\":392,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-13\",\"moduleSequenceNumber\":751,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-13\",\"moduleSequenceNumber\":752,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-13\",\"moduleSequenceNumber\":753,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-13\",\"moduleSequenceNumber\":754,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-14\",\"httpPortOpen\":false,\"ip\":\"2.5.9.6\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.5324009669313,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.698,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.6099999999958,\"pid\":393,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.4969747621618,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.707,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.6099999999958,\"pid\":394,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[1870640,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.2986298898983,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.714,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":1870640,\"onlineRunningTime\":583.6099999999958,\"pid\":395,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7723141627669,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.724,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.6099999999958,\"pid\":396,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.4762672533664,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.731,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.6099999999958,\"pid\":397,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1272336,1920,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1377.675730445278,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.739,\"onlineExpGained\":8063.74045625929,\"onlineMoneyMade\":1272336,\"onlineRunningTime\":583.6099999999958,\"pid\":398,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.77291027261253,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.746000000001,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.6099999999958,\"pid\":399,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.3993280089917,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.755000000001,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.6099999999958,\"pid\":400,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1444656,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1196.999052379374,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.761,\"onlineExpGained\":7309.39054260923,\"onlineMoneyMade\":1444656,\"onlineRunningTime\":583.6099999999958,\"pid\":401,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5135681460449,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.77,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.6099999999958,\"pid\":402,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":967.5411687551517,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.776,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.6099999999958,\"pid\":403,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1616000,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1089.3804704819477,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.785,\"onlineExpGained\":7330.01797398176,\"onlineMoneyMade\":1616000,\"onlineRunningTime\":583.6099999999958,\"pid\":404,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.00940656615424,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.791000000001,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.4099999999958,\"pid\":405,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,675,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0286840154797,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.800000000001,\"onlineExpGained\":5571.804203195592,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.4099999999958,\"pid\":406,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[2316336,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":659.3629711948279,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.806,\"onlineExpGained\":5481.004430995366,\"onlineMoneyMade\":2316336,\"onlineRunningTime\":583.4099999999958,\"pid\":407,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.50490964619576,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.815,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.4099999999958,\"pid\":408,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0297674218525,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.821,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.4099999999958,\"pid\":409,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2668192,752,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":716.7002574876327,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.83,\"onlineExpGained\":4556.497659502172,\"onlineMoneyMade\":2668192,\"onlineRunningTime\":583.4099999999958,\"pid\":410,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.836,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.4099999999958,\"pid\":411,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8169274755643,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.845,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.4099999999958,\"pid\":412,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[6022784,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":563.0050378517568,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.852,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":6022784,\"onlineRunningTime\":583.4099999999958,\"pid\":413,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-14\",\"moduleSequenceNumber\":755,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-14\",\"moduleSequenceNumber\":756,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-14\",\"moduleSequenceNumber\":757,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-14\",\"moduleSequenceNumber\":758,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-15\",\"httpPortOpen\":false,\"ip\":\"18.8.7.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.53467638013507,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.861,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.2099999999957,\"pid\":414,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.5053505162861,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.867,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.2099999999957,\"pid\":415,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2751872,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.3100879215401,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.876,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":2751872,\"onlineRunningTime\":583.2099999999957,\"pid\":416,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7765953152941,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.882,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.2099999999957,\"pid\":417,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.495776302857,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.891,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.2099999999957,\"pid\":418,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1184720,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1445.4485408163202,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.897,\"onlineExpGained\":7439.45087254889,\"onlineMoneyMade\":1184720,\"onlineRunningTime\":583.2099999999957,\"pid\":419,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.77724561694384,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.906,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.2099999999957,\"pid\":420,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.4152807213356,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.912,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.2099999999957,\"pid\":421,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1346800,1712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1332.525431418201,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.921,\"onlineExpGained\":7933.680126319629,\"onlineMoneyMade\":1346800,\"onlineRunningTime\":583.2099999999957,\"pid\":422,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.517643817638,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.928,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.2099999999957,\"pid\":423,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":967.5536279284394,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.937,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.2099999999957,\"pid\":424,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2041440,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1261.4038535940767,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.943000000001,\"onlineExpGained\":7825.289458710259,\"onlineMoneyMade\":2041440,\"onlineRunningTime\":583.2099999999957,\"pid\":425,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.01217527132923,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.952,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.0099999999957,\"pid\":426,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,675,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0368353586658,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.958,\"onlineExpGained\":5571.804203195592,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.0099999999957,\"pid\":427,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1839440,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":659.371461890698,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.967,\"onlineExpGained\":5481.004430995366,\"onlineMoneyMade\":1839440,\"onlineRunningTime\":583.0099999999957,\"pid\":428,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.50626820339342,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.973,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.0099999999957,\"pid\":429,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0380735373776,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.982,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.0099999999957,\"pid\":430,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2477264,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":716.7093145356174,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.988,\"onlineExpGained\":4655.551956447871,\"onlineMoneyMade\":2477264,\"onlineRunningTime\":583.0099999999957,\"pid\":431,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12502.997,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.0099999999957,\"pid\":432,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8235975687505,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.003,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":583.0099999999957,\"pid\":433,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[5733008,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":563.012287708317,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.013,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":5733008,\"onlineRunningTime\":583.0099999999957,\"pid\":434,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-15\",\"moduleSequenceNumber\":759,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-15\",\"moduleSequenceNumber\":760,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-15\",\"moduleSequenceNumber\":761,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-15\",\"moduleSequenceNumber\":762,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-16\",\"httpPortOpen\":false,\"ip\":\"94.4.9.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.53688199538774,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.019,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.8099999999957,\"pid\":435,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.5137786188736,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.028,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.8099999999957,\"pid\":436,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[1757584,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.321333767411,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.035,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":1757584,\"onlineRunningTime\":582.8099999999957,\"pid\":437,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7809848514296,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.044,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.8099999999957,\"pid\":438,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.5154072839077,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.052,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.8099999999957,\"pid\":439,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1597792,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1377.7112116258427,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.061,\"onlineExpGained\":8375.88524811449,\"onlineMoneyMade\":1597792,\"onlineRunningTime\":582.8099999999957,\"pid\":440,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.78160805717727,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.067000000001,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.8099999999957,\"pid\":441,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.4319447011094,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.076000000001,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.8099999999957,\"pid\":442,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1255856,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1242.2008191692378,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.083,\"onlineExpGained\":8141.776654223097,\"onlineMoneyMade\":1255856,\"onlineRunningTime\":582.8099999999957,\"pid\":443,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5218484661802,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.091,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.6099999999957,\"pid\":444,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":967.5660871017269,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.098,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.6099999999957,\"pid\":445,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1426736,1392,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1347.4263356483223,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.107,\"onlineExpGained\":7528.126567873161,\"onlineMoneyMade\":1426736,\"onlineRunningTime\":582.6099999999957,\"pid\":446,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.0149439765043,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.113,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.6099999999957,\"pid\":447,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,675,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0452962465298,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.122,\"onlineExpGained\":5571.804203195592,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.6099999999957,\"pid\":448,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1724128,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":659.3799525865682,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.128,\"onlineExpGained\":5481.004430995366,\"onlineMoneyMade\":1724128,\"onlineRunningTime\":582.6099999999957,\"pid\":449,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.5076783513708,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.137,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.6099999999957,\"pid\":450,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,495,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0463796529026,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.143,\"onlineExpGained\":4085.9897490101,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.6099999999957,\"pid\":451,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2325696,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":716.7188301683101,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.154,\"onlineExpGained\":4655.551956447871,\"onlineMoneyMade\":2325696,\"onlineRunningTime\":582.6099999999957,\"pid\":452,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.16,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.6099999999957,\"pid\":453,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8306053881738,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.169,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.6099999999957,\"pid\":454,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[5019904,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.2646869462816,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.175000000001,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":5019904,\"onlineRunningTime\":582.6099999999957,\"pid\":455,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-16\",\"moduleSequenceNumber\":763,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-16\",\"moduleSequenceNumber\":764,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-16\",\"moduleSequenceNumber\":765,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-16\",\"moduleSequenceNumber\":766,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-17\",\"httpPortOpen\":false,\"ip\":\"48.3.9.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.53918532777195,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.184000000001,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.4099999999956,\"pid\":456,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.5222590699243,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.19,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.4099999999956,\"pid\":457,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[3285648,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.3329332562337,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.199,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":3285648,\"onlineRunningTime\":582.4099999999956,\"pid\":458,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.78534729166296,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.205,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.4099999999956,\"pid\":459,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1665,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1524.5351601965172,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.214,\"onlineExpGained\":10827.522467477185,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.4099999999956,\"pid\":460,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1480608,1920,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1377.7287318361218,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.22,\"onlineExpGained\":9000.17483182489,\"onlineMoneyMade\":1480608,\"onlineRunningTime\":582.4099999999956,\"pid\":461,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.78599759331263,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.229,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.4099999999956,\"pid\":462,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.448100632719,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.235,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.4099999999956,\"pid\":463,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1193600,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1242.2168147834268,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.244,\"onlineExpGained\":7283.378476621295,\"onlineMoneyMade\":1193600,\"onlineRunningTime\":582.4099999999956,\"pid\":464,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.52594993316313,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.25,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.2099999999956,\"pid\":465,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1290.1047283666865,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.259,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.2099999999956,\"pid\":466,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1332912,1360,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1232.7674306092642,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.266,\"onlineExpGained\":7197.945578054162,\"onlineMoneyMade\":1332912,\"onlineRunningTime\":582.2099999999956,\"pid\":467,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.0177298786059,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.275,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.2099999999956,\"pid\":468,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,675,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0534991804958,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.281,\"onlineExpGained\":5571.804203195592,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.2099999999956,\"pid\":469,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1858016,896,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":573.3812091697364,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.288,\"onlineExpGained\":5183.841540158268,\"onlineMoneyMade\":1858016,\"onlineRunningTime\":582.2099999999956,\"pid\":470,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.50905410549505,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.297,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.2099999999956,\"pid\":471,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,450,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5273170888241,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.303,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.2099999999956,\"pid\":472,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[3306240,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":716.7278872162948,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.312,\"onlineExpGained\":4655.551956447871,\"onlineMoneyMade\":3306240,\"onlineRunningTime\":582.2099999999956,\"pid\":473,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.32,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.2099999999956,\"pid\":474,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8373599129194,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.329,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.2099999999956,\"pid\":475,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[5224032,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":563.0268324516022,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.336,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":5224032,\"onlineRunningTime\":582.2099999999956,\"pid\":476,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-17\",\"moduleSequenceNumber\":767,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-17\",\"moduleSequenceNumber\":768,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-17\",\"moduleSequenceNumber\":769,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-17\",\"moduleSequenceNumber\":770,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-18\",\"httpPortOpen\":false,\"ip\":\"9.0.6.4\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.5414188622051,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.344000000001,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.0099999999956,\"pid\":477,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.5306871725119,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.351,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.0099999999956,\"pid\":478,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[3124000,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.344249830695,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.359,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":3124000,\"onlineRunningTime\":582.0099999999956,\"pid\":479,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7897097318964,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.366,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.0099999999956,\"pid\":480,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1620,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.4622243716733,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.374,\"onlineExpGained\":10534.886725112938,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.0099999999956,\"pid\":481,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[1378784,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1377.7464724264044,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.381,\"onlineExpGained\":8141.776654223091,\"onlineMoneyMade\":1378784,\"onlineRunningTime\":582.0099999999956,\"pid\":482,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7903600335461,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.39,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.0099999999956,\"pid\":483,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.464561393227,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.397,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":582.0099999999956,\"pid\":484,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1112528,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1174.4746571032006,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.405,\"onlineExpGained\":7049.2698827298955,\"onlineMoneyMade\":1112528,\"onlineRunningTime\":582.0099999999956,\"pid\":485,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5301287863155,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.412,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.8099999999955,\"pid\":486,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1290.121443779296,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.421,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.8099999999955,\"pid\":487,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1245760,1360,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1232.7833045189343,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.427,\"onlineExpGained\":7396.05417194556,\"onlineMoneyMade\":1245760,\"onlineRunningTime\":581.8099999999955,\"pid\":488,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.02049858378092,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.436,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.8099999999955,\"pid\":489,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,675,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0618052960209,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.442000000001,\"onlineExpGained\":5571.804203195592,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.8099999999955,\"pid\":490,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1741680,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":659.3969339783084,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.45,\"onlineExpGained\":5381.950134049667,\"onlineMoneyMade\":1741680,\"onlineRunningTime\":581.8099999999955,\"pid\":491,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.51042985961926,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.457,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.8099999999955,\"pid\":492,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,450,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5314959419765,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.465,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.8099999999955,\"pid\":493,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[3101536,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":716.7370589104564,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.472,\"onlineExpGained\":4655.551956447871,\"onlineMoneyMade\":3101536,\"onlineRunningTime\":581.8099999999955,\"pid\":494,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.48,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.6099999999955,\"pid\":495,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8440300061056,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.487000000001,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.6099999999955,\"pid\":496,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[4534752,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.27552795849806,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.496000000001,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":4534752,\"onlineRunningTime\":581.6099999999955,\"pid\":497,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-18\",\"moduleSequenceNumber\":771,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-18\",\"moduleSequenceNumber\":772,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-18\",\"moduleSequenceNumber\":773,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-18\",\"moduleSequenceNumber\":774,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-19\",\"httpPortOpen\":false,\"ip\":\"27.4.2.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.5436244774578,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.502,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.6099999999955,\"pid\":498,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.5390629266362,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.511,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.6099999999955,\"pid\":499,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2702784,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.3554249479753,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.517,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":2702784,\"onlineRunningTime\":581.6099999999955,\"pid\":500,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7940721721297,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.527,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.6099999999955,\"pid\":501,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1620,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.4784819129159,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.534,\"onlineExpGained\":10534.886725112938,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.6099999999955,\"pid\":502,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[918768,1936,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1310.0054220653763,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.543,\"onlineExpGained\":9156.247227752494,\"onlineMoneyMade\":918768,\"onlineRunningTime\":581.6099999999955,\"pid\":503,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7946682819753,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.549,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.6099999999955,\"pid\":504,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.4809205441022,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.558,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.6099999999955,\"pid\":505,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1037120,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1174.489592364422,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.564,\"onlineExpGained\":7049.2698827298955,\"onlineMoneyMade\":1037120,\"onlineRunningTime\":581.6099999999955,\"pid\":506,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5342560486883,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.572,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.4099999999954,\"pid\":507,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1290.1377464656682,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.579,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.4099999999954,\"pid\":508,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1168912,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1146.7899334219578,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.588,\"onlineExpGained\":6801.728390271364,\"onlineMoneyMade\":1168912,\"onlineRunningTime\":581.4099999999954,\"pid\":509,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.02321569817636,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.594000000001,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.4099999999954,\"pid\":510,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,675,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.070111411546,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.603000000001,\"onlineExpGained\":5571.804203195592,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.4099999999954,\"pid\":511,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1436992,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":659.4053191996958,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.609,\"onlineExpGained\":5381.950134049667,\"onlineMoneyMade\":1436992,\"onlineRunningTime\":581.4099999999954,\"pid\":512,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.51181421220682,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.618,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.4099999999954,\"pid\":513,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,450,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.53562320434924,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.625,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.4099999999954,\"pid\":514,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2911536,752,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":630.7367333763817,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.633,\"onlineExpGained\":4556.497659502172,\"onlineMoneyMade\":2911536,\"onlineRunningTime\":581.4099999999954,\"pid\":515,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.64,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.2099999999954,\"pid\":516,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8508689624103,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.649,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.2099999999954,\"pid\":517,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[4756448,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":563.0411970742276,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.655,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":4756448,\"onlineRunningTime\":581.2099999999954,\"pid\":518,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-19\",\"moduleSequenceNumber\":775,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-19\",\"moduleSequenceNumber\":776,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-19\",\"moduleSequenceNumber\":777,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-19\",\"moduleSequenceNumber\":778,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-20\",\"httpPortOpen\":false,\"ip\":\"63.6.0.3\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.54588593107135,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.664,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.2099999999954,\"pid\":519,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.5473863322972,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.67,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.2099999999954,\"pid\":520,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2964352,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.3668829796172,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.679,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":2964352,\"onlineRunningTime\":581.2099999999954,\"pid\":521,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.79838042055894,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.686,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.2099999999954,\"pid\":522,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1620,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.494841063791,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.695,\"onlineExpGained\":10534.886725112938,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.2099999999954,\"pid\":523,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[854752,1904,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1287.4353900645424,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.701000000001,\"onlineExpGained\":7491.475004524759,\"onlineMoneyMade\":854752,\"onlineRunningTime\":581.2099999999954,\"pid\":524,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,375]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.7990307222088,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.710000000001,\"onlineExpGained\":2438.6311863687374,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.0099999999953,\"pid\":525,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.4969748660794,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.716,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.0099999999953,\"pid\":526,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1084336,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1242.264602922712,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.725,\"onlineExpGained\":8063.740456259296,\"onlineMoneyMade\":1084336,\"onlineRunningTime\":581.0099999999953,\"pid\":527,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.53838331106095,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.732,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.0099999999953,\"pid\":528,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1290.1543586967184,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.74,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.0099999999953,\"pid\":529,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1088752,1312,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1232.8148551468505,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.747,\"onlineExpGained\":7296.99987499986,\"onlineMoneyMade\":1088752,\"onlineRunningTime\":581.0099999999953,\"pid\":530,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.02600160027794,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.756,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.0099999999953,\"pid\":531,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,675,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0783143455118,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.762,\"onlineExpGained\":5571.804203195592,\"onlineMoneyMade\":0,\"onlineRunningTime\":581.0099999999953,\"pid\":532,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1346928,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":659.4138626328073,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.771,\"onlineExpGained\":5381.950134049667,\"onlineMoneyMade\":1346928,\"onlineRunningTime\":581.0099999999953,\"pid\":533,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.5131813678678,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.777,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.8099999999953,\"pid\":534,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,450,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5397762621118,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.786,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.8099999999953,\"pid\":535,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2734000,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":802.7661147764924,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.793,\"onlineExpGained\":4754.60625339357,\"onlineMoneyMade\":2734000,\"onlineRunningTime\":580.8099999999953,\"pid\":536,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.802,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.8099999999953,\"pid\":537,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8575812713763,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.808,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.8099999999953,\"pid\":538,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[4536192,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":563.0484919609527,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.817000000001,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":4536192,\"onlineRunningTime\":580.8099999999953,\"pid\":539,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-20\",\"moduleSequenceNumber\":779,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-20\",\"moduleSequenceNumber\":780,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-20\",\"moduleSequenceNumber\":781,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-20\",\"moduleSequenceNumber\":782,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-21\",\"httpPortOpen\":false,\"ip\":\"7.6.2.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.5481055059143,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.823,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.8099999999953,\"pid\":540,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.5558667833479,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.832,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.8099999999953,\"pid\":541,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2304544,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.3781288254881,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.838,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":2304544,\"onlineRunningTime\":580.8099999999953,\"pid\":542,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.8027428607924,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.847,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.8099999999953,\"pid\":543,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1620,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.5109969954008,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.854,\"onlineExpGained\":10534.886725112938,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.8099999999953,\"pid\":544,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[796480,1904,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1287.452070301857,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.863,\"onlineExpGained\":7647.5474004523585,\"onlineMoneyMade\":796480,\"onlineRunningTime\":580.8099999999953,\"pid\":545,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.803338970638,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.869,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.6099999999952,\"pid\":546,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.5134356265871,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.878,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.6099999999952,\"pid\":547,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[1014176,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1174.5196507517853,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.884,\"onlineExpGained\":8688.030039969693,\"onlineMoneyMade\":1014176,\"onlineRunningTime\":580.6099999999952,\"pid\":548,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5425363688235,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.893,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.6099999999952,\"pid\":549,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1290.17076456465,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.899,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.6099999999952,\"pid\":550,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[1017344,1360,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1232.8307290565206,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.908,\"onlineExpGained\":7396.054171945562,\"onlineMoneyMade\":1017344,\"onlineRunningTime\":580.6099999999952,\"pid\":551,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.0287359115999,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.915,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.6099999999952,\"pid\":552,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,675,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0866720518165,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.924,\"onlineExpGained\":5571.804203195592,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.6099999999952,\"pid\":553,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1463840,896,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":573.4106503079952,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.93,\"onlineExpGained\":5183.841540158268,\"onlineMoneyMade\":1463840,\"onlineRunningTime\":580.6099999999952,\"pid\":554,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.51457431891858,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.939,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.4099999999952,\"pid\":555,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,450,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5439293198744,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.947,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.4099999999952,\"pid\":556,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2567024,736,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":802.77664388139,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.957,\"onlineExpGained\":4754.60625339357,\"onlineMoneyMade\":2567024,\"onlineRunningTime\":580.4099999999952,\"pid\":557,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.963,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.4099999999952,\"pid\":558,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8645046592403,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.972,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.4099999999952,\"pid\":559,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[4319616,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":563.0557868476777,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.979,\"onlineExpGained\":756.5067714931945,\"onlineMoneyMade\":4319616,\"onlineRunningTime\":580.4099999999952,\"pid\":560,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-21\",\"moduleSequenceNumber\":783,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-21\",\"moduleSequenceNumber\":784,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-21\",\"moduleSequenceNumber\":785,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-21\",\"moduleSequenceNumber\":786,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-22\",\"httpPortOpen\":false,\"ip\":\"73.6.2.9\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.55043675747885,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.99,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.4099999999952,\"pid\":561,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.5644519313254,\"offlineMoneyMade\":0,\"offlineRunningTime\":12503.996000000001,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.4099999999952,\"pid\":562,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2773184,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.3897990429012,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.003,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":2773184,\"onlineRunningTime\":580.4099999999952,\"pid\":563,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.8072407805362,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.013,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.2099999999951,\"pid\":564,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1620,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.5278641944399,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.02,\"onlineExpGained\":10534.886725112938,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.2099999999951,\"pid\":565,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[742288,1904,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1355.2308056434854,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.03,\"onlineExpGained\":7725.583598416159,\"onlineMoneyMade\":742288,\"onlineRunningTime\":580.2099999999951,\"pid\":566,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.8078639862838,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.036,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.2099999999951,\"pid\":567,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.530404435259,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.045,\"onlineExpGained\":9364.343755655947,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.2099999999951,\"pid\":568,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[945312,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1039.012029302765,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.051,\"onlineExpGained\":8297.849050150697,\"onlineMoneyMade\":945312,\"onlineRunningTime\":580.2099999999951,\"pid\":569,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5468441989251,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.06,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.2099999999951,\"pid\":570,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1290.1879958850564,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.066,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.2099999999951,\"pid\":571,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[950688,1376,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1232.8472931361769,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.076000000001,\"onlineExpGained\":7495.1084688912615,\"onlineMoneyMade\":950688,\"onlineRunningTime\":580.2099999999951,\"pid\":572,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.03160779833422,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.082,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.0099999999951,\"pid\":573,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.0952877120196,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.091,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.0099999999951,\"pid\":574,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1414544,896,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":659.4310549735131,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.097,\"onlineExpGained\":5282.895837103967,\"onlineMoneyMade\":1414544,\"onlineRunningTime\":580.0099999999951,\"pid\":575,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.51601026228573,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.106,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.0099999999951,\"pid\":576,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,450,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5481855591962,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.112000000001,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.0099999999951,\"pid\":577,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2410256,768,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":802.7871729862876,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.121000000001,\"onlineExpGained\":4655.551956447871,\"onlineMoneyMade\":2410256,\"onlineRunningTime\":580.0099999999951,\"pid\":578,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.127,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.0099999999951,\"pid\":579,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.8714280471045,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.136,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":580.0099999999951,\"pid\":580,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[3701392,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.2973450734259,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.142,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":3701392,\"onlineRunningTime\":580.0099999999951,\"pid\":581,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-22\",\"moduleSequenceNumber\":787,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-22\",\"moduleSequenceNumber\":788,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-22\",\"moduleSequenceNumber\":789,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-22\",\"moduleSequenceNumber\":790,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-23\",\"httpPortOpen\":false,\"ip\":\"44.0.3.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":174.55268425150217,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.151,\"onlineExpGained\":1306.6176433823484,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.8099999999951,\"pid\":582,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":654.5728800339128,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.157000000001,\"onlineExpGained\":4673.670801329172,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.8099999999951,\"pid\":583,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[2979168,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":884.4013278031335,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.166000000001,\"onlineExpGained\":6593.393646606321,\"onlineMoneyMade\":2979168,\"onlineRunningTime\":579.8099999999951,\"pid\":584,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,420]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.81154902896543,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.172,\"onlineExpGained\":2731.2669287329863,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.8099999999951,\"pid\":585,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,1620,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1270.5442233453148,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.181,\"onlineExpGained\":10534.886725112938,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.8099999999951,\"pid\":586,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[691664,1920,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1355.2478218699857,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.187,\"onlineExpGained\":7725.583598416159,\"onlineMoneyMade\":691664,\"onlineRunningTime\":579.8099999999951,\"pid\":587,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,390]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":338.8121993306151,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.196,\"onlineExpGained\":2536.176433823487,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.8099999999951,\"pid\":588,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1016.4371670057886,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.203,\"onlineExpGained\":9071.7080132917,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.8099999999951,\"pid\":589,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[881376,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1039.0254074528143,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.212,\"onlineExpGained\":8297.849050150697,\"onlineMoneyMade\":881376,\"onlineRunningTime\":579.8099999999951,\"pid\":590,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,315]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.55091987051827,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.218,\"onlineExpGained\":2600.175294824609,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.609999999995,\"pid\":591,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1290.204608116107,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.227,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.609999999995,\"pid\":592,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[888304,1328,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1146.8490908493004,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.233,\"onlineExpGained\":7495.10846889126,\"onlineMoneyMade\":888304,\"onlineRunningTime\":579.609999999995,\"pid\":593,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,210]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":215.0343765035093,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.243,\"onlineExpGained\":1733.4501965497393,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.609999999995,\"pid\":594,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,630,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":645.1034390552059,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.249,\"onlineExpGained\":5200.350589649219,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.609999999995,\"pid\":595,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[1320208,928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":659.4395456693833,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.258,\"onlineExpGained\":5183.841540158268,\"onlineMoneyMade\":1320208,\"onlineRunningTime\":579.609999999995,\"pid\":596,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,150]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":107.51737741794672,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.265,\"onlineExpGained\":1238.1787118212424,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.609999999995,\"pid\":597,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,450,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":322.5523644123487,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.274,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.609999999995,\"pid\":598,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[2407536,720,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":630.769421294374,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.281,\"onlineExpGained\":4259.334768665071,\"onlineMoneyMade\":2407536,\"onlineRunningTime\":579.609999999995,\"pid\":599,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.29,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.409999999995,\"pid\":600,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":527.87818257185,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.296,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":579.409999999995,\"pid\":601,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[3518336,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":422.3028500110935,\"offlineMoneyMade\":0,\"offlineRunningTime\":12504.305,\"onlineExpGained\":594.3981776017956,\"onlineMoneyMade\":3518336,\"onlineRunningTime\":579.409999999995,\"pid\":602,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-23\",\"moduleSequenceNumber\":791,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-23\",\"moduleSequenceNumber\":792,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-23\",\"moduleSequenceNumber\":793,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-23\",\"moduleSequenceNumber\":794,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.0383,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.0248,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":12519.485490284123,\"favor\":0.002,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.0405,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":35.8436,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":5.5857,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":2.9365,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":33.6494809752057,\"favor\":0.0228,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":183781.92630345633}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":27.2161,\"isBanned\":false,\"isMember\":true,\"name\":\"Aevum\",\"playerReputation\":11973.280322753837}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":52.9436,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":29286.45960169357}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":1.6257000000000001,\"isBanned\":false,\"isMember\":true,\"name\":\"Tetrads\",\"playerReputation\":4894.287326837448}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":28.4895,\"isBanned\":false,\"isMember\":true,\"name\":\"Slum Snakes\",\"playerReputation\":54178.067706755726}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":31.4213,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":14620.23216985615}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":1.6478000000000002,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":4895.33042297944}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":66.5443,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":31290.10995371187}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":false}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":false}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":18645.931386295066,\"lastPrice\":18666.615541830204,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.46,\"b\":false,\"otlkMag\":17.660000035683595,\"otlkMagForecast\":30.588739542994382,\"cap\":224302750,\"spreadPerc\":0.1,\"shareTxForMovement\":57329,\"shareTxUntilMovement\":57329,\"totalShares\":125200000,\"maxShares\":25000000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":35403.511748722136,\"lastPrice\":35369.39375471422,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.4,\"b\":true,\"otlkMag\":20.811528926477155,\"otlkMagForecast\":69.79929045577087,\"cap\":697947830,\"spreadPerc\":0.1,\"shareTxForMovement\":63642,\"shareTxUntilMovement\":63642,\"totalShares\":84800000,\"maxShares\":17000000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":20501.323780085375,\"lastPrice\":20466.774156616026,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":14.883936072181603,\"otlkMagForecast\":64.5140597440724,\"cap\":491751359,\"spreadPerc\":0.6,\"shareTxForMovement\":74866,\"shareTxUntilMovement\":74866,\"totalShares\":76700000,\"maxShares\":15300000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":22737.771845136056,\"lastPrice\":22702.186030179397,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":10.641997712075971,\"otlkMagForecast\":60.743812967448314,\"cap\":438432018,\"spreadPerc\":0.3,\"shareTxForMovement\":31919,\"shareTxUntilMovement\":31919,\"totalShares\":82600000,\"maxShares\":16500000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":29685.96470924639,\"lastPrice\":29733.929422323778,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":true,\"otlkMag\":10.830122453443993,\"otlkMagForecast\":60.42508200664008,\"cap\":110049031,\"spreadPerc\":0.3,\"shareTxForMovement\":81100,\"shareTxUntilMovement\":81100,\"totalShares\":53000000,\"maxShares\":10600000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":74659.2012316666,\"lastPrice\":74472.42366693605,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.04,\"b\":false,\"otlkMag\":14.774363395009265,\"otlkMagForecast\":37.00961314617953,\"cap\":1197871215,\"spreadPerc\":0.2,\"shareTxForMovement\":76885,\"shareTxUntilMovement\":76885,\"totalShares\":27300000,\"maxShares\":5500000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":26704.620806118004,\"lastPrice\":26651.2760196669,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.83,\"b\":false,\"otlkMag\":8.057171176544323,\"otlkMagForecast\":41.52379123287286,\"cap\":231359786,\"spreadPerc\":0.1,\"shareTxForMovement\":85143,\"shareTxUntilMovement\":85143,\"totalShares\":72500000,\"maxShares\":14500000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":59728.35591916411,\"lastPrice\":59915.605042977935,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.3,\"b\":true,\"otlkMag\":14.088799780701466,\"otlkMagForecast\":64.62234919741061,\"cap\":75761213,\"spreadPerc\":0.3,\"shareTxForMovement\":66069,\"shareTxUntilMovement\":66069,\"totalShares\":67500000,\"maxShares\":13500000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":34889.127223471674,\"lastPrice\":34816.081461490256,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.87,\"b\":false,\"otlkMag\":6.133696542730073,\"otlkMagForecast\":43.749031930471496,\"cap\":360517964,\"spreadPerc\":0.5,\"shareTxForMovement\":63724,\"shareTxUntilMovement\":63724,\"totalShares\":59500000,\"maxShares\":11900000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":23095.06912826159,\"lastPrice\":23056.703511253192,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":9.877782376896768,\"otlkMagForecast\":59.623761013345955,\"cap\":150737577,\"spreadPerc\":0.9,\"shareTxForMovement\":90550,\"shareTxUntilMovement\":90550,\"totalShares\":48800000,\"maxShares\":9800000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":5245.246869603579,\"lastPrice\":5252.330401300829,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.56,\"b\":false,\"otlkMag\":9.499378026726772,\"otlkMagForecast\":40.32043282294744,\"cap\":160441975,\"spreadPerc\":1,\"shareTxForMovement\":37827,\"shareTxUntilMovement\":37827,\"totalShares\":72700000,\"maxShares\":14500000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":9958.981478427784,\"lastPrice\":9976.513567408194,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":8.66597026217139,\"otlkMagForecast\":42.17213884666641,\"cap\":274084723,\"spreadPerc\":0.8,\"shareTxForMovement\":102638,\"shareTxUntilMovement\":102638,\"totalShares\":73000000,\"maxShares\":14600000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":13308.739292521683,\"lastPrice\":13286.31089051503,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":5.503416538550695,\"otlkMagForecast\":44.67777326257171,\"cap\":229427496,\"spreadPerc\":0.3,\"shareTxForMovement\":103641,\"shareTxUntilMovement\":103641,\"totalShares\":59100000,\"maxShares\":11800000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":18713.53819419363,\"lastPrice\":18740.164063805536,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":false,\"otlkMag\":9.867105986318352,\"otlkMagForecast\":40.308681895612565,\"cap\":457057671,\"spreadPerc\":0.9,\"shareTxForMovement\":86830,\"shareTxUntilMovement\":86830,\"totalShares\":47800000,\"maxShares\":9600000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":7744.9932096587745,\"lastPrice\":7734.17543591172,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":true,\"otlkMag\":6.387543273337958,\"otlkMagForecast\":56.19365188741883,\"cap\":73243206,\"spreadPerc\":0.8,\"shareTxForMovement\":93290,\"shareTxUntilMovement\":93290,\"totalShares\":56800000,\"maxShares\":11400000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":9096.89518753009,\"lastPrice\":9080.471693623504,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":false,\"otlkMag\":2.3032495754929525,\"otlkMagForecast\":48.48259706920531,\"cap\":221832107,\"spreadPerc\":0.9,\"shareTxForMovement\":74760,\"shareTxUntilMovement\":74760,\"totalShares\":57000000,\"maxShares\":11400000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":20372.785256876054,\"lastPrice\":20335.02531440911,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":true,\"otlkMag\":8.477835319083182,\"otlkMagForecast\":58.37345761078269,\"cap\":353295577,\"spreadPerc\":1,\"shareTxForMovement\":101637,\"shareTxUntilMovement\":101637,\"totalShares\":41400000,\"maxShares\":8300000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":31626.604846703343,\"lastPrice\":31670.840907606555,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":false,\"otlkMag\":10.053447703037346,\"otlkMagForecast\":39.36141470789059,\"cap\":253947942,\"spreadPerc\":0.8,\"shareTxForMovement\":111343,\"shareTxUntilMovement\":111343,\"totalShares\":24500000,\"maxShares\":4900000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":24570.045046437768,\"lastPrice\":24526.867215515544,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":6.488948950239984,\"otlkMagForecast\":44.93741659397172,\"cap\":295376191,\"spreadPerc\":0.5,\"shareTxForMovement\":79589,\"shareTxUntilMovement\":79589,\"totalShares\":32100000,\"maxShares\":6400000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":1601.7437523117685,\"lastPrice\":1611.4004565167118,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.5,\"b\":true,\"otlkMag\":7.790631473142534,\"otlkMagForecast\":56.2457176138065,\"cap\":101833291,\"spreadPerc\":0.5,\"shareTxForMovement\":47385,\"shareTxUntilMovement\":47385,\"totalShares\":78400000,\"maxShares\":15700000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":3894.642175592753,\"lastPrice\":3905.537030055369,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.16,\"b\":true,\"otlkMag\":7.4213425864587785,\"otlkMagForecast\":58.5521555821269,\"cap\":145924042,\"spreadPerc\":0.5,\"shareTxForMovement\":105034,\"shareTxUntilMovement\":105034,\"totalShares\":44100000,\"maxShares\":8800000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":7051.2495875757895,\"lastPrice\":7060.4319774505375,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":true,\"otlkMag\":1.5148133525848035,\"otlkMagForecast\":51.10381848056543,\"cap\":28073637,\"spreadPerc\":0.7,\"shareTxForMovement\":124942,\"shareTxUntilMovement\":124942,\"totalShares\":28600000,\"maxShares\":5700000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":8059.409565611823,\"lastPrice\":8025.54011128779,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.75,\"b\":true,\"otlkMag\":8.66141832196205,\"otlkMagForecast\":55.84430590797949,\"cap\":109180514,\"spreadPerc\":1.6,\"shareTxForMovement\":35525,\"shareTxUntilMovement\":35525,\"totalShares\":35700000,\"maxShares\":7100000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":5049.8723689212875,\"lastPrice\":5029.858291510401,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.65,\"b\":false,\"otlkMag\":5.251368356786391,\"otlkMagForecast\":45.773778130067235,\"cap\":133362435,\"spreadPerc\":0.5,\"shareTxForMovement\":66313,\"shareTxUntilMovement\":66313,\"totalShares\":35200000,\"maxShares\":7000000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":5503.304170679715,\"lastPrice\":5516.177507513001,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.97,\"b\":false,\"otlkMag\":5.434245231103354,\"otlkMagForecast\":43.965662747872855,\"cap\":23655107,\"spreadPerc\":1,\"shareTxForMovement\":110066,\"shareTxUntilMovement\":110066,\"totalShares\":54700000,\"maxShares\":10900000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":3118.903639724248,\"lastPrice\":3102.8905142581566,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.14,\"b\":true,\"otlkMag\":5.5728100547056965,\"otlkMagForecast\":55.38813321516211,\"cap\":20263421,\"spreadPerc\":1.2,\"shareTxForMovement\":38414,\"shareTxUntilMovement\":38414,\"totalShares\":12100000,\"maxShares\":2400000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":1474.0440824341395,\"lastPrice\":1477.8120939225398,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.06,\"b\":false,\"otlkMag\":5.485323529163743,\"otlkMagForecast\":45.405754430767374,\"cap\":62784249,\"spreadPerc\":0.6,\"shareTxForMovement\":30877,\"shareTxUntilMovement\":30877,\"totalShares\":22700000,\"maxShares\":4500000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":739.2472905497822,\"lastPrice\":737.9481844854366,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":6.171462116610833,\"otlkMagForecast\":41.60593549939557,\"cap\":4146969,\"spreadPerc\":0.7,\"shareTxForMovement\":175587,\"shareTxUntilMovement\":175587,\"totalShares\":70500000,\"maxShares\":14100000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":1226.312754534031,\"lastPrice\":1219.8702661839059,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.19,\"b\":false,\"otlkMag\":6.687356177098399,\"otlkMagForecast\":48.191371634211954,\"cap\":54722733,\"spreadPerc\":1.1,\"shareTxForMovement\":59995,\"shareTxUntilMovement\":59995,\"totalShares\":13200000,\"maxShares\":2600000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":1285.951458242864,\"lastPrice\":1278.1531696371974,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.53,\"b\":true,\"otlkMag\":6.5814136036318684,\"otlkMagForecast\":58.575172255028065,\"cap\":26794538,\"spreadPerc\":0.8,\"shareTxForMovement\":51515,\"shareTxUntilMovement\":51515,\"totalShares\":28800000,\"maxShares\":5800000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":1207.3196085271816,\"lastPrice\":1202.8813753786098,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.53,\"b\":true,\"otlkMag\":8.990633757999074,\"otlkMagForecast\":59.029928393560915,\"cap\":24152066,\"spreadPerc\":0.5,\"shareTxForMovement\":54604,\"shareTxUntilMovement\":54604,\"totalShares\":85200000,\"maxShares\":17000000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":34212.38820857878,\"lastPrice\":34277.56700910851,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":false,\"otlkMag\":9.448637479508402,\"otlkMagForecast\":41.56246489773668,\"cap\":313250777,\"spreadPerc\":0.6,\"shareTxForMovement\":148878,\"shareTxUntilMovement\":148878,\"totalShares\":15300000,\"maxShares\":3100000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":26813.815080995533,\"lastPrice\":26852.612759658357,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":11.325812117449797,\"otlkMagForecast\":61.11937488086645,\"cap\":71685549,\"spreadPerc\":0.9,\"shareTxForMovement\":154806,\"shareTxUntilMovement\":154806,\"totalShares\":19200000,\"maxShares\":3800000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":821390,\"lastUpdate\":1645573087819,\"ticksUntilCycle\":50}","SettingsSave":"{\"ActiveScriptsServerPageSize\":20,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-337,\"y\":251,\"opened\":false}}","VersionSave":"10","AllGangsSave":"","LastExportBonus":"1645573088566","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}","SaveTimestamp":"1645573088611"}}