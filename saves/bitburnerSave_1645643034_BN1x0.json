{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":471,\"hp\":26,\"max_hp\":26,\"strength\":165,\"defense\":165,\"dexterity\":165,\"agility\":165,\"charisma\":89,\"intelligence\":0,\"hacking_chance_mult\":1.11459615813105,\"hacking_speed_mult\":1.1263854009236245,\"hacking_money_mult\":1.061520150601,\"hacking_grow_mult\":1.061520150601,\"hacking_exp\":66677461.55734619,\"strength_exp\":67338.69863786499,\"defense_exp\":67338.69863786499,\"dexterity_exp\":67359.71673684688,\"agility_exp\":67359.71673684688,\"charisma_exp\":6743.588399218809,\"intelligence_exp\":0,\"hacking_mult\":1.252248783660235,\"strength_mult\":1.061520150601,\"defense_mult\":1.061520150601,\"dexterity_mult\":1.061520150601,\"agility_mult\":1.061520150601,\"charisma_mult\":1.061520150601,\"hacking_exp_mult\":1.1676721656611,\"strength_exp_mult\":1.1676721656611,\"defense_exp_mult\":1.1676721656611,\"dexterity_exp_mult\":1.1676721656611,\"agility_exp_mult\":1.1676721656611,\"charisma_exp_mult\":1.1676721656611,\"company_rep_mult\":1.061520150601,\"faction_rep_mult\":1.061520150601,\"money\":7936503882.18234,\"city\":\"Volhaven\",\"location\":\"VitaLife\",\"jobs\":{\"FoodNStuff\":\"Employee\",\"VitaLife\":\"Junior Software Engineer\"},\"companyName\":\"VitaLife\",\"currentServer\":\"home\",\"purchasedServers\":[\"odin\",\"odin-0\",\"odin-1\",\"odin-2\",\"odin-3\",\"odin-4\",\"odin-5\",\"odin-6\",\"odin-7\",\"odin-8\",\"odin-9\",\"odin-10\",\"odin-11\",\"odin-12\",\"odin-13\",\"odin-14\",\"odin-15\",\"odin-16\",\"odin-17\",\"odin-18\",\"odin-19\",\"odin-20\",\"odin-21\",\"odin-22\",\"odin-23\"],\"hacknetNodes\":[{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":252111.0000000288,\"ram\":64,\"totalMoneyGenerated\":1668978641.4194608,\"name\":\"hacknet-node-0\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":244300.4000000235,\"ram\":64,\"totalMoneyGenerated\":1593240195.2119906,\"name\":\"hacknet-node-1\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":244299.20000002353,\"ram\":64,\"totalMoneyGenerated\":1592115778.5231032,\"name\":\"hacknet-node-2\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":173707.40000001874,\"ram\":64,\"totalMoneyGenerated\":1063439850.9020343,\"name\":\"hacknet-node-3\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":169638.8000000004,\"ram\":64,\"totalMoneyGenerated\":1328751287.5959928,\"name\":\"hacknet-node-4\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":169633.20000000036,\"ram\":64,\"totalMoneyGenerated\":1501300591.0017493,\"name\":\"hacknet-node-5\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":169631.00000000035,\"ram\":64,\"totalMoneyGenerated\":1052608734.615416,\"name\":\"hacknet-node-6\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":169628.60000000038,\"ram\":64,\"totalMoneyGenerated\":1052602305.7371235,\"name\":\"hacknet-node-7\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":169626.20000000036,\"ram\":64,\"totalMoneyGenerated\":1052598503.9261818,\"name\":\"hacknet-node-8\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":70417.39999999662,\"ram\":64,\"totalMoneyGenerated\":685441188.8093592,\"name\":\"hacknet-node-9\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":70416.99999999661,\"ram\":64,\"totalMoneyGenerated\":685433401.0226419,\"name\":\"hacknet-node-10\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":70416.59999999662,\"ram\":64,\"totalMoneyGenerated\":685425462.7788122,\"name\":\"hacknet-node-11\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":41033.599999996084,\"ram\":64,\"totalMoneyGenerated\":399372891.0748042,\"name\":\"hacknet-node-12\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":41033.19999999609,\"ram\":64,\"totalMoneyGenerated\":399365162.8384805,\"name\":\"hacknet-node-13\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":41032.999999996086,\"ram\":64,\"totalMoneyGenerated\":399355498.34637517,\"name\":\"hacknet-node-14\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":41012.999999996086,\"ram\":64,\"totalMoneyGenerated\":399224891.4181802,\"name\":\"hacknet-node-15\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":41012.79999999609,\"ram\":64,\"totalMoneyGenerated\":399219111.08390397,\"name\":\"hacknet-node-16\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":41012.599999996084,\"ram\":64,\"totalMoneyGenerated\":399213322.12869436,\"name\":\"hacknet-node-17\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":40997.599999996084,\"ram\":64,\"totalMoneyGenerated\":399065243.7238335,\"name\":\"hacknet-node-18\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":40997.39999999609,\"ram\":64,\"totalMoneyGenerated\":399077343.33222836,\"name\":\"hacknet-node-19\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":40997.19999999608,\"ram\":64,\"totalMoneyGenerated\":399088598.8267482,\"name\":\"hacknet-node-20\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":208.99999999999667,\"ram\":64,\"totalMoneyGenerated\":1991188.3023201518,\"name\":\"hacknet-node-21\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":208.7999999999967,\"ram\":64,\"totalMoneyGenerated\":1976332.7405179015,\"name\":\"hacknet-node-22\"}},{\"ctor\":\"HacknetNode\",\"data\":{\"cores\":16,\"level\":200,\"moneyGainRatePerSecond\":9735.529536644824,\"onlineTimeSeconds\":208.5999999999967,\"ram\":64,\"totalMoneyGenerated\":1959975.693434531,\"name\":\"hacknet-node-23\"}}],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[\"Slum Snakes\",\"Sector-12\",\"Netburners\",\"Tian Di Hui\",\"Tetrads\",\"Aevum\",\"CyberSec\",\"NiteSec\",\"The Black Hand\"],\"factionInvitations\":[],\"queuedAugmentations\":[{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"}],\"augmentations\":[{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":6,\"name\":\"NeuroFlux Governor\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"}],\"sourceFiles\":[],\"numPeopleKilled\":4,\"karma\":-56.35,\"crime_money_mult\":1.061520150601,\"crime_success_mult\":1.061520150601,\"isWorking\":true,\"focus\":false,\"workType\":\"Working for Faction\",\"workCostMult\":3,\"workExpMult\":2,\"currentWorkFactionName\":\"The Black Hand\",\"currentWorkFactionDescription\":\"carrying out field missions\",\"workHackExpGainRate\":0.11676721656611,\"workStrExpGainRate\":0.11676721656611,\"workDefExpGainRate\":0.11676721656611,\"workDexExpGainRate\":0.11676721656611,\"workAgiExpGainRate\":0.11676721656611,\"workChaExpGainRate\":0.11676721656611,\"workRepGainRate\":0.21735181824893204,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":101.02699577300048,\"workStrExpGained\":101.02699577300048,\"workDefExpGained\":101.02699577300048,\"workDexExpGained\":101.02699577300048,\"workAgiExpGained\":101.02699577300048,\"workChaExpGained\":101.02699577300048,\"workRepGained\":188.0219363170751,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":25,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":215800,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":72000000,\"work_money_mult\":1.061520150601,\"hacknet_node_money_mult\":1.061520150601,\"hacknet_node_purchase_cost_mult\":0.9414801494009999,\"hacknet_node_ram_cost_mult\":0.9414801494009999,\"hacknet_node_core_cost_mult\":0.9414801494009999,\"hacknet_node_level_cost_mult\":0.9414801494009999,\"hasWseAccount\":true,\"hasTixApiAccess\":true,\"has4SData\":true,\"has4SDataTixApi\":false,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"sleeves\":[],\"resleeves\":[],\"sleevesFromCovenant\":0,\"bitNodeN\":1,\"lastUpdate\":1645643034382,\"totalPlaytime\":465054600,\"playtimeSinceLastAug\":252823800,\"playtimeSinceLastBitnode\":465054600,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":-934003010,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":388516.375119966,\"gang\":0,\"hacking\":9297485225.707539,\"hacknet\":17560845501.06498,\"hacknet_expenses\":-12106535528.041765,\"hospitalization\":-6725000,\"infiltration\":0,\"sleeves\":0,\"stock\":218309827.50322628,\"total\":7936502882.18234,\"work\":5387349.577360482,\"servers\":-1760000000,\"other\":-316400000,\"augmentations\":-4022250000}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":-934003010,\"class\":-2089674.4000000437,\"codingcontract\":0,\"corporation\":0,\"crime\":6626516.3751199655,\"gang\":0,\"hacking\":16465435859.540941,\"hacknet\":26736009650.3407,\"hacknet_expenses\":-18256157974.89644,\"hospitalization\":-36934451.957396284,\"infiltration\":1531701.4985711244,\"sleeves\":0,\"stock\":-4720759032.329247,\"total\":8147701094.199588,\"work\":14438777.677350786,\"servers\":-3717898016.5950418,\"other\":-630199587.2910845,\"augmentations\":-6778299663.70588}},\"scriptProdSinceLastAug\":5530404774,\"exploits\":[],\"achievements\":[{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1645178948427},{\"ID\":\"NS2\",\"unlockedOn\":1645180688422},{\"ID\":\"TOR\",\"unlockedOn\":1645192788148},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1645193148154},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1645193988156},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1645201346201},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1645201646188},{\"ID\":\"WORKOUT\",\"unlockedOn\":1645204586189},{\"ID\":\"FROZE\",\"unlockedOn\":1645207110260},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1645218712775},{\"ID\":\"TRAVEL\",\"unlockedOn\":1645218772781},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1645261128514},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1645292693406},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1645292693414},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1645316650399},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1645319346575},{\"ID\":\"4S\",\"unlockedOn\":1645354568255},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1645390232477},{\"ID\":\"NITESEC\",\"unlockedOn\":1645483036483},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1645573210025}],\"factionWorkType\":\"Faction Field Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":true,\"ip\":\"63.5.0.7\",\"isConnectedTo\":true,\"maxRam\":1024,\"messages\":[\"hackers-starting-handbook.lit\",\"j0.msg\",\"j1.msg\",\"csec-test.msg\",\"j2.msg\",\"nitesec-test.msg\",\"j3.msg\",\"democracy-is-dead.lit\",\"secret-societies.lit\",\"synthetic-muscles.lit\",\"the-failed-frontier.lit\",\"brighter-than-the-sun.lit\",\"the-hidden-world.lit\",\"the-new-god.lit\",\"tensions-in-tech-race.lit\",\"new-triads.lit\",\"simulated-reality.lit\",\"man-and-machine.lit\",\"A-Green-Tomorrow.lit\",\"history-of-synthoids.lit\",\"coded-intelligence.lit\",\"beyond-man.lit\",\"alpha-omega.lit\",\"cost-of-immortality.lit\",\"sector-12-crime.lit\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"fl1ght.exe\",\"BruteSSH.exe\",\"FTPCrack.exe\",\"DeepscanV1.exe\",\"AutoLink.exe\",\"ServerProfiler.exe\",\"AutoLink.exe\",\"relaySMTP.exe\",\"HTTPWorm.exe\",\"DeepscanV2.exe\",\"SQLInject.exe\"],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,840]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10215.92915210131,\"offlineMoneyMade\":0,\"offlineRunningTime\":81796.919,\"onlineExpGained\":2814.2533857465987,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.61000000014,\"pid\":1,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34832.030226363844,\"offlineMoneyMade\":0,\"offlineRunningTime\":81796.991,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.61000000014,\"pid\":2,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5957952,4176,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":49748.59752485216,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.04500000001,\"onlineExpGained\":13990.859689140152,\"onlineMoneyMade\":5957952,\"onlineRunningTime\":1227.61000000014,\"pid\":3,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19635.431294772396,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.10699999999,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.61000000014,\"pid\":4,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3465,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80528.74090461388,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.147,\"onlineExpGained\":22532.952162047088,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.61000000014,\"pid\":5,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[11625968,4096,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":64149.790707823035,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.187,\"onlineExpGained\":18052.37379562563,\"onlineMoneyMade\":11625968,\"onlineRunningTime\":1227.61000000014,\"pid\":6,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18890.57953799037,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.22200000001,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.41000000014,\"pid\":7,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3015,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70172.50966178342,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.258,\"onlineExpGained\":19606.594738404612,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.41000000014,\"pid\":8,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[13198400,3664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":66412.81376111592,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.288,\"onlineExpGained\":17922.313465685933,\"onlineMoneyMade\":13198400,\"onlineRunningTime\":1227.41000000014,\"pid\":9,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19350.444406432583,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.319,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.41000000014,\"pid\":10,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70148.10377347298,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.35800000001,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.41000000014,\"pid\":11,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[14467824,2896,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":60988.843080302395,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.413,\"onlineExpGained\":17334.50196549736,\"onlineMoneyMade\":14467824,\"onlineRunningTime\":1227.41000000014,\"pid\":12,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13181.002989984201,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.456,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.2100000001399,\"pid\":13,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39543.02738786096,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.50099999999,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.2100000001399,\"pid\":14,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[17354864,2000,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":37670.036114578215,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.546,\"onlineExpGained\":11424.262247737315,\"onlineMoneyMade\":17354864,\"onlineRunningTime\":1227.2100000001399,\"pid\":15,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10094.258543144011,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.582,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.2100000001399,\"pid\":16,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":30282.78267157347,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.60699999999,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.2100000001399,\"pid\":17,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[22253136,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35420.115467807496,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.64,\"onlineExpGained\":10367.683080316529,\"onlineMoneyMade\":22253136,\"onlineRunningTime\":1227.2100000001399,\"pid\":18,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.677,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.2100000001399,\"pid\":19,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.153637615073,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.709,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.2100000001399,\"pid\":20,\"ramUsage\":1.95,\"server\":\"home\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[3775936,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4463.492125254164,\"offlineMoneyMade\":0,\"offlineRunningTime\":81797.734,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":3775936,\"onlineRunningTime\":1227.2100000001399,\"pid\":21,\"ramUsage\":1.7,\"server\":\"home\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t\\n\\tvar baseName = ns.args[0]\\n\\tvar botCount = ns.args[1]\\n\\tvar ram = 1024\\n\\n\\tfor (let i = 0; i < botCount; i++) {\\n\\t\\tlet botName = baseName\\n\\t\\tawait ns.purchaseServer(botName, ram)\\n\\t}\\n}\",\"filename\":\"setupBotnet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"setupBotnet.js\",\"url\":\"blob:file:///4178c3cb-848a-4749-a975-c692216119a2\",\"moduleSequenceNumber\":3979}],\"dependents\":[],\"ramUsage\":3.85,\"server\":\"home\",\"moduleSequenceNumber\":398,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push('home')\\n\\n\\tvar blockedServers = ns.getPurchasedServers()\\n\\tblockedServers.push(\\\"darkweb\\\")\\n\\tblockedServers.push(\\\"home\\\")\\n\\n\\tvar servers = ns.scan(ns.getHostname());\\n\\tvar hackFiles = [\\\"weaken.script\\\", \\\"grow.script\\\", \\\"hacker.script\\\", \\\"deployHack.script\\\"]\\n\\n\\tservers = servers.filter(s => !blockedServers.includes(s))\\n\\n\\t// Copy all hack files to servers\\n\\tfor (let eachServer in ownedServers) {\\n\\t\\tlet current = ownedServers[eachServer]\\n\\t\\tif (current != 'home') {\\n\\t\\t\\tawait ns.scp(hackFiles, 'home', current)\\n\\t\\t}\\n\\t}\\n\\n\\t// Deploy the hack files at each of the servers\\n\\tfor (let eachServer in ownedServers) {\\n\\t\\tlet currentServer = ownedServers[eachServer]\\n\\t\\tfor (let eachTarget in servers) {\\n\\t\\t\\tlet currentTarget = servers[eachTarget]\\n\\t\\t\\tif (!blockedServers.includes(currentTarget)) {\\n\\t\\t\\t\\tns.print(\\\"deploying botnet: \\\", currentServer)\\n\\t\\t\\t\\t// await ns.exec(\\\"deployHack.script\\\", \\\"home\\\", 6, currentServer, currentTarget, 3, 12, 4)\\n\\t\\t\\n\\t\\t\\t\\tlet weaken = 15\\n\\t\\t\\t\\tlet grow = 45\\n\\t\\t\\t\\tlet hack = 16\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\tawait ns.exec(\\\"weaken.script\\\", currentServer, weaken, currentTarget)\\n\\t\\t\\t\\tawait ns.exec(\\\"grow.script\\\", currentServer, grow, currentTarget)\\n\\t\\t\\t\\tawait ns.exec(\\\"hacker.script\\\", currentServer, hack, currentTarget)\\n\\t\\t\\t\\tawait ns.sleep(5)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"deployBotnet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"deployBotnet.js\",\"url\":\"blob:file:///fd2f4a93-00d4-42d0-8b03-9f450f9ea698\",\"moduleSequenceNumber\":8071}],\"dependents\":[],\"ramUsage\":6.4,\"server\":\"home\",\"moduleSequenceNumber\":399,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet servers = ns.getPurchasedServers()\\n\\tns.exit()\\n\\tfor (let s in servers) {\\n\\t\\tlet current = servers[s]\\n\\t\\tns.deleteServer(current)\\n\\t}\\n}\",\"filename\":\"deleteServer.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"deleteServer.js\",\"url\":\"blob:file:///f7286121-4b25-4b24-8361-01e348fbbe71\",\"moduleSequenceNumber\":3978}],\"dependents\":[],\"ramUsage\":6.1,\"server\":\"home\",\"moduleSequenceNumber\":400,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push('home')\\n\\tfor (let eachBot in ownedServers) {\\n\\t\\tlet currentBot = ownedServers[eachBot]\\n\\t\\tns.killall(currentBot)\\n\\t}\\n}\",\"filename\":\"killBotnet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"killBotnet.js\",\"url\":\"blob:file:///dd979684-15c8-4f79-9b51-2f7d0791c995\",\"moduleSequenceNumber\":3578}],\"dependents\":[],\"ramUsage\":4.35,\"server\":\"home\",\"moduleSequenceNumber\":401,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog(\\\"ALL\\\")\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\tvar currentServer\\n\\tstack.push(ns.getHostname())\\n\\tvar portHackers = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe', 'SQLInject.exe']\\n\\tvar hackablePorts = ns.ls(\\\"home\\\", \\\".exe\\\").filter(a => portHackers.includes(a))\\n\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// open ports\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tns.print(\\\"opening ports on \\\", currentTarget)\\n\\t\\tif (ns.fileExists(portHackers[0], 'home')) {\\n\\t\\t\\tns.brutessh(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[1], 'home')) {\\n\\t\\t\\tns.ftpcrack(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[2], 'home')) {\\n\\t\\t\\tns.relaysmtp(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[3], 'home')) {\\n\\t\\t\\tns.httpworm(currentTarget)\\n\\t\\t}\\n\\t\\tif (ns.fileExists(portHackers[4], 'home')) {\\n\\t\\t\\tns.sqlinject(currentTarget)\\n\\t\\t}\\n\\t}\\n\\n\\t// get root access\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tlet nPorts = ns.getServerNumPortsRequired(currentTarget);\\n\\t\\t// check if we can run nuke \\n\\t\\tif (nPorts <= hackablePorts.length) {\\n\\t\\t\\tns.print(\\\"running nuke on \\\", currentTarget)\\n\\t\\t\\tif (ns.fileExists(\\\"NUKE.exe\\\", 'home')) {\\n\\t\\t\\t\\tns.nuke(currentTarget)\\n\\t\\t\\t}\\t\\n\\t\\t}\\t\\n\\t}\\n}\",\"filename\":\"walkNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"walkNodes.js\",\"url\":\"blob:file:///f8ba07ba-c78a-45fb-8a0d-92c8a1a918d5\",\"moduleSequenceNumber\":1589}],\"dependents\":[],\"ramUsage\":4.8,\"server\":\"home\",\"moduleSequenceNumber\":402,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":403,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":404,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"home\",\"moduleSequenceNumber\":405,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"home\",\"moduleSequenceNumber\":406,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\ttargetName = args[0]\\n\\n\\tweakenThreads = 1\\n\\tgrowThreads = 1\\n\\thackThreads = 1\\n\\n\\twhile (ns.getServerRequiredHackingLevel(targetName) > ns.getHackingLevel()) {\\n\\t\\tawait ns.sleep(5000)\\n\\t}\\n\\t\\n\\tns.exec(\\\"weaken.script\\\", targetName, weakenThreads, targetName)\\n\\tns.exec(\\\"grow.script\\\", targetName, growThreads, targetName)\\n\\tns.exec(\\\"hacker.script\\\", targetName, hackThreads, targetName)\\n}\",\"filename\":\"test.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":3.05,\"server\":\"home\",\"moduleSequenceNumber\":407,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog(\\\"ALL\\\")\\n\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar deployStack = []\\n\\tvar currentServer\\n\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\townedServers.push(\\\"home\\\")\\n\\n\\tvar hackFiles = [\\\"weaken.script\\\", \\\"grow.script\\\", \\\"hacker.script\\\", \\\"deployHack.script\\\"]\\n\\tvar portHackers = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe', 'SQLInject.exe']\\n\\n\\tstack.push(ns.getHostname())\\n\\t\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\t// ns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// copy over hack files\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\t// ns.print(\\\"copying hacker files to \\\", currentTarget)\\n\\t\\tawait ns.scp(hackFiles, \\\"home\\\", currentTarget)\\n\\t}\\n\\n\\t// start hacks from each node\\n\\tfor (let each in visited) {\\n\\t\\tcurrentServer = visited[each]\\n\\t\\tdeployStack.push(...ns.scan(currentServer))\\n\\t\\t\\n\\t\\t// Remove out of level and unopned port nodes, and owned nodes\\n\\t\\tvar removeNodes = []\\n\\t\\tfor (let each in deployStack) {\\n\\t\\t\\tlet currentTarget = deployStack[each]\\n\\t\\t\\tlet hackable = (ns.getServerRequiredHackingLevel(currentTarget) <= ns.getHackingLevel())\\n\\t\\t\\tlet portsOpened = (ns.getServerNumPortsRequired(currentTarget) <= portHackers.length)\\n\\t\\t\\tlet ownedServer = ownedServers.includes(currentTarget)\\n\\t\\t\\tlet haveNoRam = (ns.getServerMaxRam(currentTarget) < 1)\\n\\t\\t\\tif (!hackable || !portsOpened || ownedServer || haveNoRam) {\\n\\t\\t\\t\\tremoveNodes.push(currentTarget)\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// remove unwanted nodes\\n\\t\\tdeployStack = deployStack.filter(node => !removeNodes.includes(node))\\n\\t\\tvar copyStack =  [...deployStack]\\n\\t\\tvar totalServers = deployStack.length\\n\\n\\t\\twhile (deployStack.length > 0) {\\n\\t\\t\\tlet currentTarget = deployStack.pop()\\t\\t\\t\\n\\t\\t\\t// calculate Ram per server\\n\\t\\t\\tlet serverRam = ns.getServerMaxRam(currentServer)\\n\\t\\t\\tlet availableRam = parseFloat(serverRam) / totalServers\\n\\t\\t\\t\\n\\t\\t\\tns.print(\\\"server \\\", currentServer)\\n\\t\\t\\tns.print(\\\"target \\\", currentTarget)\\n\\t\\t\\tns.print(\\\"server ram \\\", serverRam)\\n\\t\\t\\tns.print(\\\"Available ram \\\", availableRam)\\n\\t\\t\\tns.print(\\\"n servers \\\", totalServers)\\n\\t\\t\\tns.print(\\\"targets \\\", copyStack)\\n\\n\\t\\t\\t// calculate how many threads can be run per hack type\\n\\t\\t\\tlet threads = calculateThreads(ns, availableRam)\\n\\t\\t\\tlet totalThreads = threads.reduce((a, b) => a + b, 0)\\n\\n\\t\\t\\tns.print(\\\"Allowed threads: \\\", threads)\\n\\t\\t\\tns.print(currentServer, \\\" \\\", currentTarget)\\n\\t\\n\\t\\t\\tawait ns.exec(\\\"deployHack.script\\\", \\\"home\\\", totalThreads, currentServer, currentTarget, threads[0], threads[1], threads[2])\\n\\t\\t\\tawait ns.sleep(200)\\t\\n\\t\\t}\\t\\n\\t}\\n\\tns.enableLog(\\\"ALL\\\")\\n}\\n\\nfunction calculateThreads(ns, serverRam) {\\n\\tvar weaken = 1.95 \\n\\tvar grow = 1.95 \\n\\tvar hack = 1.70\\n\\n\\tvar modifier1 = parseFloat((parseFloat(2)/16).toFixed(3))\\n\\tvar modifier2 = parseFloat((parseFloat(10)/16).toFixed(3))\\n\\tvar modifier3 = parseFloat((parseFloat(4)/16).toFixed(3))\\n\\n\\tvar sumOf = weaken + grow + hack\\n\\tvar freeRam = serverRam\\n\\tvar threads = [1, 1, 1]\\n\\t\\n\\tfor (let i = 0; i < 1000; i++) {\\t\\t\\n\\t\\tlet t1 = (threads[0] + modifier1)\\n\\t\\tlet t2 = (threads[1] + modifier2)\\n\\t\\tlet t3 = (threads[2] + modifier3)\\n\\n \\t\\tlet w = weaken * (t1).toFixed(0)\\n\\t\\tlet g = grow * (t2).toFixed(0)\\n\\t\\tlet h = hack * (t3).toFixed(0)\\n\\t\\t\\n\\t\\tsumOf = w + g + h\\n\\t\\t\\n\\t\\tif (sumOf < freeRam) {\\n\\t\\t\\tthreads[0] = t1\\n\\t\\t\\tthreads[1] = t2\\n\\t\\t\\tthreads[2] = t3\\n\\t\\t} else {\\n\\t\\t\\treturn [\\n\\t\\t\\t\\tparseInt(threads[0].toFixed(0)),\\n\\t\\t\\t\\tparseInt(threads[1].toFixed(0)),\\n\\t\\t\\t\\tparseInt(threads[2].toFixed(0))]\\n\\t\\t}\\n\\t}\\n\\treturn threads\\n}\",\"filename\":\"deployToNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"deployToNodes.js\",\"url\":\"blob:file:///f9a4db0b-a787-4085-b4a5-90a0a67de0ad\",\"moduleSequenceNumber\":1590}],\"dependents\":[],\"ramUsage\":6.7,\"server\":\"home\",\"moduleSequenceNumber\":408,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\tvar currentServer\\n\\tstack.push(ns.getHostname())\\n\\tvar portHackers = ['BruteSSH.exe', 'FTPCrack.exe', 'relaySMTP.exe', 'HTTPWorm.exe']\\n\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// open ports\\n\\townedServers.push(\\\"home\\\")\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tif (!ownedServers.includes(currentTarget)) {\\n\\t\\t\\tns.killall(currentTarget)\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"killNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"killNodes.js\",\"url\":\"blob:file:///55b6fe30-6d96-4912-9891-ce156d7b5116\",\"moduleSequenceNumber\":5147}],\"dependents\":[],\"ramUsage\":4.6,\"server\":\"home\",\"moduleSequenceNumber\":409,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export async function main(ns) {\\r\\n    ns.print(\\\"hello\\\")\\r\\n}\",\"filename\":\"test-vscode.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":410,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t// ns.disableLog(\\\"ALL\\\")\\n\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar deployStack = []\\n\\tvar currentServer\\n\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\townedServers.push(\\\"home\\\")\\n\\t\\n\\tstack.push(ns.getHostname())\\n\\t\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\t// ns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\n\\t// copy over lit files\\n\\tfor (let each in visited) {\\n\\t\\tlet currentTarget = visited[each]\\n\\t\\tlet files = ns.ls(currentTarget)\\n\\t\\tlet validFiles = files.filter(f => f.endsWith(\\\".lit\\\")) \\n\\t\\tfor (let file in validFiles) {\\n\\t\\t\\tlet currentFile = validFiles[file]\\n\\t\\t\\tns.print(currentFile, \\\" \\\", currentTarget)\\n\\t\\t\\tawait ns.scp(currentFile, currentTarget, \\\"home\\\")\\n\\t\\t}\\n\\t}\\n\\n\\t\\n\\t\\n\\tns.enableLog(\\\"ALL\\\")\\n}\",\"filename\":\"getLit.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"getLit.js\",\"url\":\"blob:file:///7287c303-642b-41e8-abb5-a4895c344622\",\"moduleSequenceNumber\":3175}],\"dependents\":[],\"ramUsage\":4.9,\"server\":\"home\",\"moduleSequenceNumber\":411,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tvar visited = []\\n\\tvar stack = []\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\townedServers.push(\\\"darkweb\\\")  // dont hack darkweb\\n\\tvar currentServer\\n\\tstack.push(ns.getHostname())\\n\\n\\t// Walk and get all nodes on network\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\tns.print(\\\"visiting \\\", currentServer)\\n\\t\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"scanNodes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"scanNodes.js\",\"url\":\"blob:file:///35e54f48-e8cc-45d2-9623-da46449e4575\",\"moduleSequenceNumber\":135}],\"dependents\":[],\"ramUsage\":4.1,\"server\":\"home\",\"moduleSequenceNumber\":412,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getHostname\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet currentStock = \\\"FSIG\\\"\\n\\tlet sym = ns.stock.getSymbols()\\n\\tfor (let each in sym) {\\n\\t\\tlet current = sym[each]\\n\\t\\t// need 4S TIX api\\n\\t\\tns.print(ns.stock.getForecast(current))\\n\\t}\\n\\t\\n\\tns.print(ns.stock.purchase4SMarketData())\\n\\tns.print(ns.stock.getAskPrice(currentStock))\\n\\t// Other things to consinder\\n\\t// ns.codingcontract\\n}\",\"filename\":\"stockMarket.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"stockMarket.js\",\"url\":\"blob:file:///7d08cf64-eb09-43fb-8775-f5102e1e021c\",\"moduleSequenceNumber\":889}],\"dependents\":[],\"ramUsage\":10.6,\"server\":\"home\",\"moduleSequenceNumber\":413,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.purchase4SMarketData\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t// Start walk from home\\n\\tvar target = ns.args[0]\\n\\tvar ownedServers = ns.getPurchasedServers()\\n\\n\\tvar startNode = \\\"home\\\"\\n\\tvar visited = []\\n\\tvar path = []\\n\\tvar stack = []\\n\\tvar nextStack = []\\n\\tstack.push(startNode)\\n\\tvar found = false\\n\\n\\twhile(stack.length > 0) {\\n\\t\\tcurrentServer = stack.pop()\\n\\t\\tstack.push(...ns.scan(currentServer))\\n\\t\\tnextStack.push(...ns.scan(stack))\\n\\t\\tif (visited.includes(currentServer) || ownedServers.includes(currentServer)) {\\n\\t\\t} else {\\n\\t\\t\\t\\n\\t\\t\\tnextStack.push(...ns.scan(currentServer))\\n\\t\\t\\tvisited.push(currentServer)\\n\\t\\t}\\n\\t}\\n\\tns.print(path)\\n}\",\"filename\":\"findPathToNode.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"findPathToNode.js\",\"url\":\"blob:file:///a4716c5d-fbbb-4a18-93c2-4bd641ff5074\",\"moduleSequenceNumber\":1991}],\"dependents\":[],\"ramUsage\":4.05,\"server\":\"home\",\"moduleSequenceNumber\":414,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"odin\",\"odin-0\",\"odin-1\",\"odin-2\",\"odin-3\",\"odin-4\",\"odin-5\",\"odin-6\",\"odin-7\",\"odin-8\",\"odin-9\",\"odin-10\",\"odin-11\",\"odin-12\",\"odin-13\",\"odin-14\",\"odin-15\",\"odin-16\",\"odin-17\",\"odin-18\",\"odin-19\",\"odin-20\",\"odin-21\",\"odin-22\",\"odin-23\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[{\"ctor\":\"TextFile\",\"data\":{\"fn\":\"readme.txt\",\"text\":\"Exposing servers on network\\r\\n---------------------------\\r\\n\\r\\nFirst, open ports on all accessible servers, note to add any additional .exe files as requires\\r\\n$ walkNodes.js\\r\\n\\r\\nNext, we want to set up our botnet. However, we want to do several things\\r\\n\\r\\nGet each node to hack available servers\\r\\nEach node must calculate how much RAM it has, and how many threads can be Running\\r\\nReceive a hack script which calculates when to weaken, grow and hack\\r\\nNumber of threads determined by RAM\\r\\nThe total RAM cost can be calculated by simply multiplying the base RAM cost of the script with the number of threads\\r\\n1) write the hack script\\r\\n2) calculate its ram usage\\r\\n3) calculate how many threads each function (grow etc) should use, relative to RAM available\\r\\n4) calculate cost to run for each available servers\\r\\n5) combine cost so that all servers can be hacked, based on RAM available\\r\\n\\r\\nRunning a Botnet\\r\\n----------------\\r\\n\\r\\nTo purchase a botnet army of size N, where each will be called 'odin_N'\\r\\n$ setupBotnet.js N \\r\\n\\r\\nTo deploy botnet using N threads\\r\\n$ deployBotnet.js N\"}}],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1.002,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"33.5.0.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"ecorp\",\"moduleSequenceNumber\":415,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"ecorp\",\"moduleSequenceNumber\":416,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"ecorp\",\"moduleSequenceNumber\":417,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"ecorp\",\"moduleSequenceNumber\":418,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":46814868507,\"moneyMax\":1170371712675,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1391,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"44.7.6.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"megacorp\",\"moduleSequenceNumber\":419,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"megacorp\",\"moduleSequenceNumber\":420,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"megacorp\",\"moduleSequenceNumber\":421,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"megacorp\",\"moduleSequenceNumber\":422,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":59209134677,\"moneyMax\":1480228366925,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1232,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"97.4.9.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"b-and-a\",\"moduleSequenceNumber\":423,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"b-and-a\",\"moduleSequenceNumber\":424,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"b-and-a\",\"moduleSequenceNumber\":425,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"b-and-a\",\"moduleSequenceNumber\":426,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"4sigma\",\"ecorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":23609893927,\"moneyMax\":590247348175,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1119,\"serverGrowth\":80}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"65.6.1.5\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"blade\",\"moduleSequenceNumber\":427,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"blade\",\"moduleSequenceNumber\":428,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"blade\",\"moduleSequenceNumber\":429,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"blade\",\"moduleSequenceNumber\":430,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnitek\",\"megacorp\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":38441237744,\"moneyMax\":961030943600,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1067,\"serverGrowth\":60}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"41.5.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nwo\",\"moduleSequenceNumber\":431,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nwo\",\"moduleSequenceNumber\":432,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nwo\",\"moduleSequenceNumber\":433,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"nwo\",\"moduleSequenceNumber\":434,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\".\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":35519516090,\"moneyMax\":887987902250,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1094,\"serverGrowth\":78}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"71.2.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"clarkinc\",\"moduleSequenceNumber\":435,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"clarkinc\",\"moduleSequenceNumber\":436,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"clarkinc\",\"moduleSequenceNumber\":437,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"clarkinc\",\"moduleSequenceNumber\":438,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":50,\"minDifficulty\":17,\"moneyAvailable\":18595327536,\"moneyMax\":464883188400,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1154,\"serverGrowth\":63}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"77.6.5.0\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnitek\",\"moduleSequenceNumber\":439,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnitek\",\"moduleSequenceNumber\":440,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omnitek\",\"moduleSequenceNumber\":441,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"omnitek\",\"moduleSequenceNumber\":442,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"fulcrumtech\",\"blade\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":16122030693,\"moneyMax\":403050767325,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":905,\"serverGrowth\":98}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"29.9.9.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"4sigma\",\"moduleSequenceNumber\":443,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"4sigma\",\"moduleSequenceNumber\":444,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"4sigma\",\"moduleSequenceNumber\":445,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"4sigma\",\"moduleSequenceNumber\":446,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"helios\",\"b-and-a\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":21878321258,\"moneyMax\":546958031450,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1172,\"serverGrowth\":85}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-601398-Sector-12.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[8,-3,3,4,4,8,-8,-4,-7,-3,5,7,-5,0,5,-5,-7,-6,-2,-10,8,-6,10,0,-8,6,-3,9,-4,-9,-3,7,-4,-4,-1,4,-10,6,-2,-8],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"57.4.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":447,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":448,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":449,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":450,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":22063742406,\"moneyMax\":551593560150,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1287,\"serverGrowth\":91}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"85.0.5.3\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":451,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":452,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":453,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":454,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":1515329495,\"moneyMax\":37883237375,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1119,\"serverGrowth\":85}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-858349-FoodNStuff.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"72690751390\",0],\"reward\":{\"name\":\"FoodNStuff\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"18.3.4.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":455,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":456,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":457,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":458,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1218,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"24.5.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"stormtech\",\"moduleSequenceNumber\":459,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"stormtech\",\"moduleSequenceNumber\":460,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"stormtech\",\"moduleSequenceNumber\":461,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"stormtech\",\"moduleSequenceNumber\":462,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":1142805160,\"moneyMax\":28570129000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1047,\"serverGrowth\":72}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"45.8.1.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"defcomm\",\"moduleSequenceNumber\":463,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"defcomm\",\"moduleSequenceNumber\":464,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"defcomm\",\"moduleSequenceNumber\":465,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"defcomm\",\"moduleSequenceNumber\":466,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":831280811,\"moneyMax\":20782020275,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":901,\"serverGrowth\":61}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"77.1.3.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"infocomm\",\"moduleSequenceNumber\":467,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"infocomm\",\"moduleSequenceNumber\":468,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"infocomm\",\"moduleSequenceNumber\":469,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"infocomm\",\"moduleSequenceNumber\":470,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":687102481,\"moneyMax\":17177562025,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":888,\"serverGrowth\":47}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"80.8.9.0\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"helios\",\"moduleSequenceNumber\":471,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"helios\",\"moduleSequenceNumber\":472,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"helios\",\"moduleSequenceNumber\":473,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"helios\",\"moduleSequenceNumber\":474,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"microdyne\",\"4sigma\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":717952687,\"moneyMax\":17948817175,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":811,\"serverGrowth\":74}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"62.3.6.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"vitalife\",\"moduleSequenceNumber\":475,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"vitalife\",\"moduleSequenceNumber\":476,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"vitalife\",\"moduleSequenceNumber\":477,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"vitalife\",\"moduleSequenceNumber\":478,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"run4theh111z\",\"kuai-gong\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":718186347,\"moneyMax\":17954658675,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":802,\"serverGrowth\":62}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"31.8.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"icarus\",\"moduleSequenceNumber\":479,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"icarus\",\"moduleSequenceNumber\":480,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"icarus\",\"moduleSequenceNumber\":481,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"icarus\",\"moduleSequenceNumber\":482,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"unitalife\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":951540387,\"moneyMax\":23788509675,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":912,\"serverGrowth\":95}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"41.1.0.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"univ-energy\",\"moduleSequenceNumber\":483,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"univ-energy\",\"moduleSequenceNumber\":484,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"univ-energy\",\"moduleSequenceNumber\":485,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"univ-energy\",\"moduleSequenceNumber\":486,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1195323089,\"moneyMax\":29883077225,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":839,\"serverGrowth\":90}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"76.9.3.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"titan-labs\",\"moduleSequenceNumber\":487,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"titan-labs\",\"moduleSequenceNumber\":488,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"titan-labs\",\"moduleSequenceNumber\":489,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"titan-labs\",\"moduleSequenceNumber\":490,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"taiyang-digital\",\"stormtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":855716075,\"moneyMax\":21392901875,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":847,\"serverGrowth\":63}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"66.0.3.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"microdyne\",\"moduleSequenceNumber\":491,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"microdyne\",\"moduleSequenceNumber\":492,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"microdyne\",\"moduleSequenceNumber\":493,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"microdyne\",\"moduleSequenceNumber\":494,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nova-med\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":596734583,\"moneyMax\":14918364575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":840,\"serverGrowth\":86}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"14.7.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":495,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":496,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":497,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":498,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zeus-med\",\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":78,\"minDifficulty\":26,\"moneyAvailable\":843034008,\"moneyMax\":21075850200,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":902,\"serverGrowth\":79}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"74.0.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":499,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":500,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":501,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":502,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"rho-construction\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":821553154,\"moneyMax\":20538828850,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":862,\"serverGrowth\":77}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"45.9.8.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aerocorp\",\"moduleSequenceNumber\":503,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aerocorp\",\"moduleSequenceNumber\":504,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"aerocorp\",\"moduleSequenceNumber\":505,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"aerocorp\",\"moduleSequenceNumber\":506,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"millenium-fitness\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":1173075193,\"moneyMax\":29326879825,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":852,\"serverGrowth\":64}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"62.8.6.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnia\",\"moduleSequenceNumber\":507,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omnia\",\"moduleSequenceNumber\":508,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omnia\",\"moduleSequenceNumber\":509,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"omnia\",\"moduleSequenceNumber\":510,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"global-pharm\",\"defcomm\",\"univ-energy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":988517663,\"moneyMax\":24712941575,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":887,\"serverGrowth\":67}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"90.4.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-def\",\"moduleSequenceNumber\":511,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-def\",\"moduleSequenceNumber\":512,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zb-def\",\"moduleSequenceNumber\":513,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zb-def\",\"moduleSequenceNumber\":514,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"icarus\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":948059693,\"moneyMax\":23701492325,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":795,\"serverGrowth\":73}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"26.6.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":515,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":516,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":517,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":518,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nova-med\",\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":813696226,\"moneyMax\":20342405650,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":782,\"serverGrowth\":73}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"25.3.5.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"solaris\",\"moduleSequenceNumber\":519,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"solaris\",\"moduleSequenceNumber\":520,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"solaris\",\"moduleSequenceNumber\":521,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"solaris\",\"moduleSequenceNumber\":522,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"deltaone\",\"infocomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":739815020,\"moneyMax\":18495375500,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":823,\"serverGrowth\":80}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"30.0.9.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"deltaone\",\"moduleSequenceNumber\":523,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"deltaone\",\"moduleSequenceNumber\":524,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"deltaone\",\"moduleSequenceNumber\":525,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"deltaone\",\"moduleSequenceNumber\":526,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"galactic-cyber\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":1455837033,\"moneyMax\":36395925825,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":815,\"serverGrowth\":62}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"30.1.2.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"global-pharm\",\"moduleSequenceNumber\":527,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"global-pharm\",\"moduleSequenceNumber\":528,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"global-pharm\",\"moduleSequenceNumber\":529,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"global-pharm\",\"moduleSequenceNumber\":530,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"millenium-fitness\",\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1744782662,\"moneyMax\":43619566550,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":802,\"serverGrowth\":88}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"89.2.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nova-med\",\"moduleSequenceNumber\":531,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nova-med\",\"moduleSequenceNumber\":532,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nova-med\",\"moduleSequenceNumber\":533,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"nova-med\",\"moduleSequenceNumber\":534,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zeus-med\",\"microdyne\",\"applied-energetics\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1249635245,\"moneyMax\":31240881125,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":791,\"serverGrowth\":77}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"9.7.1.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zeus-med\",\"moduleSequenceNumber\":535,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zeus-med\",\"moduleSequenceNumber\":536,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zeus-med\",\"moduleSequenceNumber\":537,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zeus-med\",\"moduleSequenceNumber\":538,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":1353435682,\"moneyMax\":33835892050,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":802,\"serverGrowth\":70}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"45.1.6.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"unitalife\",\"moduleSequenceNumber\":539,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"unitalife\",\"moduleSequenceNumber\":540,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"unitalife\",\"moduleSequenceNumber\":541,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"unitalife\",\"moduleSequenceNumber\":542,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"aerocorp\",\"icarus\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1099379380,\"moneyMax\":27484484500,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":807,\"serverGrowth\":75}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"91.8.1.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":543,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":544,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":545,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":546,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":739435794,\"moneyMax\":18485894850,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":673,\"serverGrowth\":63}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":true,\"ip\":\"83.7.3.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rho-construction\",\"moduleSequenceNumber\":547,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rho-construction\",\"moduleSequenceNumber\":548,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"rho-construction\",\"moduleSequenceNumber\":549,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"rho-construction\",\"moduleSequenceNumber\":550,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":574695581,\"moneyMax\":14367389525,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":481,\"serverGrowth\":45}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"33.3.1.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":551,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":552,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":553,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":554,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":52,\"minDifficulty\":17,\"moneyAvailable\":663047938,\"moneyMax\":16576198450,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":561,\"serverGrowth\":53}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"27.2.9.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aevum-police\",\"moduleSequenceNumber\":555,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"aevum-police\",\"moduleSequenceNumber\":556,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"aevum-police\",\"moduleSequenceNumber\":557,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"aevum-police\",\"moduleSequenceNumber\":558,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":232476560,\"moneyMax\":5811914000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":436,\"serverGrowth\":36}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-66104.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[45,23,8],[13,16,38],[17,8,23],[22,1,12],[47,7,41],[6,2,19],[24,20,15],[28,27,27],[8,15,8],[37,28,6],[49,36,12],[29,37,28]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-772372-FoodNStuff.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[104,155,39,34,182,37,37,2,163,143,156,159,124,13,173,14,52,176,98,124,105,79,160,29,164,191],\"reward\":{\"name\":\"FoodNStuff\",\"type\":2}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":true,\"ip\":\"61.6.5.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":559,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":560,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":561,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":562,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"the-hub\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":245002764,\"moneyMax\":6125069100,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":371,\"serverGrowth\":45}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"63.5.6.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-institute\",\"moduleSequenceNumber\":563,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zb-institute\",\"moduleSequenceNumber\":564,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zb-institute\",\"moduleSequenceNumber\":565,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zb-institute\",\"moduleSequenceNumber\":566,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":838545105,\"moneyMax\":20963627625,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":767,\"serverGrowth\":78}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":true,\"ip\":\"94.6.1.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"summit-uni\",\"moduleSequenceNumber\":567,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"summit-uni\",\"moduleSequenceNumber\":568,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"summit-uni\",\"moduleSequenceNumber\":569,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"summit-uni\",\"moduleSequenceNumber\":570,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":45,\"hackDifficulty\":45,\"minDifficulty\":15,\"moneyAvailable\":346661906,\"moneyMax\":8666547650,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":461,\"serverGrowth\":56}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"67.6.3.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"syscore\",\"moduleSequenceNumber\":571,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"syscore\",\"moduleSequenceNumber\":572,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"syscore\",\"moduleSequenceNumber\":573,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"syscore\",\"moduleSequenceNumber\":574,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":417952270,\"moneyMax\":10448806750,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":563,\"serverGrowth\":68}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-278474.cct\",\"type\":\"Array Jumping Game\",\"data\":[4,0,8,2],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":true,\"ip\":\"2.4.0.9\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"catalyst\",\"moduleSequenceNumber\":575,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"catalyst\",\"moduleSequenceNumber\":576,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"catalyst\",\"moduleSequenceNumber\":577,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"catalyst\",\"moduleSequenceNumber\":578,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":502297104,\"moneyMax\":12557427600,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":431,\"serverGrowth\":27}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":true,\"ip\":\"59.0.9.3\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":7.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,0,9]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1323.0878803710184,\"offlineMoneyMade\":0,\"offlineRunningTime\":163842.385,\"onlineExpGained\":134.19230480768897,\"onlineMoneyMade\":0,\"onlineRunningTime\":10328.81000000376,\"pid\":22,\"ramUsage\":1.95,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,24,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3653.6722785273987,\"offlineMoneyMade\":0,\"offlineRunningTime\":163842.50199999998,\"onlineExpGained\":357.8461461538373,\"onlineMoneyMade\":0,\"onlineRunningTime\":10328.81000000376,\"pid\":23,\"ramUsage\":1.95,\"server\":\"the-hub\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[2788583,36,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5690.9003367765345,\"offlineMoneyMade\":0,\"offlineRunningTime\":163842.595,\"onlineExpGained\":588.955115544857,\"onlineMoneyMade\":2788583,\"onlineRunningTime\":10328.610000003759,\"pid\":24,\"ramUsage\":1.7,\"server\":\"the-hub\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"the-hub\",\"moduleSequenceNumber\":579,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"the-hub\",\"moduleSequenceNumber\":580,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"the-hub\",\"moduleSequenceNumber\":581,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"the-hub\",\"moduleSequenceNumber\":582,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omega-net\",\"rothman-uni\",\"zb-institute\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":43,\"hackDifficulty\":43,\"minDifficulty\":14,\"moneyAvailable\":182041176,\"moneyMax\":4551029400,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":304,\"serverGrowth\":47}},\"comptek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"comptek\",\"httpPortOpen\":true,\"ip\":\"17.8.8.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"comptek\",\"moduleSequenceNumber\":583,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"comptek\",\"moduleSequenceNumber\":584,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"comptek\",\"moduleSequenceNumber\":585,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"comptek\",\"moduleSequenceNumber\":586,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"silver-helix\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":236889903,\"moneyMax\":5922247575,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":387,\"serverGrowth\":57}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":true,\"ip\":\"27.1.0.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,0,48]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6296.101646600862,\"offlineMoneyMade\":0,\"offlineRunningTime\":163842.689,\"onlineExpGained\":648.4343755655954,\"onlineMoneyMade\":0,\"onlineRunningTime\":10328.410000003758,\"pid\":25,\"ramUsage\":1.95,\"server\":\"netlink\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,207,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":24836.75862491669,\"offlineMoneyMade\":0,\"offlineRunningTime\":163842.789,\"onlineExpGained\":2796.37324462663,\"onlineMoneyMade\":0,\"onlineRunningTime\":10328.410000003758,\"pid\":26,\"ramUsage\":1.95,\"server\":\"netlink\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[18802884,188,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":25734.799532496538,\"offlineMoneyMade\":0,\"offlineRunningTime\":163842.898,\"onlineExpGained\":3053.0451849546776,\"onlineMoneyMade\":18802884,\"onlineRunningTime\":10328.210000003757,\"pid\":27,\"ramUsage\":1.7,\"server\":\"netlink\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"netlink\",\"moduleSequenceNumber\":587,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"netlink\",\"moduleSequenceNumber\":588,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"netlink\",\"moduleSequenceNumber\":589,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"netlink\",\"moduleSequenceNumber\":590,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":417,\"serverGrowth\":45}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":true,\"ip\":\"8.4.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":591,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":592,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":593,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":594,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"neo-net\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":83292164,\"moneyMax\":2082304100,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":253,\"serverGrowth\":42}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":true,\"ip\":\"2.2.1.6\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"n00dles\",\"moduleSequenceNumber\":595,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"n00dles\",\"moduleSequenceNumber\":596,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"n00dles\",\"moduleSequenceNumber\":597,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"n00dles\",\"moduleSequenceNumber\":598,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1.6720000000000006,\"minDifficulty\":1,\"moneyAvailable\":6112,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":true,\"ip\":\"47.0.2.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":599,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":600,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":601,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":602,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":10,\"hackDifficulty\":3.3600000000000003,\"minDifficulty\":3,\"moneyAvailable\":333.11796364324806,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":true,\"ip\":\"71.2.0.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":603,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":604,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":605,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":606,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10.783999999999995,\"minDifficulty\":3,\"moneyAvailable\":635.2165361013854,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":true,\"ip\":\"18.0.4.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":15.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,0,0,40]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1248.7562972916667,\"offlineMoneyMade\":0,\"offlineRunningTime\":163842.986,\"onlineExpGained\":120,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.610000003773,\"pid\":28,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.085,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.410000003772,\"pid\":29,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,0,72]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":6092.703130849286,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.173,\"onlineExpGained\":594.325781674196,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.410000003772,\"pid\":30,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\"],\"dataMap\":{\"CSEC\":[0,1349,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9863.173499739583,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.265,\"onlineExpGained\":1022.25,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.410000003772,\"pid\":31,\"ramUsage\":1.7,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,108,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8916.556988069011,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.348,\"onlineExpGained\":891.4886725112923,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.21000000377,\"pid\":32,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,0,48]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5915.43793756262,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.445,\"onlineExpGained\":564.3619796379966,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.21000000377,\"pid\":33,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[27379785,332,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":27074.555035958434,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.52800000002,\"onlineExpGained\":2808.602044647859,\"onlineMoneyMade\":27379785,\"onlineRunningTime\":10331.21000000377,\"pid\":34,\"ramUsage\":1.7,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,76,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":8179.184129275402,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.615,\"onlineExpGained\":893.5731344268282,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.01000000377,\"pid\":35,\"ramUsage\":1.95,\"server\":\"joesguns\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"joesguns\",\"moduleSequenceNumber\":607,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"joesguns\",\"moduleSequenceNumber\":608,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"joesguns\",\"moduleSequenceNumber\":609,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"joesguns\",\"moduleSequenceNumber\":610,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\",\"zer0\",\"max-hardware\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":6.071999999999999,\"minDifficulty\":5,\"moneyAvailable\":233.3878695650501,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":true,\"ip\":\"69.7.5.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":27.75,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,0,9]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":1323.096966308323,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.71600000001,\"onlineExpGained\":134.19230480768897,\"onlineMoneyMade\":0,\"onlineRunningTime\":10330.010000003766,\"pid\":36,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[0,0,24,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3653.6980960499923,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.815,\"onlineExpGained\":357.8461461538373,\"onlineMoneyMade\":0,\"onlineRunningTime\":10329.810000003765,\"pid\":37,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,0,16]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":2098.7139838042995,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.905,\"onlineExpGained\":216.14479185519846,\"onlineMoneyMade\":0,\"onlineRunningTime\":10329.810000003765,\"pid\":38,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\"],\"dataMap\":{\"omega-net\":[5110006,62,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9625.55728360078,\"offlineMoneyMade\":0,\"offlineRunningTime\":163843.99,\"onlineExpGained\":1066.0833104166395,\"onlineMoneyMade\":5110006,\"onlineRunningTime\":10329.610000003762,\"pid\":39,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[0,0,46,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":5519.316326465135,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.07499999998,\"onlineExpGained\":621.4162765836955,\"onlineMoneyMade\":0,\"onlineRunningTime\":10329.610000003762,\"pid\":40,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,240]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18521.2377339047,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.16,\"onlineExpGained\":1981.0859389139916,\"onlineMoneyMade\":0,\"onlineRunningTime\":10329.410000003762,\"pid\":41,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\"],\"dataMap\":{\"silver-helix\":[10915194,116,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":15256.457235459566,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.24,\"onlineExpGained\":1749.4219090780127,\"onlineMoneyMade\":10915194,\"onlineRunningTime\":10329.410000003762,\"pid\":42,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,764,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":61535.12479250039,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.32299999997,\"onlineExpGained\":6306.456905542886,\"onlineMoneyMade\":0,\"onlineRunningTime\":10329.410000003762,\"pid\":43,\"ramUsage\":1.95,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[14456976,2532,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":198857.78532199658,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.411,\"onlineExpGained\":19938.804522694296,\"onlineMoneyMade\":14456976,\"onlineRunningTime\":10329.21000000376,\"pid\":44,\"ramUsage\":1.7,\"server\":\"zer0\",\"threads\":2,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zer0\",\"moduleSequenceNumber\":611,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"zer0\",\"moduleSequenceNumber\":612,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"zer0\",\"moduleSequenceNumber\":613,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"zer0\",\"moduleSequenceNumber\":614,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"joesguns\",\"silver-helix\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8.707999999999986,\"minDifficulty\":8,\"moneyAvailable\":114489581.3229968,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":true,\"ip\":\"43.5.3.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":15.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,0,42]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3975.301686506857,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.512,\"onlineExpGained\":420.25338574659673,\"onlineMoneyMade\":0,\"onlineRunningTime\":10332.410000003776,\"pid\":45,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,126,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":11171.51699748376,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.59,\"onlineExpGained\":1260.7601572397914,\"onlineMoneyMade\":0,\"onlineRunningTime\":10332.410000003776,\"pid\":46,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,0,26]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3840.4638728968057,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.674,\"onlineExpGained\":351.2352867646975,\"onlineMoneyMade\":0,\"onlineRunningTime\":10332.210000003775,\"pid\":47,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[22866850,159,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14528.791288313045,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.75300000003,\"onlineExpGained\":1723.5391832107439,\"onlineMoneyMade\":22866850,\"onlineRunningTime\":10332.210000003775,\"pid\":48,\"ramUsage\":1.7,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,98,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13801.474594236111,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.836,\"onlineExpGained\":1323.8868501130905,\"onlineMoneyMade\":0,\"onlineRunningTime\":10332.210000003775,\"pid\":49,\"ramUsage\":1.95,\"server\":\"nectar-net\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[13150779,144,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":21501.05709693632,\"offlineMoneyMade\":0,\"offlineRunningTime\":163844.924,\"onlineExpGained\":2070.2618344880643,\"onlineMoneyMade\":13150779,\"onlineRunningTime\":10332.010000003775,\"pid\":50,\"ramUsage\":1.7,\"server\":\"nectar-net\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nectar-net\",\"moduleSequenceNumber\":615,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"nectar-net\",\"moduleSequenceNumber\":616,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"nectar-net\",\"moduleSequenceNumber\":617,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"nectar-net\",\"moduleSequenceNumber\":618,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"iron-gym\",\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":7.607999999999992,\"minDifficulty\":7,\"moneyAvailable\":26368953.670225583,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":true,\"ip\":\"89.6.7.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,0,216]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18278.284594835564,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.01499999998,\"onlineExpGained\":1782.9773450225869,\"onlineMoneyMade\":0,\"onlineRunningTime\":10330.410000003767,\"pid\":51,\"ramUsage\":1.95,\"server\":\"neo-net\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[0,0,972,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80249.70844467179,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.094,\"onlineExpGained\":8023.3980526016585,\"onlineMoneyMade\":0,\"onlineRunningTime\":10330.210000003766,\"pid\":52,\"ramUsage\":1.95,\"server\":\"neo-net\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\"],\"dataMap\":{\"max-hardware\":[113827732,1300,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":106201.61737158359,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.166,\"onlineExpGained\":11061.063158936462,\"onlineMoneyMade\":113827732,\"onlineRunningTime\":10330.010000003766,\"pid\":53,\"ramUsage\":1.7,\"server\":\"neo-net\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"neo-net\",\"moduleSequenceNumber\":619,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"neo-net\",\"moduleSequenceNumber\":620,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"neo-net\",\"moduleSequenceNumber\":621,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"neo-net\",\"moduleSequenceNumber\":622,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"max-hardware\",\"johnson-ortho\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":10.651999999999994,\"minDifficulty\":8,\"moneyAvailable\":12427152.40660159,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":true,\"ip\":\"81.1.5.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":60.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,0,240]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":29577.461164541353,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.252,\"onlineExpGained\":2821.8098981899766,\"onlineMoneyMade\":0,\"onlineRunningTime\":10328.610000003759,\"pid\":54,\"ramUsage\":1.95,\"server\":\"silver-helix\",\"threads\":5,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,1444,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":155405.8056482369,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.326,\"onlineExpGained\":16977.889554109723,\"onlineMoneyMade\":0,\"onlineRunningTime\":10328.610000003759,\"pid\":55,\"ramUsage\":1.95,\"server\":\"silver-helix\",\"threads\":19,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[312203744,1872,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":196289.1741689361,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.412,\"onlineExpGained\":22950.72050527842,\"onlineMoneyMade\":312203744,\"onlineRunningTime\":10328.410000003758,\"pid\":56,\"ramUsage\":1.7,\"server\":\"silver-helix\",\"threads\":8,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"silver-helix\",\"moduleSequenceNumber\":623,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"silver-helix\",\"moduleSequenceNumber\":624,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"silver-helix\",\"moduleSequenceNumber\":625,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"silver-helix\",\"moduleSequenceNumber\":626,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zer0\",\"comptek\",\"netlink\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10.912000000000043,\"minDifficulty\":10,\"moneyAvailable\":81616111.8466935,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":true,\"ip\":\"20.7.0.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":627,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":628,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":629,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":630,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5.256,\"minDifficulty\":5,\"moneyAvailable\":691.277438010771,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":true,\"ip\":\"31.2.6.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":631,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":632,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":633,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":634,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":8.512,\"minDifficulty\":5,\"moneyAvailable\":252.35376334842363,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":5,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":true,\"ip\":\"22.4.4.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":44897.44075285831,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.48299999998,\"onlineExpGained\":4502.714847284959,\"onlineMoneyMade\":0,\"onlineRunningTime\":10332.010000003775,\"pid\":57,\"ramUsage\":1.95,\"server\":\"phantasy\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,2403,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":231977.5976751999,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.575,\"onlineExpGained\":24044.4972845017,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.810000003774,\"pid\":58,\"ramUsage\":1.95,\"server\":\"phantasy\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[109053856,3408,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":325015.62566037197,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.65000000002,\"onlineExpGained\":34410.747466251596,\"onlineMoneyMade\":109053856,\"onlineRunningTime\":10331.810000003774,\"pid\":59,\"ramUsage\":1.7,\"server\":\"phantasy\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"phantasy\",\"moduleSequenceNumber\":635,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"phantasy\",\"moduleSequenceNumber\":636,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"phantasy\",\"moduleSequenceNumber\":637,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"phantasy\",\"moduleSequenceNumber\":638,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nectar-net\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":8.777999999999999,\"minDifficulty\":7,\"moneyAvailable\":226923952.75362518,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":true,\"ip\":\"56.9.1.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,0,134]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":14488.05353243006,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.74,\"onlineExpGained\":1575.5105264894075,\"onlineMoneyMade\":0,\"onlineRunningTime\":10330.810000003768,\"pid\":60,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[0,0,380,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39323.75351717719,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.828,\"onlineExpGained\":4467.865672134141,\"onlineMoneyMade\":0,\"onlineRunningTime\":10330.610000003768,\"pid\":61,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":4,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,474]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36479.281662899535,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.92299999998,\"onlineExpGained\":3912.644729355133,\"onlineMoneyMade\":0,\"onlineRunningTime\":10330.610000003768,\"pid\":62,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\"],\"dataMap\":{\"neo-net\":[7972200,526,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":55749.23287441277,\"offlineMoneyMade\":0,\"offlineRunningTime\":163845.999,\"onlineExpGained\":6501.9203070793765,\"onlineMoneyMade\":7972200,\"onlineRunningTime\":10330.610000003768,\"pid\":63,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,1528,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":123071.36868072854,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.08999999997,\"onlineExpGained\":12612.913811085771,\"onlineMoneyMade\":0,\"onlineRunningTime\":10330.410000003767,\"pid\":64,\"ramUsage\":1.95,\"server\":\"max-hardware\",\"threads\":4,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[13987456,2524,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":197694.64403461356,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.163,\"onlineExpGained\":19856.25927523955,\"onlineMoneyMade\":13987456,\"onlineRunningTime\":10330.210000003766,\"pid\":65,\"ramUsage\":1.7,\"server\":\"max-hardware\",\"threads\":2,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"max-hardware\",\"moduleSequenceNumber\":639,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"max-hardware\",\"moduleSequenceNumber\":640,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"max-hardware\",\"moduleSequenceNumber\":641,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"max-hardware\",\"moduleSequenceNumber\":642,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"joesguns\",\"neo-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5.3579999999999925,\"minDifficulty\":5,\"moneyAvailable\":184607638.99776474,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":true,\"ip\":\"66.2.5.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,0,144]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":17746.566264244742,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.24700000003,\"onlineExpGained\":1693.085938913989,\"onlineMoneyMade\":0,\"onlineRunningTime\":10329.21000000376,\"pid\":66,\"ramUsage\":1.95,\"server\":\"omega-net\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[0,0,684,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":73613.63381099017,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.318,\"onlineExpGained\":8042.158209841426,\"onlineMoneyMade\":0,\"onlineRunningTime\":10329.21000000376,\"pid\":67,\"ramUsage\":1.95,\"server\":\"omega-net\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\"],\"dataMap\":{\"zer0\":[149616316,940,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":99138.36801356597,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.402,\"onlineExpGained\":11510.632876366582,\"onlineMoneyMade\":149616316,\"onlineRunningTime\":10329.01000000376,\"pid\":68,\"ramUsage\":1.7,\"server\":\"omega-net\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omega-net\",\"moduleSequenceNumber\":643,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"omega-net\",\"moduleSequenceNumber\":644,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"omega-net\",\"moduleSequenceNumber\":645,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"omega-net\",\"moduleSequenceNumber\":646,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"zer0\",\"the-hub\",\"crush-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":34,\"hackDifficulty\":28.156000000000123,\"minDifficulty\":11,\"moneyAvailable\":60998236.804136254,\"moneyMax\":1506189100,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":191,\"serverGrowth\":32}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":true,\"ip\":\"91.9.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":647,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":648,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":649,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":650,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":40,\"hackDifficulty\":40,\"minDifficulty\":13,\"moneyAvailable\":44033322,\"moneyMax\":1100833050,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":238,\"serverGrowth\":28}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":true,\"ip\":\"99.2.1.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":30.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,0,447]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":44568.606916383374,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.479,\"onlineExpGained\":4472.696748303059,\"onlineMoneyMade\":0,\"onlineRunningTime\":10332.610000003777,\"pid\":69,\"ramUsage\":1.95,\"server\":\"iron-gym\",\"threads\":3,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[0,0,2403,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":231978.75452270446,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.565,\"onlineExpGained\":24044.4972845017,\"onlineMoneyMade\":0,\"onlineRunningTime\":10332.610000003777,\"pid\":70,\"ramUsage\":1.95,\"server\":\"iron-gym\",\"threads\":9,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\"],\"dataMap\":{\"nectar-net\":[106462700,3432,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":327237.60683869576,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.655,\"onlineExpGained\":34590.856060142985,\"onlineMoneyMade\":106462700,\"onlineRunningTime\":10332.410000003776,\"pid\":71,\"ramUsage\":1.7,\"server\":\"iron-gym\",\"threads\":4,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"iron-gym\",\"moduleSequenceNumber\":651,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"iron-gym\",\"moduleSequenceNumber\":652,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"iron-gym\",\"moduleSequenceNumber\":653,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"iron-gym\",\"moduleSequenceNumber\":654,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":95.48199999999999,\"minDifficulty\":10,\"moneyAvailable\":498728432,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":true,\"ip\":\"63.6.4.9\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":655,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":656,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":657,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":658,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"aerocorp\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":46,\"hackDifficulty\":46,\"minDifficulty\":15,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":491,\"serverGrowth\":43}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"76.0.3.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":659,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":660,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":661,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":662,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":57,\"minDifficulty\":19,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1065,\"serverGrowth\":60}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"36.9.4.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":663,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":664,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":665,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":666,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":44,\"minDifficulty\":15,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":708,\"serverGrowth\":50}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"79.9.4.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":667,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":668,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":669,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":670,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"nova-med\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":514,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":true,\"ip\":\"40.4.6.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":671,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":672,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":673,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":674,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"comptek\",\"lexo-corp\",\"rho-construction\",\"alpha-ent\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":5,\"requiredHackingSkill\":356,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":true,\"ip\":\"23.1.1.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":15.1,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,0,84]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":7950.694605798989,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.739,\"onlineExpGained\":840.5067714931935,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.810000003774,\"pid\":72,\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[0,0,252,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":22343.281961141838,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.817,\"onlineExpGained\":2521.520314479583,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.610000003773,\"pid\":73,\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"threads\":4,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\"],\"dataMap\":{\"phantasy\":[48776252,350,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":31177.013897596393,\"offlineMoneyMade\":0,\"offlineRunningTime\":163846.93,\"onlineExpGained\":3687.2231582766826,\"onlineMoneyMade\":48776252,\"onlineRunningTime\":10331.610000003773,\"pid\":74,\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"threads\":2,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":675,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":676,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":677,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":678,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"phantasy\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":5,\"requiredHackingSkill\":220,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"96.0.4.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\".\",\"moduleSequenceNumber\":679,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\".\",\"moduleSequenceNumber\":680,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\".\",\"moduleSequenceNumber\":681,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\".\",\"moduleSequenceNumber\":682,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"helios\",\"nwo\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":505,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":true,\"ip\":\"78.2.4.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":7.55,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,236]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18147.397911516597,\"offlineMoneyMade\":0,\"offlineRunningTime\":163847.011,\"onlineExpGained\":1948.0678399320916,\"onlineMoneyMade\":0,\"onlineRunningTime\":10331.01000000377,\"pid\":75,\"ramUsage\":1.95,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,764,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":61536.00333761952,\"offlineMoneyMade\":0,\"offlineRunningTime\":163847.097,\"onlineExpGained\":6306.456905542886,\"onlineMoneyMade\":0,\"onlineRunningTime\":10330.810000003768,\"pid\":76,\"ramUsage\":1.95,\"server\":\"CSEC\",\"threads\":2,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[6928008,1266,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":99338.15864912866,\"offlineMoneyMade\":0,\"offlineRunningTime\":163847.17799999999,\"onlineExpGained\":9990.038573210832,\"onlineMoneyMade\":6928008,\"onlineRunningTime\":10330.810000003768,\"pid\":77,\"ramUsage\":1.7,\"server\":\"CSEC\",\"threads\":1,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"CSEC\",\"moduleSequenceNumber\":683,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"CSEC\",\"moduleSequenceNumber\":684,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"CSEC\",\"moduleSequenceNumber\":685,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"CSEC\",\"moduleSequenceNumber\":686,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"joesguns\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":true,\"baseDifficulty\":0,\"hackDifficulty\":1.094,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":5,\"requiredHackingSkill\":55,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"91.2.7.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"The-Cave\",\"moduleSequenceNumber\":687,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"The-Cave\",\"moduleSequenceNumber\":688,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"The-Cave\",\"moduleSequenceNumber\":689,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"The-Cave\",\"moduleSequenceNumber\":690,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"31.4.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":0}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"5.1.1.2\",\"isConnectedTo\":false,\"maxRam\":1,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"darkweb\",\"moduleSequenceNumber\":691,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"darkweb\",\"moduleSequenceNumber\":692,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"darkweb\",\"moduleSequenceNumber\":693,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"darkweb\",\"moduleSequenceNumber\":694,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin\",\"httpPortOpen\":false,\"ip\":\"34.6.8.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10501.63010725244,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.225,\"onlineExpGained\":2864.5079104920737,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.8100000001416,\"pid\":78,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2925,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35558.34163939609,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.249,\"onlineExpGained\":9799.632325367616,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.8100000001416,\"pid\":79,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[7087616,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50358.68400817407,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.274,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":7087616,\"onlineRunningTime\":1235.8100000001416,\"pid\":80,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,885]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20659.388475541564,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.298,\"onlineExpGained\":5755.1695998302175,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.8100000001416,\"pid\":81,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82192.76969080251,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.323,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.8100000001416,\"pid\":82,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[11068400,4096,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":56159.87204323907,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.347,\"onlineExpGained\":16309.565374434123,\"onlineMoneyMade\":11068400,\"onlineRunningTime\":1235.8100000001416,\"pid\":83,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18890.977292284817,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.372,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":84,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71836.28946372791,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.395,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":85,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[12553712,3696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":67846.32952316817,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.42,\"onlineExpGained\":18728.687511311866,\"onlineMoneyMade\":12553712,\"onlineRunningTime\":1235.6100000001416,\"pid\":86,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19350.845498949042,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.444,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":87,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70149.55878823172,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.467,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":88,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[13175104,2976,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":61851.31707540408,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.493,\"onlineExpGained\":17499.592460406846,\"onlineMoneyMade\":13175104,\"onlineRunningTime\":1235.6100000001416,\"pid\":89,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,435]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12477.918367567265,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.514,\"onlineExpGained\":3590.718264281603,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":90,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39543.81564338338,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.541,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":91,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[15716960,2032,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":41198.441386575396,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.562,\"onlineExpGained\":11919.533732465814,\"onlineMoneyMade\":15716960,\"onlineRunningTime\":1235.6100000001416,\"pid\":92,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10094.45359928344,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.589,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":93,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32393.419507059214,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.61,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":94,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[21651568,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36171.04913336946,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.637,\"onlineExpGained\":10499.755476244127,\"onlineMoneyMade\":21651568,\"onlineRunningTime\":1235.6100000001416,\"pid\":95,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.657,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":96,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.23697156412,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.683,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":97,\"ramUsage\":1.95,\"server\":\"odin\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[3170064,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3542.732096945011,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.70300000001,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":3170064,\"onlineRunningTime\":1235.6100000001416,\"pid\":98,\"ramUsage\":1.7,\"server\":\"odin\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin\",\"moduleSequenceNumber\":695,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin\",\"moduleSequenceNumber\":696,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin\",\"moduleSequenceNumber\":697,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin\",\"moduleSequenceNumber\":698,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-0\",\"httpPortOpen\":false,\"ip\":\"5.6.0.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9974.36144138985,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.731,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":99,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34832.97162971833,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.75,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":100,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5948432,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50358.931342332085,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.777,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":5948432,\"onlineRunningTime\":1235.6100000001416,\"pid\":101,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,885]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20659.490119044207,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.798,\"onlineExpGained\":5755.1695998302175,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":102,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82193.17092692037,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.824,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.6100000001416,\"pid\":103,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[10306720,4128,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":55942.3367842968,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.845,\"onlineExpGained\":16309.565374434123,\"onlineMoneyMade\":10306720,\"onlineRunningTime\":1235.6100000001416,\"pid\":104,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18891.069418351857,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.872,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":105,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71836.6388179673,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.89199999999,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":106,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[11697136,3680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":68377.3877148984,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.919,\"onlineExpGained\":18650.651313348062,\"onlineMoneyMade\":11697136,\"onlineRunningTime\":1235.4100000001415,\"pid\":107,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19350.939617728065,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.94399999999,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":108,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70149.90338884444,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.97099999999,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":109,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[12304688,2944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":61765.63449633546,\"offlineMoneyMade\":0,\"offlineRunningTime\":81799.995,\"onlineExpGained\":17169.41147058786,\"onlineMoneyMade\":12304688,\"onlineRunningTime\":1235.4100000001415,\"pid\":110,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,435]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12477.979304876504,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.022,\"onlineExpGained\":3590.718264281603,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":111,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39544.00923778405,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.043,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":112,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[15349712,2000,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":40327.99374527606,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.07,\"onlineExpGained\":11721.425138574416,\"onlineMoneyMade\":15349712,\"onlineRunningTime\":1235.4100000001415,\"pid\":113,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10094.502086017856,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.09,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":114,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32393.579799611613,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.117,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":115,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[20203696,1712,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36171.22652769208,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.138,\"onlineExpGained\":10400.701179298429,\"onlineMoneyMade\":20203696,\"onlineRunningTime\":1235.4100000001415,\"pid\":116,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.16500000001,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":117,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.258248317068,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.187,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":118,\"ramUsage\":1.95,\"server\":\"odin-0\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[10844000,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4463.622307461092,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.214,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":10844000,\"onlineRunningTime\":1235.4100000001415,\"pid\":119,\"ramUsage\":1.7,\"server\":\"odin-0\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-0\",\"moduleSequenceNumber\":699,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-0\",\"moduleSequenceNumber\":700,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-0\",\"moduleSequenceNumber\":701,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-0\",\"moduleSequenceNumber\":702,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-1\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-1\",\"httpPortOpen\":false,\"ip\":\"43.9.6.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9974.410223177827,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.236,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":120,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34833.14486125301,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.26000000001,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.4100000001415,\"pid\":121,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5515808,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50359.179324215074,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.284,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":5515808,\"onlineRunningTime\":1235.4100000001415,\"pid\":122,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,885]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20659.592710903424,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.307,\"onlineExpGained\":5755.1695998302175,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":123,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82193.57675579365,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.332,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":124,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[9597488,4128,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":55346.699661073086,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.353,\"onlineExpGained\":16075.456780542725,\"onlineMoneyMade\":9597488,\"onlineRunningTime\":1235.2100000001415,\"pid\":125,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18891.16262825498,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.38,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":126,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71836.99335429794,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.399,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":127,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[10900704,3696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71732.85568154657,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.426,\"onlineExpGained\":19665.12188687744,\"onlineMoneyMade\":10900704,\"onlineRunningTime\":1235.2100000001415,\"pid\":128,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19351.03419222565,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.446,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":129,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70150.24837638803,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.474,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":130,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[11474288,2960,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":59385.68638144621,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.494,\"onlineExpGained\":16476.03139196797,\"onlineMoneyMade\":11474288,\"onlineRunningTime\":1235.2100000001415,\"pid\":131,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,435]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12478.039296354786,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.522,\"onlineExpGained\":3590.718264281603,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":132,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39544.202058323026,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.542,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":133,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[14380752,2016,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":40328.19150305264,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.57,\"onlineExpGained\":11820.479435520114,\"onlineMoneyMade\":14380752,\"onlineRunningTime\":1235.2100000001415,\"pid\":134,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10094.551080061607,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.591,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":135,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32393.739705233165,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.618,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":136,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[18791760,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35132.01823258998,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.639,\"onlineExpGained\":10202.592585407032,\"onlineMoneyMade\":18791760,\"onlineRunningTime\":1235.2100000001415,\"pid\":137,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.667,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":138,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.2793984226773,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.688,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":139,\"ramUsage\":1.95,\"server\":\"odin-1\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[10304432,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4463.6486613651405,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.715,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":10304432,\"onlineRunningTime\":1235.2100000001415,\"pid\":140,\"ramUsage\":1.7,\"server\":\"odin-1\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-1\",\"moduleSequenceNumber\":703,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-1\",\"moduleSequenceNumber\":704,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-1\",\"moduleSequenceNumber\":705,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-1\",\"moduleSequenceNumber\":706,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-2\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-2\",\"httpPortOpen\":false,\"ip\":\"30.8.5.2\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9974.45945865249,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.736,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":141,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2925,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35689.74746385194,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.765,\"onlineExpGained\":9799.632325367616,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.2100000001415,\"pid\":142,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5751536,4224,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50359.429636418994,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.78700000001,\"onlineExpGained\":14151.67416832567,\"onlineMoneyMade\":5751536,\"onlineRunningTime\":1235.2100000001415,\"pid\":143,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,885]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20659.69811396248,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.85800000001,\"onlineExpGained\":5755.1695998302175,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":144,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82193.99288788367,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.897,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":145,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[8937984,4128,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":57292.485283844624,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.936,\"onlineExpGained\":16309.56537443413,\"onlineMoneyMade\":8937984,\"onlineRunningTime\":1235.0100000001414,\"pid\":146,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18891.258723871673,\"offlineMoneyMade\":0,\"offlineRunningTime\":81800.966,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":147,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71837.3651236223,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.003,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":148,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[10157568,3696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71512.85303182746,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.033,\"onlineExpGained\":19509.049490949845,\"onlineMoneyMade\":10157568,\"onlineRunningTime\":1235.0100000001414,\"pid\":149,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19351.133977391975,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.062,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":150,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70150.60721605596,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.08499999999,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":151,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[10716832,2944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":59579.89796834679,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.30799999999,\"onlineExpGained\":16872.248579750765,\"onlineMoneyMade\":10716832,\"onlineRunningTime\":1235.0100000001414,\"pid\":152,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,435]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":12478.144575939146,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.378,\"onlineExpGained\":3590.718264281603,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":153,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39544.55571311759,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.43,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":154,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[13473760,2032,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43106.036328652524,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.466,\"onlineExpGained\":12216.696623302909,\"onlineMoneyMade\":13473760,\"onlineRunningTime\":1235.0100000001414,\"pid\":155,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10094.645259029874,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.516,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":156,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32394.054176830585,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.56,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":157,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[17772992,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35415.334566306934,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.592,\"onlineExpGained\":10004.483991515635,\"onlineMoneyMade\":17772992,\"onlineRunningTime\":1235.0100000001414,\"pid\":158,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.61799999999,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":159,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.3199255711497,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.648,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":160,\"ramUsage\":1.95,\"server\":\"odin-2\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[7716784,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3542.813950527385,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.67800000001,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":7716784,\"onlineRunningTime\":1235.0100000001414,\"pid\":161,\"ramUsage\":1.7,\"server\":\"odin-2\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-2\",\"moduleSequenceNumber\":707,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-2\",\"moduleSequenceNumber\":708,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-2\",\"moduleSequenceNumber\":709,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-2\",\"moduleSequenceNumber\":710,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-3\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-3\",\"httpPortOpen\":false,\"ip\":\"28.2.8.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,840]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10260.038386045826,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.704,\"onlineExpGained\":2814.2533857465987,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":162,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34833.664482569184,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.72899999999,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1235.0100000001414,\"pid\":163,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[4854976,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50359.93373769545,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.76000000001,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":4854976,\"onlineRunningTime\":1235.0100000001414,\"pid\":164,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,885]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20659.903155427422,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.784,\"onlineExpGained\":5755.1695998302175,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":165,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82194.81417822337,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.81599999999,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":166,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[8293872,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54596.43391274214,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.843,\"onlineExpGained\":15685.27579072373,\"onlineMoneyMade\":8293872,\"onlineRunningTime\":1234.8100000001414,\"pid\":167,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18891.44801584354,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.873,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":168,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71838.08084155357,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.89600000001,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":169,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[10087344,3664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":68952.43397570898,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.927,\"onlineExpGained\":18806.72370927566,\"onlineMoneyMade\":10087344,\"onlineRunningTime\":1234.8100000001414,\"pid\":170,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19351.328268268167,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.954,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":171,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70151.31934938296,\"offlineMoneyMade\":0,\"offlineRunningTime\":81801.985,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":172,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[10525696,2960,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":58712.91182072685,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.009,\"onlineExpGained\":16674.139985859365,\"onlineMoneyMade\":10525696,\"onlineRunningTime\":1234.8100000001414,\"pid\":173,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13181.599491177083,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.03899999999,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":174,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39544.811035886116,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.068,\"onlineExpGained\":11515.062019937563,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":175,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[12623136,2016,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":38142.26374065483,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.09700000001,\"onlineExpGained\":11424.262247737317,\"onlineMoneyMade\":12623136,\"onlineRunningTime\":1234.8100000001414,\"pid\":176,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10094.705121531202,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.12,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":177,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1125,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32394.24263794867,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.151,\"onlineExpGained\":9286.340338659324,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":178,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[16685424,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34655.858178439696,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.174,\"onlineExpGained\":9905.429694569935,\"onlineMoneyMade\":16685424,\"onlineRunningTime\":1234.8100000001414,\"pid\":179,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.20300000001,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":180,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.344410723352,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.228,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":181,\"ramUsage\":1.95,\"server\":\"odin-3\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[9407632,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4463.729895782746,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.255,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":9407632,\"onlineRunningTime\":1234.8100000001414,\"pid\":182,\"ramUsage\":1.7,\"server\":\"odin-3\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-3\",\"moduleSequenceNumber\":711,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-3\",\"moduleSequenceNumber\":712,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-3\",\"moduleSequenceNumber\":713,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-3\",\"moduleSequenceNumber\":714,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-4\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-4\",\"httpPortOpen\":false,\"ip\":\"11.2.7.3\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9974.61473117436,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.277,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":183,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34833.86148030618,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.305,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.8100000001414,\"pid\":184,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5137808,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50360.214440857875,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.32699999999,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":5137808,\"onlineRunningTime\":1234.8100000001414,\"pid\":185,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,870]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20105.89242291121,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.354,\"onlineExpGained\":5657.624352375468,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":186,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82195.26727589782,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.375,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":187,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[7681648,4128,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":58131.93204562005,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.40299999999,\"onlineExpGained\":16543.673968325522,\"onlineMoneyMade\":7681648,\"onlineRunningTime\":1234.6100000001413,\"pid\":188,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19360.99670302807,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.424,\"onlineExpGained\":5364.988610011221,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":189,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71838.47746459409,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.45300000001,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":190,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[9363488,3664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":61692.048561343676,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.475,\"onlineExpGained\":17219.987684011765,\"onlineMoneyMade\":9363488,\"onlineRunningTime\":1234.6100000001413,\"pid\":191,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19351.433341489406,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.50200000001,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":192,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70151.69304719544,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.522,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":193,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[9848464,2960,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":61096.771023450405,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.551,\"onlineExpGained\":17169.411470587856,\"onlineMoneyMade\":9848464,\"onlineRunningTime\":1234.6100000001413,\"pid\":194,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13181.668820586483,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.571,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":195,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39545.0175537771,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.6,\"onlineExpGained\":11515.062019937563,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":196,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[11827888,2000,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":42235.85673240798,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.62100000001,\"onlineExpGained\":12216.696623302907,\"onlineMoneyMade\":11827888,\"onlineRunningTime\":1234.6100000001413,\"pid\":197,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10094.75740878639,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.652,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":198,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1125,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32394.409946847114,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.67300000001,\"onlineExpGained\":9286.340338659324,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":199,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[15659936,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35695.44812149341,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.697,\"onlineExpGained\":10301.64688235273,\"onlineMoneyMade\":15659936,\"onlineRunningTime\":1234.6100000001413,\"pid\":200,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.72099999999,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":201,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.3662362814366,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.745,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":202,\"ramUsage\":1.95,\"server\":\"odin-4\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[6967520,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3542.859036980061,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.76999999999,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":6967520,\"onlineRunningTime\":1234.6100000001413,\"pid\":203,\"ramUsage\":1.7,\"server\":\"odin-4\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-4\",\"moduleSequenceNumber\":715,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-4\",\"moduleSequenceNumber\":716,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-4\",\"moduleSequenceNumber\":717,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-4\",\"moduleSequenceNumber\":718,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-5\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-5\",\"httpPortOpen\":false,\"ip\":\"69.3.0.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9974.665561532203,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.793,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":204,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34834.038973005765,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.821,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.6100000001413,\"pid\":205,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5457184,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50360.469994422616,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.842,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":5457184,\"onlineRunningTime\":1234.6100000001413,\"pid\":206,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,870]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20105.99382932471,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.868,\"onlineExpGained\":5657.624352375468,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":207,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3555,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82195.68229028187,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.888,\"onlineExpGained\":23118.223646775583,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":208,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[7153888,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":59256.34212651478,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.916,\"onlineExpGained\":16543.67396832552,\"onlineMoneyMade\":7153888,\"onlineRunningTime\":1234.4100000001413,\"pid\":209,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18891.64675073728,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.938,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":210,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71838.84002808575,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.965,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":211,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[8725696,3664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":60122.380793937744,\"offlineMoneyMade\":0,\"offlineRunningTime\":81802.98800000001,\"onlineExpGained\":16829.806694192772,\"onlineMoneyMade\":8725696,\"onlineRunningTime\":1234.4100000001413,\"pid\":212,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19351.531501546175,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.01699999999,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":213,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70152.05312504206,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.04000000001,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":214,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[9199152,2944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":60620.374332711974,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.06700000001,\"onlineExpGained\":17367.520064479257,\"onlineMoneyMade\":9199152,\"onlineRunningTime\":1234.4100000001413,\"pid\":215,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13181.736550681711,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.091,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":216,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39545.220795653564,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.121,\"onlineExpGained\":11515.062019937563,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":217,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[11082384,2032,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":44228.912399443645,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.14199999999,\"onlineExpGained\":12612.913811085702,\"onlineMoneyMade\":11082384,\"onlineRunningTime\":1234.4100000001413,\"pid\":218,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10094.808079530478,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.17,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":219,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1125,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32394.575269500532,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.19,\"onlineExpGained\":9286.340338659324,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":220,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[14692752,1664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35012.102992940105,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.217,\"onlineExpGained\":10334.664981334628,\"onlineMoneyMade\":14692752,\"onlineRunningTime\":1234.4100000001413,\"pid\":221,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.238,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":222,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.3881462710797,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.264,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.4100000001413,\"pid\":223,\"ramUsage\":1.95,\"server\":\"odin-5\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[8593296,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4463.78438228236,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.291,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":8593296,\"onlineRunningTime\":1234.4100000001413,\"pid\":224,\"ramUsage\":1.7,\"server\":\"odin-5\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-5\",\"moduleSequenceNumber\":719,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-5\",\"moduleSequenceNumber\":720,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-5\",\"moduleSequenceNumber\":721,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-5\",\"moduleSequenceNumber\":722,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-6\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-6\",\"httpPortOpen\":false,\"ip\":\"73.0.7.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9974.717421409823,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.319,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":225,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34834.21791052294,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.339,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":226,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5304448,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50360.73345469922,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.368,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":5304448,\"onlineRunningTime\":1234.2100000001412,\"pid\":227,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,870]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20106.097505020007,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.389,\"onlineExpGained\":5657.624352375468,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":228,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3555,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82196.1135012414,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.416,\"onlineExpGained\":23118.223646775583,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":229,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[6662336,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":57606.64066208278,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.436,\"onlineExpGained\":16127.480912518595,\"onlineMoneyMade\":6662336,\"onlineRunningTime\":1234.2100000001412,\"pid\":230,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18891.74528498516,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.463,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":231,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71839.20974489552,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.48300000001,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":232,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[8132240,3664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":67849.08772703633,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.51000000001,\"onlineExpGained\":17948.325531673872,\"onlineMoneyMade\":8132240,\"onlineRunningTime\":1234.2100000001412,\"pid\":233,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19351.629721792182,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.53099999999,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":234,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70152.41235164084,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.55900000001,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":235,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[8592320,2928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":60143.96787411928,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.579,\"onlineExpGained\":17070.357173642158,\"onlineMoneyMade\":8592320,\"onlineRunningTime\":1234.2100000001412,\"pid\":236,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13181.803481119856,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.605,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":237,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1530,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":44908.445566113514,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.626,\"onlineExpGained\":12629.422860576682,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":238,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[10383488,2016,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":40892.140557997016,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.652,\"onlineExpGained\":11820.479435520114,\"onlineMoneyMade\":10383488,\"onlineRunningTime\":1234.2100000001412,\"pid\":239,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,360]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10798.243570839875,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.67199999999,\"onlineExpGained\":2971.6289083709817,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":240,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1125,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32394.737961024184,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.697,\"onlineExpGained\":9286.340338659324,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":241,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[13794496,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35733.89242174076,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.72099999999,\"onlineExpGained\":10367.683080316529,\"onlineMoneyMade\":13794496,\"onlineRunningTime\":1234.2100000001412,\"pid\":242,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.746,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":243,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.409423024027,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.768,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.2100000001412,\"pid\":244,\"ramUsage\":1.95,\"server\":\"odin-6\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[8166480,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4463.810646126078,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.791,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":8166480,\"onlineRunningTime\":1234.2100000001412,\"pid\":245,\"ramUsage\":1.7,\"server\":\"odin-6\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-6\",\"moduleSequenceNumber\":723,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-6\",\"moduleSequenceNumber\":724,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-6\",\"moduleSequenceNumber\":725,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-6\",\"moduleSequenceNumber\":726,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-7\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-7\",\"httpPortOpen\":false,\"ip\":\"37.7.5.8\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9974.766269505855,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.81599999999,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.0100000001412,\"pid\":246,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34834.388451346604,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.837,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.0100000001412,\"pid\":247,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5144176,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50360.97749067139,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.862,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":5144176,\"onlineRunningTime\":1234.0100000001412,\"pid\":248,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,870]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20106.194379643886,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.88399999999,\"onlineExpGained\":5657.624352375468,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.0100000001412,\"pid\":249,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82196.50953494608,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.908,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.0100000001412,\"pid\":250,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[6205984,4096,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":61362.53865073384,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.931,\"onlineExpGained\":17298.02388197558,\"onlineMoneyMade\":6205984,\"onlineRunningTime\":1234.0100000001412,\"pid\":251,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19361.288437831692,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.956,\"onlineExpGained\":5364.988610011221,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.0100000001412,\"pid\":252,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71839.55592891436,\"offlineMoneyMade\":0,\"offlineRunningTime\":81803.97899999999,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1234.0100000001412,\"pid\":253,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[7577744,3664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":67030.54086727546,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.003,\"onlineExpGained\":17376.060079939354,\"onlineMoneyMade\":7577744,\"onlineRunningTime\":1234.0100000001412,\"pid\":254,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19351.7221552724,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.026,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":255,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70152.74833659337,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.052,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":256,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[8026128,2944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":59298.56378907112,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.07500000001,\"onlineExpGained\":16872.24857975076,\"onlineMoneyMade\":8026128,\"onlineRunningTime\":1233.8100000001411,\"pid\":257,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13181.86663683262,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.09899999999,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":258,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39545.60703002548,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.12,\"onlineExpGained\":11515.062019937563,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":259,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[9728960,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":38422.762163057574,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.14600000001,\"onlineExpGained\":11424.262247737319,\"onlineMoneyMade\":9728960,\"onlineRunningTime\":1233.8100000001411,\"pid\":260,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,360]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10798.295522754994,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.168,\"onlineExpGained\":2971.6289083709817,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":261,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1125,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32394.895054948247,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.193,\"onlineExpGained\":9286.340338659324,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":262,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[12948784,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35257.34785119153,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.214,\"onlineExpGained\":10565.791674207925,\"onlineMoneyMade\":12948784,\"onlineRunningTime\":1233.8100000001411,\"pid\":263,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.239,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":264,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.4302776191794,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.262,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":265,\"ramUsage\":1.95,\"server\":\"odin-7\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[2286528,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3542.921628909369,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.286,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":2286528,\"onlineRunningTime\":1233.8100000001411,\"pid\":266,\"ramUsage\":1.7,\"server\":\"odin-7\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-7\",\"moduleSequenceNumber\":727,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-7\",\"moduleSequenceNumber\":728,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-7\",\"moduleSequenceNumber\":729,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-7\",\"moduleSequenceNumber\":730,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-8\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-8\",\"httpPortOpen\":false,\"ip\":\"64.9.0.2\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9974.813693723687,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.307,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":267,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34834.557798625305,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.33300000001,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":268,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[4843568,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50361.21795298846,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.35399999999,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":4843568,\"onlineRunningTime\":1233.8100000001411,\"pid\":269,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,870]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20106.291315233546,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.378,\"onlineExpGained\":5657.624352375468,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":270,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82196.90556865075,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.40299999999,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.8100000001411,\"pid\":271,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[5779200,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":56856.074570128534,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.428,\"onlineExpGained\":15815.336120663398,\"onlineMoneyMade\":5779200,\"onlineRunningTime\":1233.8100000001411,\"pid\":272,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18891.92719332371,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.451,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":273,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71839.9068072982,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.476,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":274,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[7062368,3680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":65836.42392832441,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.499,\"onlineExpGained\":17141.951486047958,\"onlineMoneyMade\":7062368,\"onlineRunningTime\":1233.610000000141,\"pid\":275,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19351.816617989956,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.522,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":276,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70153.08798449124,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.545,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":277,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[7510224,2896,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":58736.137611397055,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.568,\"onlineExpGained\":16575.08568891367,\"onlineMoneyMade\":7510224,\"onlineRunningTime\":1233.610000000141,\"pid\":278,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13181.930119286992,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.591,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":279,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39545.801166129335,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.616,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":280,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[8967712,2032,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43666.846091533385,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.63699999999,\"onlineExpGained\":12612.913811085702,\"onlineMoneyMade\":8967712,\"onlineRunningTime\":1233.610000000141,\"pid\":281,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,360]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10798.348429099533,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.663,\"onlineExpGained\":2971.6289083709817,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":282,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32395.051658759898,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.685,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":283,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[12188384,1648,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":38801.3731534858,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.71100000001,\"onlineExpGained\":11226.153653845919,\"onlineMoneyMade\":12188384,\"onlineRunningTime\":1233.610000000141,\"pid\":284,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.734,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":285,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.4511322143308,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.756,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":286,\"ramUsage\":1.95,\"server\":\"odin-8\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[7648256,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4463.862633451536,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.781,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":7648256,\"onlineRunningTime\":1233.610000000141,\"pid\":287,\"ramUsage\":1.7,\"server\":\"odin-8\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-8\",\"moduleSequenceNumber\":731,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-8\",\"moduleSequenceNumber\":732,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-8\",\"moduleSequenceNumber\":733,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-8\",\"moduleSequenceNumber\":734,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-9\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-9\",\"httpPortOpen\":false,\"ip\":\"77.0.4.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9974.862779132753,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.80900000001,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":288,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34834.72890481237,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.837,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.610000000141,\"pid\":289,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[6108896,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50361.46559984128,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.85800000001,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":6108896,\"onlineRunningTime\":1233.610000000141,\"pid\":290,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,870]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20106.389896899254,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.885,\"onlineExpGained\":5657.624352375468,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":291,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82197.30613414502,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.90299999999,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":292,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[5846656,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":63749.46809397596,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.93,\"onlineExpGained\":17376.060079939376,\"onlineMoneyMade\":5846656,\"onlineRunningTime\":1233.410000000141,\"pid\":293,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19361.476124371362,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.951,\"onlineExpGained\":5364.988610011221,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":294,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71840.25589735256,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.976,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":295,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[6583488,3696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":66497.87247266236,\"offlineMoneyMade\":0,\"offlineRunningTime\":81804.99900000001,\"onlineExpGained\":18104.397927601465,\"onlineMoneyMade\":6583488,\"onlineRunningTime\":1233.410000000141,\"pid\":296,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19351.910908738253,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.025,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":297,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70153.43070204052,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.046,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":298,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[7016432,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":58822.42171832018,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.072,\"onlineExpGained\":16575.085688913667,\"onlineMoneyMade\":7016432,\"onlineRunningTime\":1233.410000000141,\"pid\":299,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13181.994229429183,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.09099999999,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":300,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39545.99313542045,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.118,\"onlineExpGained\":11515.062019937563,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":301,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[8401952,2000,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36430.2543832231,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.139,\"onlineExpGained\":10928.990763008824,\"onlineMoneyMade\":8401952,\"onlineRunningTime\":1233.410000000141,\"pid\":302,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,360]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10798.401051694787,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.164,\"onlineExpGained\":2971.6289083709817,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":303,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32395.2094233641,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.18400000001,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":304,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[11310416,1664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":37765.37800780736,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.211,\"onlineExpGained\":10928.990763008824,\"onlineMoneyMade\":11310416,\"onlineRunningTime\":1233.410000000141,\"pid\":305,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.23000000001,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":306,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.472197888381,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.255,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.410000000141,\"pid\":307,\"ramUsage\":1.95,\"server\":\"odin-9\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[7278640,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4463.888570826559,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.275,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":7278640,\"onlineRunningTime\":1233.410000000141,\"pid\":308,\"ramUsage\":1.7,\"server\":\"odin-9\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-9\",\"moduleSequenceNumber\":735,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-9\",\"moduleSequenceNumber\":736,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-9\",\"moduleSequenceNumber\":737,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-9\",\"moduleSequenceNumber\":738,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-10\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-10\",\"httpPortOpen\":false,\"ip\":\"94.7.3.6\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9974.910796633167,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.302,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":309,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34834.89469239557,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.321,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":310,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[4666960,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50361.70724593161,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.34599999999,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":4666960,\"onlineRunningTime\":1233.210000000141,\"pid\":311,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19637.02601054082,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.366,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":312,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82197.70180205502,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.39199999999,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":313,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[5446464,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":65407.23158640326,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.412,\"onlineExpGained\":18390.53065346875,\"onlineMoneyMade\":5446464,\"onlineRunningTime\":1233.210000000141,\"pid\":314,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19361.568941383903,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.438,\"onlineExpGained\":5364.988610011221,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":315,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71840.59649284159,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.458,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":316,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[6135776,3664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":65218.86003704061,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.484,\"onlineExpGained\":17714.216937782472,\"onlineMoneyMade\":6135776,\"onlineRunningTime\":1233.210000000141,\"pid\":317,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19352.00149354887,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.50200000001,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":318,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70153.76421063564,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.52900000001,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":319,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[6556368,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":62722.475761464986,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.55,\"onlineExpGained\":17763.73725226205,\"onlineMoneyMade\":6556368,\"onlineRunningTime\":1233.210000000141,\"pid\":320,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.057118589588,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.57699999999,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":321,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1395,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39546.179481316576,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.598,\"onlineExpGained\":11515.062019937563,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":322,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[7873152,2016,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":37079.150876141015,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.62899999999,\"onlineExpGained\":11028.04505995452,\"onlineMoneyMade\":7873152,\"onlineRunningTime\":1233.210000000141,\"pid\":323,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,360]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10798.452625277518,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.649,\"onlineExpGained\":2971.6289083709817,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":324,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1125,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32395.366826832837,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.676,\"onlineExpGained\":9286.340338659324,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":325,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[10174496,1584,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36052.40181394265,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.696,\"onlineExpGained\":10631.827872171725,\"onlineMoneyMade\":10174496,\"onlineRunningTime\":1233.210000000141,\"pid\":326,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.71900000001,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":327,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.4927147572953,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.74100000001,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.210000000141,\"pid\":328,\"ramUsage\":1.95,\"server\":\"odin-10\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[1993536,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3542.982948736517,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.772,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":1993536,\"onlineRunningTime\":1233.210000000141,\"pid\":329,\"ramUsage\":1.7,\"server\":\"odin-10\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-10\",\"moduleSequenceNumber\":739,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-10\",\"moduleSequenceNumber\":740,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-10\",\"moduleSequenceNumber\":741,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-10\",\"moduleSequenceNumber\":742,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-11\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-11\",\"httpPortOpen\":false,\"ip\":\"21.3.8.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,840]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10216.821672460788,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.795,\"onlineExpGained\":2814.2533857465987,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.010000000141,\"pid\":330,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34835.06443752258,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.817,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.010000000141,\"pid\":331,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[4329216,4208,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50361.953612224694,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.842,\"onlineExpGained\":14098.069341930497,\"onlineMoneyMade\":4329216,\"onlineRunningTime\":1233.010000000141,\"pid\":332,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,870]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20106.583442927746,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.866,\"onlineExpGained\":5657.624352375468,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.010000000141,\"pid\":333,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82198.10728545552,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.891,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.010000000141,\"pid\":334,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[5073136,4096,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":62645.632428281766,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.911,\"onlineExpGained\":17766.24106975837,\"onlineMoneyMade\":5073136,\"onlineRunningTime\":1233.010000000141,\"pid\":335,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18892.202663812117,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.936,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.010000000141,\"pid\":336,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71840.95111045992,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.959,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.010000000141,\"pid\":337,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[5718192,3680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":64490.29597472407,\"offlineMoneyMade\":0,\"offlineRunningTime\":81805.984,\"onlineExpGained\":17063.915288084158,\"onlineMoneyMade\":5718192,\"onlineRunningTime\":1233.010000000141,\"pid\":338,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19352.097031074332,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.005,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.010000000141,\"pid\":339,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70154.11345441852,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.033,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1233.010000000141,\"pid\":340,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[6124656,2976,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":63002.52159974055,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.053,\"onlineExpGained\":17598.646757352544,\"onlineMoneyMade\":6124656,\"onlineRunningTime\":1233.010000000141,\"pid\":341,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.122595887438,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.08,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.810000000141,\"pid\":342,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39546.374752417585,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.098,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.810000000141,\"pid\":343,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[7379776,2032,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":45660.38241954499,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.125,\"onlineExpGained\":13009.130998868497,\"onlineMoneyMade\":7379776,\"onlineRunningTime\":1232.810000000141,\"pid\":344,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.098613006128,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.144,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.810000000141,\"pid\":345,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32395.525055754057,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.17,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.810000000141,\"pid\":346,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[10063744,1664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36809.03909241754,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.19200000001,\"onlineExpGained\":10829.936466063124,\"onlineMoneyMade\":10063744,\"onlineRunningTime\":1232.810000000141,\"pid\":347,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.21900000001,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.810000000141,\"pid\":348,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.5136537840067,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.23700000001,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.810000000141,\"pid\":349,\"ramUsage\":1.95,\"server\":\"odin-11\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[6856912,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4463.940580667098,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.264,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":6856912,\"onlineRunningTime\":1232.810000000141,\"pid\":350,\"ramUsage\":1.7,\"server\":\"odin-11\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-11\",\"moduleSequenceNumber\":743,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-11\",\"moduleSequenceNumber\":744,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-11\",\"moduleSequenceNumber\":745,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-11\",\"moduleSequenceNumber\":746,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-12\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-12\",\"httpPortOpen\":false,\"ip\":\"90.0.2.9\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,840]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10216.870859076884,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.283,\"onlineExpGained\":2814.2533857465987,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.810000000141,\"pid\":351,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34835.234517679775,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.30900000001,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.810000000141,\"pid\":352,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[4101552,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50057.66761318772,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.329,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":4101552,\"onlineRunningTime\":1232.810000000141,\"pid\":353,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19637.217029876447,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.35500000001,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.6100000001409,\"pid\":354,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82198.5001082958,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.375,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.6100000001409,\"pid\":355,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[4725584,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":62049.99071139947,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.405,\"onlineExpGained\":17610.168673830773,\"onlineMoneyMade\":4725584,\"onlineRunningTime\":1232.6100000001409,\"pid\":356,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18892.29376023488,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.425,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.6100000001409,\"pid\":357,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71841.30172465876,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.45199999999,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.6100000001409,\"pid\":358,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[5329104,3648,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":59109.98601398287,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.47,\"onlineExpGained\":15867.360252639257,\"onlineMoneyMade\":5329104,\"onlineRunningTime\":1232.6100000001409,\"pid\":359,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19352.190900497924,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.497,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.6100000001409,\"pid\":360,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70154.45168356998,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.51999999999,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.6100000001409,\"pid\":361,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[5581520,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":55962.91596625911,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.54800000001,\"onlineExpGained\":16211.886600112775,\"onlineMoneyMade\":5581520,\"onlineRunningTime\":1232.6100000001409,\"pid\":362,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.186018152566,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.567,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.4100000001408,\"pid\":363,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39546.5685015906,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.594,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.4100000001408,\"pid\":364,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[6915232,2000,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43003.389536426796,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.615,\"onlineExpGained\":12711.968108031402,\"onlineMoneyMade\":6915232,\"onlineRunningTime\":1232.4100000001408,\"pid\":365,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.147452277539,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.641,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.4100000001408,\"pid\":366,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32395.682433427406,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.66,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.4100000001408,\"pid\":367,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[9512416,1648,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36096.99657204248,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.686,\"onlineExpGained\":10664.845971153627,\"onlineMoneyMade\":9512416,\"onlineRunningTime\":1232.4100000001408,\"pid\":368,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.705,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.4100000001408,\"pid\":369,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.5345083791576,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.731,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.4100000001408,\"pid\":370,\"ramUsage\":1.95,\"server\":\"odin-12\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[5159536,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3543.023397082201,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.75,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":5159536,\"onlineRunningTime\":1232.4100000001408,\"pid\":371,\"ramUsage\":1.7,\"server\":\"odin-12\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-12\",\"moduleSequenceNumber\":747,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-12\",\"moduleSequenceNumber\":748,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-12\",\"moduleSequenceNumber\":749,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-12\",\"moduleSequenceNumber\":750,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-13\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-13\",\"httpPortOpen\":false,\"ip\":\"22.1.3.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,840]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10216.920206228267,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.774,\"onlineExpGained\":2814.2533857465987,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.2100000001408,\"pid\":372,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34835.40227356519,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.796,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.2100000001408,\"pid\":373,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[3430496,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50057.9087306749,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.819,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":3430496,\"onlineRunningTime\":1232.2100000001408,\"pid\":374,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19637.311147492288,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.842,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.2100000001408,\"pid\":375,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82198.8964671513,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.86499999999,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.2100000001408,\"pid\":376,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[4402448,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":64747.0484784966,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.88699999999,\"onlineExpGained\":18234.458257541155,\"onlineMoneyMade\":4402448,\"onlineRunningTime\":1232.2100000001408,\"pid\":377,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18892.383230903513,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.908,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.2100000001408,\"pid\":378,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71841.64193403118,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.933,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.2100000001408,\"pid\":379,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[4897648,3664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":58690.18742932212,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.954,\"onlineExpGained\":15867.360252639251,\"onlineMoneyMade\":4897648,\"onlineRunningTime\":1232.2100000001408,\"pid\":380,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,675]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19948.19337391258,\"offlineMoneyMade\":0,\"offlineRunningTime\":81806.978,\"onlineExpGained\":5571.8042031955865,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.2100000001408,\"pid\":381,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2295,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":68044.53706740869,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807,\"onlineExpGained\":18944.134290865015,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.2100000001408,\"pid\":382,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[5214688,2992,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":59020.544427448905,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.025,\"onlineExpGained\":16409.995194004172,\"onlineMoneyMade\":5214688,\"onlineRunningTime\":1232.2100000001408,\"pid\":383,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.247265006485,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.046,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.0100000001407,\"pid\":384,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39546.752087380024,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.07,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.0100000001407,\"pid\":385,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[6480576,2016,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43871.04434640958,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.09300000001,\"onlineExpGained\":12910.076701922797,\"onlineMoneyMade\":6480576,\"onlineRunningTime\":1232.0100000001407,\"pid\":386,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.193686214578,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.117,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.0100000001407,\"pid\":387,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32395.83320748096,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.139,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.0100000001407,\"pid\":388,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[8930128,1600,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35057.702205176516,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.163,\"onlineExpGained\":10466.737377262227,\"onlineMoneyMade\":8930128,\"onlineRunningTime\":1232.0100000001407,\"pid\":389,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.18400000001,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.0100000001407,\"pid\":390,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.554687521835,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.209,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1232.0100000001407,\"pid\":391,\"ramUsage\":1.95,\"server\":\"odin-13\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[5847472,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3543.0431540670816,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.23000000001,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":5847472,\"onlineRunningTime\":1232.0100000001407,\"pid\":392,\"ramUsage\":1.7,\"server\":\"odin-13\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-13\",\"moduleSequenceNumber\":751,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-13\",\"moduleSequenceNumber\":752,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-13\",\"moduleSequenceNumber\":753,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-13\",\"moduleSequenceNumber\":754,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-14\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-14\",\"httpPortOpen\":false,\"ip\":\"2.5.9.6\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9975.102210534083,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.254,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.8100000001407,\"pid\":393,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34835.56477366488,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.276,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.8100000001407,\"pid\":394,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[3352416,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50058.143787838635,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.301,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":3352416,\"onlineRunningTime\":1231.8100000001407,\"pid\":395,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19637.403530970394,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.32800000001,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.8100000001407,\"pid\":396,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82199.28933063542,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.35399999999,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.8100000001407,\"pid\":397,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[4101024,4096,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":62493.91083038153,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.374,\"onlineExpGained\":18156.422059577348,\"onlineMoneyMade\":4101024,\"onlineRunningTime\":1231.8100000001407,\"pid\":398,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19361.942187434925,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.399,\"onlineExpGained\":5364.988610011221,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.8100000001407,\"pid\":399,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71841.983139178,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.421,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.8100000001407,\"pid\":400,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[4564960,3648,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":59994.64218539895,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.444,\"onlineExpGained\":16023.432648566853,\"onlineMoneyMade\":4564960,\"onlineRunningTime\":1231.8100000001407,\"pid\":401,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19352.37388439491,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.466,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.8100000001407,\"pid\":402,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2295,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":68044.86216670669,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.48999999999,\"onlineExpGained\":18944.134290865015,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.8100000001407,\"pid\":403,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[4871696,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":56637.16683955748,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.511,\"onlineExpGained\":16013.778006221377,\"onlineMoneyMade\":4871696,\"onlineRunningTime\":1231.8100000001407,\"pid\":404,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.310910831657,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.537,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.6100000001406,\"pid\":405,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43122.42756371938,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.56,\"onlineExpGained\":11886.515633483936,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.6100000001406,\"pid\":406,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[6419472,2032,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":42917.79136216662,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.583,\"onlineExpGained\":12711.9681080314,\"onlineMoneyMade\":6419472,\"onlineRunningTime\":1231.6100000001406,\"pid\":407,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.241089542622,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.60500000001,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.6100000001406,\"pid\":408,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32395.99050776814,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.629,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.6100000001406,\"pid\":409,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[8476400,1600,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34190.40982386021,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.652,\"onlineExpGained\":10070.520189479432,\"onlineMoneyMade\":8476400,\"onlineRunningTime\":1231.6100000001406,\"pid\":410,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.675,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.6100000001406,\"pid\":411,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.575331038088,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.698,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.6100000001406,\"pid\":412,\"ramUsage\":1.95,\"server\":\"odin-14\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[6022784,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4464.017255780501,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.723,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":6022784,\"onlineRunningTime\":1231.6100000001406,\"pid\":413,\"ramUsage\":1.7,\"server\":\"odin-14\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-14\",\"moduleSequenceNumber\":755,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-14\",\"moduleSequenceNumber\":756,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-14\",\"moduleSequenceNumber\":757,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-14\",\"moduleSequenceNumber\":758,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-15\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-15\",\"httpPortOpen\":false,\"ip\":\"18.8.7.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,840]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10217.017085784304,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.744,\"onlineExpGained\":2814.2533857465987,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.4100000001406,\"pid\":414,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34835.73478053423,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.76800000001,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.4100000001406,\"pid\":415,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5090528,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50058.38479364909,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.791,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":5090528,\"onlineRunningTime\":1231.4100000001406,\"pid\":416,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19637.497154086028,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.812,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.4100000001406,\"pid\":417,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82199.67837359736,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.836,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.4100000001406,\"pid\":418,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[3819696,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":59712.55225482755,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.85699999999,\"onlineExpGained\":17532.132475866954,\"onlineMoneyMade\":3819696,\"onlineRunningTime\":1231.4100000001406,\"pid\":419,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19362.033730940075,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.881,\"onlineExpGained\":5364.988610011221,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.4100000001406,\"pid\":420,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71842.32458818794,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.902,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.4100000001406,\"pid\":421,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[4255312,3680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":63510.624966279094,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.926,\"onlineExpGained\":16829.806694192772,\"onlineMoneyMade\":4255312,\"onlineRunningTime\":1231.4100000001406,\"pid\":422,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19352.46538064264,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.94700000001,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.4100000001406,\"pid\":423,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2295,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":68045.18179738209,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.973,\"onlineExpGained\":18944.134290865015,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.4100000001406,\"pid\":424,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[5112192,3008,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":58239.64537876152,\"offlineMoneyMade\":0,\"offlineRunningTime\":81807.992,\"onlineExpGained\":16112.83230316708,\"onlineMoneyMade\":5112192,\"onlineRunningTime\":1231.4100000001406,\"pid\":425,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.372836964176,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.018,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.2100000001406,\"pid\":426,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43122.62905150933,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.03700000001,\"onlineExpGained\":11886.515633483936,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.2100000001406,\"pid\":427,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[5684608,2032,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":42441.25797649841,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.064,\"onlineExpGained\":12513.859514140004,\"onlineMoneyMade\":5684608,\"onlineRunningTime\":1231.2100000001406,\"pid\":428,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.287847985917,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.083,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.2100000001406,\"pid\":429,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32396.142855340477,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.109,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.2100000001406,\"pid\":430,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[8005328,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35461.86100701507,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.128,\"onlineExpGained\":10532.773575226027,\"onlineMoneyMade\":8005328,\"onlineRunningTime\":1231.2100000001406,\"pid\":431,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.156,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.2100000001406,\"pid\":432,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.595425749206,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.174,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.2100000001406,\"pid\":433,\"ramUsage\":1.95,\"server\":\"odin-15\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[5733008,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4464.042461415343,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.20300000001,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":5733008,\"onlineRunningTime\":1231.2100000001406,\"pid\":434,\"ramUsage\":1.7,\"server\":\"odin-15\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-15\",\"moduleSequenceNumber\":759,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-15\",\"moduleSequenceNumber\":760,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-15\",\"moduleSequenceNumber\":761,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-15\",\"moduleSequenceNumber\":762,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-16\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-16\",\"httpPortOpen\":false,\"ip\":\"94.4.9.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9975.196933333436,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.22099999999,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.0100000001407,\"pid\":435,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34835.89869404244,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.24799999999,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.0100000001407,\"pid\":436,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[3196064,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50058.61892389603,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.268,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":3196064,\"onlineRunningTime\":1231.0100000001407,\"pid\":437,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19637.590072708204,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.296,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.0100000001407,\"pid\":438,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82200.06827008018,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.319,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.0100000001407,\"pid\":439,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[4098320,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":64527.59695581277,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.346,\"onlineExpGained\":18000.349663649748,\"onlineMoneyMade\":4098320,\"onlineRunningTime\":1231.0100000001407,\"pid\":440,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18892.653078992233,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.364,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.0100000001407,\"pid\":441,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71842.66882130184,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.391,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1231.0100000001407,\"pid\":442,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3968816,3648,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":65233.29196839794,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.412,\"onlineExpGained\":16881.830826168636,\"onlineMoneyMade\":3968816,\"onlineRunningTime\":1231.0100000001407,\"pid\":443,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19352.558011887515,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.436,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.8100000001407,\"pid\":444,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2295,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":68045.50292419008,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.457,\"onlineExpGained\":18944.134290865015,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.8100000001407,\"pid\":445,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[4269088,2976,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":56615.98682737099,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.484,\"onlineExpGained\":15617.560818438587,\"onlineMoneyMade\":4269088,\"onlineRunningTime\":1230.8100000001407,\"pid\":446,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.435579950707,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.503,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.8100000001407,\"pid\":447,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43122.83722030526,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.53,\"onlineExpGained\":11886.515633483936,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.8100000001407,\"pid\":448,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[5327728,2016,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43394.930382315404,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.54800000001,\"onlineExpGained\":12711.9681080314,\"onlineMoneyMade\":5327728,\"onlineRunningTime\":1230.8100000001407,\"pid\":449,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.33587040332,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.575,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.8100000001407,\"pid\":450,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1080,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":32396.297163362433,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.593,\"onlineExpGained\":8914.88672511295,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.8100000001407,\"pid\":451,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[7686416,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35462.03393930849,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.625,\"onlineExpGained\":10433.719278280329,\"onlineMoneyMade\":7686416,\"onlineRunningTime\":1230.8100000001407,\"pid\":452,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.643,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.8100000001407,\"pid\":453,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.6164069916967,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.671,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.8100000001407,\"pid\":454,\"ramUsage\":1.95,\"server\":\"odin-16\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[5019904,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3543.103460715518,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.69,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":5019904,\"onlineRunningTime\":1230.8100000001407,\"pid\":455,\"ramUsage\":1.7,\"server\":\"odin-16\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-16\",\"moduleSequenceNumber\":763,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-16\",\"moduleSequenceNumber\":764,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-16\",\"moduleSequenceNumber\":765,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-16\",\"moduleSequenceNumber\":766,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-17\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-17\",\"httpPortOpen\":false,\"ip\":\"48.3.9.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,840]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10217.114684259235,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.717,\"onlineExpGained\":2814.2533857465987,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.6100000001406,\"pid\":456,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34836.06550765552,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.735,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.6100000001406,\"pid\":457,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5867040,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50058.860938519545,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.761,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":5867040,\"onlineRunningTime\":1230.6100000001406,\"pid\":458,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19637.683418090837,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.78099999999,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.6100000001406,\"pid\":459,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3510,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":82200.46145871514,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.80600000001,\"onlineExpGained\":22825.587904411335,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.6100000001406,\"pid\":460,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[3808624,4080,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":65434.25926460537,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.826,\"onlineExpGained\":17922.31346568596,\"onlineMoneyMade\":3808624,\"onlineRunningTime\":1230.6100000001406,\"pid\":461,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18892.7429019076,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.84899999999,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.6100000001406,\"pid\":462,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71843.007161057,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.87,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.6100000001406,\"pid\":463,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3723216,3664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":59670.26706022787,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.891,\"onlineExpGained\":16803.79462820483,\"onlineMoneyMade\":3723216,\"onlineRunningTime\":1230.6100000001406,\"pid\":464,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,675]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19948.57108720739,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.91500000001,\"onlineExpGained\":5571.8042031955865,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.4100000001406,\"pid\":465,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70156.11233917641,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.936,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.4100000001406,\"pid\":466,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3989072,2960,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":55192.1920317614,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.961,\"onlineExpGained\":15980.759907239479,\"onlineMoneyMade\":3989072,\"onlineRunningTime\":1230.4100000001406,\"pid\":467,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.49700737235,\"offlineMoneyMade\":0,\"offlineRunningTime\":81808.98199999999,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.4100000001406,\"pid\":468,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43123.03770207501,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.006,\"onlineExpGained\":11886.515633483936,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.4100000001406,\"pid\":469,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[5340784,2000,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":40365.952188782736,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.027,\"onlineExpGained\":12018.58802941151,\"onlineMoneyMade\":5340784,\"onlineRunningTime\":1230.4100000001406,\"pid\":470,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.382671838932,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.055,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.4100000001406,\"pid\":471,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":30286.153742093345,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.074,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.4100000001406,\"pid\":472,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[8065232,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35938.938485096034,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.101,\"onlineExpGained\":10631.827872171725,\"onlineMoneyMade\":8065232,\"onlineRunningTime\":1230.4100000001406,\"pid\":473,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.124,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.4100000001406,\"pid\":474,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.636670565933,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.15100000001,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.4100000001406,\"pid\":475,\"ramUsage\":1.95,\"server\":\"odin-17\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[5224032,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4464.093311729135,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.171,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":5224032,\"onlineRunningTime\":1230.4100000001406,\"pid\":476,\"ramUsage\":1.7,\"server\":\"odin-17\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-17\",\"moduleSequenceNumber\":767,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-17\",\"moduleSequenceNumber\":768,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-17\",\"moduleSequenceNumber\":769,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-17\",\"moduleSequenceNumber\":770,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-18\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-18\",\"httpPortOpen\":false,\"ip\":\"9.0.6.4\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":9975.292420420352,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.197,\"onlineExpGained\":2763.9988610011237,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.2100000001406,\"pid\":477,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34836.2303215573,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.217,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.2100000001406,\"pid\":478,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5888480,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50059.09707150237,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.242,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":5888480,\"onlineRunningTime\":1230.2100000001406,\"pid\":479,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19637.775368034516,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.261,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.2100000001406,\"pid\":480,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3465,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80538.32769217758,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.287,\"onlineExpGained\":22532.952162047088,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.2100000001406,\"pid\":481,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[3378432,4096,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":60927.592750515716,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.306,\"onlineExpGained\":16517.6619023376,\"onlineMoneyMade\":3378432,\"onlineRunningTime\":1230.2100000001406,\"pid\":482,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19362.30937755184,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.33299999998,\"onlineExpGained\":5364.988610011221,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.2100000001406,\"pid\":483,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71843.34674044972,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.353,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.2100000001406,\"pid\":484,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3470304,3648,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":56027.003483170396,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.379,\"onlineExpGained\":15867.36025263925,\"onlineMoneyMade\":3470304,\"onlineRunningTime\":1230.2100000001406,\"pid\":485,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,675]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19948.665334963367,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.399,\"onlineExpGained\":5571.8042031955865,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.0100000001405,\"pid\":486,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70156.45087787256,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.426,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.0100000001405,\"pid\":487,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3728384,2976,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":58726.63542211507,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.445,\"onlineExpGained\":16773.194282805063,\"onlineMoneyMade\":3728384,\"onlineRunningTime\":1230.0100000001405,\"pid\":488,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.560661795987,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.47200000001,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.0100000001405,\"pid\":489,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43123.243213945774,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.492,\"onlineExpGained\":11886.515633483936,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.0100000001405,\"pid\":490,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[5017984,2016,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":41405.63468569516,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.517,\"onlineExpGained\":12018.588029411512,\"onlineMoneyMade\":5017984,\"onlineRunningTime\":1230.0100000001405,\"pid\":491,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.429963386954,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.538,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.0100000001405,\"pid\":492,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":30286.29822207179,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.565,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":1230.0100000001405,\"pid\":493,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[7569344,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35939.10999577685,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.58499999999,\"onlineExpGained\":10433.719278280329,\"onlineMoneyMade\":7569344,\"onlineRunningTime\":1230.0100000001405,\"pid\":494,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.611,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.8100000001405,\"pid\":495,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.65689192439,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.63,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.8100000001405,\"pid\":496,\"ramUsage\":1.95,\"server\":\"odin-18\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[4534752,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3543.1433912143043,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.657,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":4534752,\"onlineRunningTime\":1229.8100000001405,\"pid\":497,\"ramUsage\":1.7,\"server\":\"odin-18\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-18\",\"moduleSequenceNumber\":771,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-18\",\"moduleSequenceNumber\":772,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-18\",\"moduleSequenceNumber\":773,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-18\",\"moduleSequenceNumber\":774,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-19\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-19\",\"httpPortOpen\":false,\"ip\":\"27.4.2.7\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10217.210956573099,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.676,\"onlineExpGained\":2864.5079104920737,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.8100000001405,\"pid\":498,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34836.39815073056,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.704,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.8100000001405,\"pid\":499,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5609648,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50059.33457438631,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.723,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":5609648,\"onlineRunningTime\":1229.8100000001405,\"pid\":500,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19637.8703594932,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.75200000001,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.8100000001405,\"pid\":501,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3465,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80538.71096371236,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.772,\"onlineExpGained\":22532.952162047088,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.8100000001405,\"pid\":502,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2782144,4112,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":66689.43825856848,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.799,\"onlineExpGained\":18000.349663649762,\"onlineMoneyMade\":2782144,\"onlineRunningTime\":1229.8100000001405,\"pid\":503,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18892.922886437103,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.817,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.8100000001405,\"pid\":504,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71843.69253835194,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.841,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.8100000001405,\"pid\":505,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3235760,3664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":55651.68845048086,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.862,\"onlineExpGained\":15789.32405467545,\"onlineMoneyMade\":3235760,\"onlineRunningTime\":1229.8100000001405,\"pid\":506,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,675]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19948.760691921107,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.88500000001,\"onlineExpGained\":5571.8042031955865,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.6100000001404,\"pid\":507,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70156.78508294318,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.908,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.6100000001404,\"pid\":508,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3487952,2912,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":55023.967092028775,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.93,\"onlineExpGained\":15980.759907239477,\"onlineMoneyMade\":3487952,\"onlineRunningTime\":1229.6100000001404,\"pid\":509,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.623129631693,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.95300000001,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.6100000001404,\"pid\":510,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43123.44622366375,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.974,\"onlineExpGained\":11886.515633483936,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.6100000001404,\"pid\":511,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[4394688,2016,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":41882.57235276323,\"offlineMoneyMade\":0,\"offlineRunningTime\":81809.99799999999,\"onlineExpGained\":11985.569930429612,\"onlineMoneyMade\":4394688,\"onlineRunningTime\":1229.6100000001404,\"pid\":512,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.47692819337,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.01999999999,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.6100000001404,\"pid\":513,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":30286.438626378633,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.045,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.6100000001404,\"pid\":514,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[7240304,1648,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34740.86872684079,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.065,\"onlineExpGained\":10202.592585407032,\"onlineMoneyMade\":7240304,\"onlineRunningTime\":1229.6100000001404,\"pid\":515,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.09,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.4100000001404,\"pid\":516,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.6771977144062,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.111,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.4100000001404,\"pid\":517,\"ramUsage\":1.95,\"server\":\"odin-19\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[6028016,64,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4464.144038209974,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.136,\"onlineExpGained\":1026.6877613121926,\"onlineMoneyMade\":6028016,\"onlineRunningTime\":1229.4100000001404,\"pid\":518,\"ramUsage\":1.7,\"server\":\"odin-19\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-19\",\"moduleSequenceNumber\":775,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-19\",\"moduleSequenceNumber\":776,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-19\",\"moduleSequenceNumber\":777,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-19\",\"moduleSequenceNumber\":778,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-20\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-20\",\"httpPortOpen\":false,\"ip\":\"63.6.0.3\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,840]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10217.258872866485,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.157,\"onlineExpGained\":2814.2533857465987,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.4100000001404,\"pid\":519,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34836.56136276936,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.181,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.4100000001404,\"pid\":520,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5649120,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50059.56804946317,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.20199999999,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":5649120,\"onlineRunningTime\":1229.4100000001404,\"pid\":521,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,870]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20107.442267865805,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.227,\"onlineExpGained\":5657.624352375468,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.4100000001404,\"pid\":522,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3465,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80539.08287529023,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.24799999999,\"onlineExpGained\":22532.952162047088,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.4100000001404,\"pid\":523,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2590432,4080,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":56426.002942701976,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.272,\"onlineExpGained\":15711.287856711673,\"onlineMoneyMade\":2590432,\"onlineRunningTime\":1229.4100000001404,\"pid\":524,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,810]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":18893.01077199547,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.294,\"onlineExpGained\":5267.443362556472,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.2100000001403,\"pid\":525,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71844.03034973703,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.319,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.2100000001403,\"pid\":526,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[3133568,3680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":64858.94666010928,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.341,\"onlineExpGained\":17532.132475866954,\"onlineMoneyMade\":3133568,\"onlineRunningTime\":1229.2100000001403,\"pid\":527,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,675]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19948.85450115545,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.36600000001,\"onlineExpGained\":5571.8042031955865,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.2100000001403,\"pid\":528,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70157.11250382628,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.386,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.2100000001403,\"pid\":529,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3257184,2896,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":57856.44948822986,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.411,\"onlineExpGained\":16376.97709502227,\"onlineMoneyMade\":3257184,\"onlineRunningTime\":1229.2100000001403,\"pid\":530,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.684729022605,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.433,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.2100000001403,\"pid\":531,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43123.650832695865,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.457,\"onlineExpGained\":11886.515633483936,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.2100000001403,\"pid\":532,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[4141360,2016,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":42442.256244327284,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.479,\"onlineExpGained\":12183.678524321009,\"onlineMoneyMade\":4141360,\"onlineRunningTime\":1229.2100000001403,\"pid\":533,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.52426273371,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.503,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.0100000001403,\"pid\":534,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":30286.578592163845,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.525,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.0100000001403,\"pid\":535,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[6824384,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":37417.61109695665,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.54999999999,\"onlineExpGained\":10962.00886199072,\"onlineMoneyMade\":6824384,\"onlineRunningTime\":1229.0100000001403,\"pid\":536,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.573,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.0100000001403,\"pid\":537,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.6976723675416,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.596,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.0100000001403,\"pid\":538,\"ramUsage\":1.95,\"server\":\"odin-20\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[4536192,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4464.169345162687,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.618,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":4536192,\"onlineRunningTime\":1229.0100000001403,\"pid\":539,\"ramUsage\":1.7,\"server\":\"odin-20\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-20\",\"moduleSequenceNumber\":779,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-20\",\"moduleSequenceNumber\":780,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-20\",\"moduleSequenceNumber\":781,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-20\",\"moduleSequenceNumber\":782,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-21\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-21\",\"httpPortOpen\":false,\"ip\":\"7.6.2.0\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,840]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10217.307738412004,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.64199999999,\"onlineExpGained\":2814.2533857465987,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.0100000001403,\"pid\":540,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34836.72563224713,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.663,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.0100000001403,\"pid\":541,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[4447776,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50059.80744340627,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.687,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":4447776,\"onlineRunningTime\":1229.0100000001403,\"pid\":542,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,870]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":20107.536588700914,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.708,\"onlineExpGained\":5657.624352375468,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.0100000001403,\"pid\":543,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3465,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80539.46671583896,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.733,\"onlineExpGained\":22532.952162047088,\"onlineMoneyMade\":0,\"onlineRunningTime\":1229.0100000001403,\"pid\":544,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2414976,4080,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":57903.79011387614,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.755,\"onlineExpGained\":16179.505044494466,\"onlineMoneyMade\":2414976,\"onlineRunningTime\":1229.0100000001403,\"pid\":545,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19362.583513567068,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.775,\"onlineExpGained\":5364.988610011221,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.8100000001402,\"pid\":546,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71844.36791725902,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.8,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.8100000001402,\"pid\":547,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2923744,3632,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":66323.84518315646,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.821,\"onlineExpGained\":17193.975618023833,\"onlineMoneyMade\":2923744,\"onlineRunningTime\":1228.8100000001402,\"pid\":548,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,675]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19948.947562323494,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.845,\"onlineExpGained\":5571.8042031955865,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.8100000001402,\"pid\":549,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70157.44077595728,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.86300000001,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.8100000001402,\"pid\":550,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[3044496,2944,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":56903.228286200116,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.891,\"onlineExpGained\":16476.031391967972,\"onlineMoneyMade\":3044496,\"onlineRunningTime\":1228.8100000001402,\"pid\":551,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.746276822738,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.91,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.8100000001402,\"pid\":552,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1440,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":43123.85211412271,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.937,\"onlineExpGained\":11886.515633483936,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.8100000001402,\"pid\":553,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[4082688,1968,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":40449.45309696112,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.956,\"onlineExpGained\":11490.298445701119,\"onlineMoneyMade\":4082688,\"onlineRunningTime\":1228.8100000001402,\"pid\":554,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.570823412349,\"offlineMoneyMade\":0,\"offlineRunningTime\":81810.98300000001,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.6100000001402,\"pid\":555,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":30286.717784087363,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.003,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.6100000001402,\"pid\":556,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[6407088,1680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":36941.038949416,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.031,\"onlineExpGained\":10862.954565045022,\"onlineMoneyMade\":6407088,\"onlineRunningTime\":1228.6100000001402,\"pid\":557,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.05,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.6100000001402,\"pid\":558,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.717935941777,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.076,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.6100000001402,\"pid\":559,\"ramUsage\":1.95,\"server\":\"odin-21\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[4319616,48,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":4464.19448325228,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.097,\"onlineExpGained\":864.5791674207937,\"onlineMoneyMade\":4319616,\"onlineRunningTime\":1228.6100000001402,\"pid\":560,\"ramUsage\":1.7,\"server\":\"odin-21\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-21\",\"moduleSequenceNumber\":783,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-21\",\"moduleSequenceNumber\":784,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-21\",\"moduleSequenceNumber\":785,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-21\",\"moduleSequenceNumber\":786,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-22\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-22\",\"httpPortOpen\":false,\"ip\":\"73.6.2.9\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,840]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10217.355745442726,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.128,\"onlineExpGained\":2814.2533857465987,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.6100000001402,\"pid\":561,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34836.88962951288,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.14600000001,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.6100000001402,\"pid\":562,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[5630592,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50060.0431743529,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.17199999999,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":5630592,\"onlineRunningTime\":1228.6100000001402,\"pid\":563,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19638.145945139186,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.194,\"onlineExpGained\":5560.079104920719,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.4100000001401,\"pid\":564,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3465,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80539.84468335092,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.219,\"onlineExpGained\":22532.952162047088,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.4100000001401,\"pid\":565,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2250192,4080,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":58127.02692143444,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.242,\"onlineExpGained\":16101.46884653067,\"onlineMoneyMade\":2250192,\"onlineRunningTime\":1228.4100000001401,\"pid\":566,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19362.675538024472,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.265,\"onlineExpGained\":5364.988610011221,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.4100000001401,\"pid\":567,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3060,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":71844.7078624464,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.288,\"onlineExpGained\":19899.23048076886,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.4100000001401,\"pid\":568,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2725904,3680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":65407.455980212966,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.311,\"onlineExpGained\":17141.95148604797,\"onlineMoneyMade\":2725904,\"onlineRunningTime\":1228.4100000001401,\"pid\":569,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,675]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19949.041595117887,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.333,\"onlineExpGained\":5571.8042031955865,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.4100000001401,\"pid\":570,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70157.77771533922,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.356,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.4100000001401,\"pid\":571,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2844608,2976,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54043.0057066243,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.38200000001,\"onlineExpGained\":15881.705610293782,\"onlineMoneyMade\":2844608,\"onlineRunningTime\":1228.4100000001401,\"pid\":572,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.809982837156,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.406,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.21000000014,\"pid\":573,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39548.43706803908,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.427,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.21000000014,\"pid\":574,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[3868848,1984,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39976.166121865455,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.451,\"onlineExpGained\":11292.189851809722,\"onlineMoneyMade\":3868848,\"onlineRunningTime\":1228.21000000014,\"pid\":575,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.618226740393,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.474,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.21000000014,\"pid\":576,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":30286.861644976445,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.496,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.21000000014,\"pid\":577,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[6012608,1696,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":35707.969538483536,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.519,\"onlineExpGained\":10664.845971153623,\"onlineMoneyMade\":6012608,\"onlineRunningTime\":1228.21000000014,\"pid\":578,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.542,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.21000000014,\"pid\":579,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.738537242251,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.56400000001,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.21000000014,\"pid\":580,\"ramUsage\":1.95,\"server\":\"odin-22\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[3701392,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3543.2230270610535,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.587,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":3701392,\"onlineRunningTime\":1228.21000000014,\"pid\":581,\"ramUsage\":1.7,\"server\":\"odin-22\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-22\",\"moduleSequenceNumber\":787,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-22\",\"moduleSequenceNumber\":788,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-22\",\"moduleSequenceNumber\":789,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-22\",\"moduleSequenceNumber\":790,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"odin-23\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"odin-23\",\"httpPortOpen\":false,\"ip\":\"44.0.3.1\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":1009.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,0,855]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10217.403933948122,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.61,\"onlineExpGained\":2864.5079104920737,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.01000000014,\"pid\":582,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[0,0,2880,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":34837.05676768643,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.633,\"onlineExpGained\":9648.868751131191,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.01000000014,\"pid\":583,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\"],\"dataMap\":{\"n00dles\":[6025840,4192,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":50060.27876384235,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.655,\"onlineExpGained\":14044.464515535325,\"onlineMoneyMade\":6025840,\"onlineRunningTime\":1228.01000000014,\"pid\":584,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,0,900]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":21046.701486057933,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.678,\"onlineExpGained\":5852.714847284967,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.01000000014,\"pid\":585,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[0,0,3465,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":80540.22214281472,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.7,\"onlineExpGained\":22532.952162047088,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.01000000014,\"pid\":586,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\"],\"dataMap\":{\"foodnstuff\":[2074400,4096,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":57090.5512076578,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.72399999999,\"onlineExpGained\":15867.360252639275,\"onlineMoneyMade\":2074400,\"onlineRunningTime\":1228.01000000014,\"pid\":587,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,0,825]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19362.766620899285,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.745,\"onlineExpGained\":5364.988610011221,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.01000000014,\"pid\":588,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[0,0,3015,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70182.4746607222,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.76699999999,\"onlineExpGained\":19606.594738404612,\"onlineMoneyMade\":0,\"onlineRunningTime\":1228.01000000014,\"pid\":589,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\"],\"dataMap\":{\"sigma-cosmetics\":[2542256,3680,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":65628.15173046227,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.792,\"onlineExpGained\":17766.241069758347,\"onlineMoneyMade\":2542256,\"onlineRunningTime\":1228.01000000014,\"pid\":590,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,0,660]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":19353.196972292062,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.813,\"onlineExpGained\":5447.986332013463,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.81000000014,\"pid\":591,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[0,0,2340,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":70158.10815428295,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.837,\"onlineExpGained\":19315.587904411386,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.81000000014,\"pid\":592,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\"],\"dataMap\":{\"joesguns\":[2658208,2928,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":54433.99629442874,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.856,\"onlineExpGained\":15749.633214366182,\"onlineMoneyMade\":2658208,\"onlineRunningTime\":1227.81000000014,\"pid\":593,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,0,450]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":13182.871393061878,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.884,\"onlineExpGained\":3714.536135463727,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.81000000014,\"pid\":594,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[0,0,1350,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":39548.6211439409,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.902,\"onlineExpGained\":11143.60840639119,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.81000000014,\"pid\":595,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\"],\"dataMap\":{\"hong-fang-tea\":[3620912,2000,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":41406.60699762954,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.93,\"onlineExpGained\":11589.352742646817,\"onlineMoneyMade\":3620912,\"onlineRunningTime\":1227.81000000014,\"pid\":596,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,0,345]},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":10095.664452078969,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.949,\"onlineExpGained\":2847.8110371888574,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.81000000014,\"pid\":597,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[0,0,1035,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":30287.00086269536,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.975,\"onlineExpGained\":8543.433111566577,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.81000000014,\"pid\":598,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\"],\"dataMap\":{\"harakiri-sushi\":[5794032,1664,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":33908.84860846725,\"offlineMoneyMade\":0,\"offlineRunningTime\":81811.995,\"onlineExpGained\":10169.57448642513,\"onlineMoneyMade\":5794032,\"onlineRunningTime\":1227.81000000014,\"pid\":599,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{},\"filename\":\"weaken.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":81812.02100000001,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.61000000014,\"pid\":600,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":15,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[0,0,45,0]},\"filename\":\"grow.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3453.758631953369,\"offlineMoneyMade\":0,\"offlineRunningTime\":81812.04000000001,\"onlineExpGained\":607.9072270927455,\"onlineMoneyMade\":0,\"onlineRunningTime\":1227.61000000014,\"pid\":601,\"ramUsage\":1.95,\"server\":\"odin-23\",\"threads\":45,\"dependencies\":[]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\"],\"dataMap\":{\"iron-gym\":[3518336,32,0,0]},\"filename\":\"hacker.script\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":3543.2427615308516,\"offlineMoneyMade\":0,\"offlineRunningTime\":81812.066,\"onlineExpGained\":702.4705735293949,\"onlineMoneyMade\":3518336,\"onlineRunningTime\":1227.61000000014,\"pid\":602,\"ramUsage\":1.7,\"server\":\"odin-23\",\"threads\":16,\"dependencies\":[]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nminSecurity = getServerMinSecurityLevel(targetName) \\r\\nsecurityThreshold = minSecurity + (minSecurity * .1)\\r\\nwhile (true) {\\r\\n\\tif (getServerSecurityLevel(targetName) > securityThreshold) {\\r\\n\\t\\tweaken(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"weaken.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-23\",\"moduleSequenceNumber\":791,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\nmoneyThreshold = getServerMaxMoney(targetName) * .9\\r\\n\\r\\nsleep(100)\\r\\nwhile (true) {\\r\\n\\tif (getServerMoneyAvailable(targetName) < moneyThreshold ) {\\r\\n\\t\\tgrow(targetName, {threads: threads})\\r\\n\\t} else {\\r\\n\\t\\tsleep(1000)\\r\\n\\t}\\r\\n}\",\"filename\":\"grow.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"odin-23\",\"moduleSequenceNumber\":792,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"targetName = args[0]\\r\\nthreads = args[1]\\r\\n\\r\\nsleep(200)\\r\\nwhile (true) {\\r\\n\\thack(targetName, {threads: threads})\\r\\n}\",\"filename\":\"hacker.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.7,\"server\":\"odin-23\",\"moduleSequenceNumber\":793,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"hostName = args[0]\\r\\ntargetName = args[1]\\r\\n\\r\\nweakenThreads = args[2]\\r\\ngrowThreads = args[3]\\r\\nhackThreads = args[4]\\r\\n\\r\\nexec(\\\"weaken.script\\\", hostName, weakenThreads, targetName) &&\\r\\nexec(\\\"grow.script\\\", hostName, growThreads, targetName) &&\\r\\nexec(\\\"hacker.script\\\", hostName, hackThreads, targetName)\",\"filename\":\"deployHack.script\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.9,\"server\":\"odin-23\",\"moduleSequenceNumber\":794,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.0383,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.0248,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":13021.354221820271,\"favor\":0.002,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.0405,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":35.8436,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":5.5857,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":2.9365,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":33.6494809752057,\"favor\":0.0228,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.002,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"NeuroFlux Governor\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"NeuroFlux Governor\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"NeuroFlux Governor\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"NeuroFlux Governor\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"The Black Hand\",\"playerReputation\":176385.05168312902}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"NeuroFlux Governor\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":1,\"isBanned\":false,\"isMember\":true,\"name\":\"NiteSec\",\"playerReputation\":186875.5675543673}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":27.2161,\"isBanned\":false,\"isMember\":true,\"name\":\"Aevum\",\"playerReputation\":20895.324994919898}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"NeuroFlux Governor\",\"CashRoot Starter Kit\"],\"favor\":52.9436,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":47428.00762132713}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NeuroFlux Governor\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"NeuroFlux Governor\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\",\"NeuroFlux Governor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"HemoRecirculator\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":1.6257000000000001,\"isBanned\":false,\"isMember\":true,\"name\":\"Tetrads\",\"playerReputation\":7987.928577741463}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"NeuroFlux Governor\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":28.4895,\"isBanned\":false,\"isMember\":true,\"name\":\"Slum Snakes\",\"playerReputation\":63497.75551202167}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\",\"NeuroFlux Governor\"],\"favor\":31.4213,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":24878.663125395793}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"NeuroFlux Governor\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":1.6478000000000002,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":7988.971673883456}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"NeuroFlux Governor\",\"Neurotrainer I\"],\"favor\":66.5443,\"isBanned\":false,\"isMember\":true,\"name\":\"CyberSec\",\"playerReputation\":55313.48852572962}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","MessagesSave":"{\"j0.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j0.msg\",\"msg\":\"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R\",\"recvd\":true}},\"j1.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j1.msg\",\"msg\":\"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R\",\"recvd\":true}},\"j2.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j2.msg\",\"msg\":\"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R\",\"recvd\":true}},\"j3.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j3.msg\",\"msg\":\"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R\",\"recvd\":true}},\"j4.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"j4.msg\",\"msg\":\"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R\",\"recvd\":false}},\"csec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"csec-test.msg\",\"msg\":\"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec\",\"recvd\":true}},\"nitesec-test.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"nitesec-test.msg\",\"msg\":\"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec\",\"recvd\":true}},\"19dfj3l1nd.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"19dfj3l1nd.msg\",\"msg\":\"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z\",\"recvd\":false}},\"icarus.msg\":{\"ctor\":\"Message\",\"data\":{\"filename\":\"icarus.msg\",\"msg\":\"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\"recvd\":false}}}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":16586.754668322446,\"lastPrice\":16562.867367453244,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.46,\"b\":false,\"otlkMag\":17.46170947623613,\"otlkMagForecast\":30.985235177097568,\"cap\":224302750,\"spreadPerc\":0.1,\"shareTxForMovement\":57329,\"shareTxUntilMovement\":57329,\"totalShares\":125200000,\"maxShares\":25000000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":40959.53265287339,\"lastPrice\":40908.22945951838,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.4,\"b\":true,\"otlkMag\":21.226290959252246,\"otlkMagForecast\":70.09755185562683,\"cap\":697947830,\"spreadPerc\":0.1,\"shareTxForMovement\":63642,\"shareTxUntilMovement\":63402,\"totalShares\":84800000,\"maxShares\":17000000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":22796.68139549675,\"lastPrice\":22846.712880497238,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":15.8588349269738,\"otlkMagForecast\":36.490159797866426,\"cap\":491751359,\"spreadPerc\":0.6,\"shareTxForMovement\":74866,\"shareTxUntilMovement\":74866,\"totalShares\":76700000,\"maxShares\":15300000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":26464.765330639224,\"lastPrice\":26518.698398876008,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.65,\"b\":true,\"otlkMag\":10.840748198992843,\"otlkMagForecast\":60.847825657508956,\"cap\":438432018,\"spreadPerc\":0.3,\"shareTxForMovement\":31919,\"shareTxUntilMovement\":31919,\"totalShares\":82600000,\"maxShares\":16500000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":33643.102158069756,\"lastPrice\":33572.578760335535,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.67,\"b\":true,\"otlkMag\":10.270744958394005,\"otlkMagForecast\":60.36063207083353,\"cap\":110049031,\"spreadPerc\":0.3,\"shareTxForMovement\":81100,\"shareTxUntilMovement\":81100,\"totalShares\":53000000,\"maxShares\":10600000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":68097.41960967111,\"lastPrice\":68319.46293302103,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.04,\"b\":false,\"otlkMag\":14.192640168487895,\"otlkMagForecast\":37.085757070256754,\"cap\":1197871215,\"spreadPerc\":0.2,\"shareTxForMovement\":76885,\"shareTxUntilMovement\":76885,\"totalShares\":27300000,\"maxShares\":5500000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":28704.880032699635,\"lastPrice\":28630.376156167116,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.83,\"b\":false,\"otlkMag\":8.17459637300387,\"otlkMagForecast\":41.16925392164849,\"cap\":231359786,\"spreadPerc\":0.1,\"shareTxForMovement\":85143,\"shareTxUntilMovement\":85143,\"totalShares\":72500000,\"maxShares\":14500000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":76872.45926305049,\"lastPrice\":76560.41131280558,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.3,\"b\":true,\"otlkMag\":14.005064345766758,\"otlkMagForecast\":64.7943751267516,\"cap\":75761213,\"spreadPerc\":0.3,\"shareTxForMovement\":66069,\"shareTxUntilMovement\":66069,\"totalShares\":67500000,\"maxShares\":13500000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":35085.00807082141,\"lastPrice\":34989.567823782236,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.87,\"b\":true,\"otlkMag\":6.857730995749127,\"otlkMagForecast\":56.48110348123885,\"cap\":360517964,\"spreadPerc\":0.5,\"shareTxForMovement\":63724,\"shareTxUntilMovement\":63724,\"totalShares\":59500000,\"maxShares\":11900000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":25583.694663137594,\"lastPrice\":25528.468156815088,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.69,\"b\":true,\"otlkMag\":9.924299546211705,\"otlkMagForecast\":59.594875504040246,\"cap\":150737577,\"spreadPerc\":0.9,\"shareTxForMovement\":90550,\"shareTxUntilMovement\":90550,\"totalShares\":48800000,\"maxShares\":9800000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":4652.682587194353,\"lastPrice\":4660.851517225344,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.56,\"b\":false,\"otlkMag\":9.20854126780116,\"otlkMagForecast\":40.55705089043258,\"cap\":160441975,\"spreadPerc\":1,\"shareTxForMovement\":37827,\"shareTxUntilMovement\":37827,\"totalShares\":72700000,\"maxShares\":14500000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":9263.994952201952,\"lastPrice\":9285.197834073337,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":9.181595470828157,\"otlkMagForecast\":41.87469062100661,\"cap\":274084723,\"spreadPerc\":0.8,\"shareTxForMovement\":102638,\"shareTxUntilMovement\":102638,\"totalShares\":73000000,\"maxShares\":14600000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":13285.568485613097,\"lastPrice\":13256.474728279705,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":5.780063414544541,\"otlkMagForecast\":55.38854618396385,\"cap\":229427496,\"spreadPerc\":0.3,\"shareTxForMovement\":103641,\"shareTxUntilMovement\":103641,\"totalShares\":59100000,\"maxShares\":11800000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":17875.223428300214,\"lastPrice\":17842.218818941277,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.59,\"b\":true,\"otlkMag\":9.154666933222128,\"otlkMagForecast\":59.26912621102589,\"cap\":457057671,\"spreadPerc\":0.9,\"shareTxForMovement\":86830,\"shareTxUntilMovement\":86830,\"totalShares\":47800000,\"maxShares\":9600000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":7659.246252893076,\"lastPrice\":7645.343566576815,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":true,\"otlkMag\":6.369838309511427,\"otlkMagForecast\":56.36590413902286,\"cap\":73243206,\"spreadPerc\":0.8,\"shareTxForMovement\":93290,\"shareTxUntilMovement\":93290,\"totalShares\":56800000,\"maxShares\":11400000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":8749.537223438414,\"lastPrice\":8770.111286677258,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":true,\"otlkMag\":1.6318169381691967,\"otlkMagForecast\":51.77262960047683,\"cap\":221832107,\"spreadPerc\":0.9,\"shareTxForMovement\":74760,\"shareTxUntilMovement\":74760,\"totalShares\":57000000,\"maxShares\":11400000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":19182.415722672613,\"lastPrice\":19228.724972718137,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":false,\"otlkMag\":8.22736335363326,\"otlkMagForecast\":41.57902147685514,\"cap\":353295577,\"spreadPerc\":1,\"shareTxForMovement\":101637,\"shareTxUntilMovement\":101637,\"totalShares\":41400000,\"maxShares\":8300000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":29671.679243252624,\"lastPrice\":29617.820673443635,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.58,\"b\":true,\"otlkMag\":9.691252644449968,\"otlkMagForecast\":60.27415356771772,\"cap\":253947942,\"spreadPerc\":0.8,\"shareTxForMovement\":111343,\"shareTxUntilMovement\":111343,\"totalShares\":24500000,\"maxShares\":4900000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":22923.53755959525,\"lastPrice\":22976.003591955818,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":6.473427713513253,\"otlkMagForecast\":44.772811286133425,\"cap\":295376191,\"spreadPerc\":0.5,\"shareTxForMovement\":79589,\"shareTxUntilMovement\":79589,\"totalShares\":32100000,\"maxShares\":6400000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":1976.7520521431697,\"lastPrice\":1992.2461370262588,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.5,\"b\":false,\"otlkMag\":5.749120314712242,\"otlkMagForecast\":43.29067396708329,\"cap\":101833291,\"spreadPerc\":0.5,\"shareTxForMovement\":47385,\"shareTxUntilMovement\":47385,\"totalShares\":78400000,\"maxShares\":15700000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":4010.1866615821555,\"lastPrice\":3995.6548526293163,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.16,\"b\":true,\"otlkMag\":6.510968101041041,\"otlkMagForecast\":59.06839237774888,\"cap\":145924042,\"spreadPerc\":0.5,\"shareTxForMovement\":105034,\"shareTxUntilMovement\":105034,\"totalShares\":44100000,\"maxShares\":8800000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":7452.305261683936,\"lastPrice\":7464.922320276384,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.54,\"b\":true,\"otlkMag\":1.376089075317872,\"otlkMagForecast\":50.68119930068748,\"cap\":28073637,\"spreadPerc\":0.7,\"shareTxForMovement\":124942,\"shareTxUntilMovement\":124942,\"totalShares\":28600000,\"maxShares\":5700000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":11350.065453639687,\"lastPrice\":11412.339937768162,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.75,\"b\":true,\"otlkMag\":7.896529600165938,\"otlkMagForecast\":55.26453653779315,\"cap\":109180514,\"spreadPerc\":1.6,\"shareTxForMovement\":35525,\"shareTxUntilMovement\":35525,\"totalShares\":35700000,\"maxShares\":7100000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":4403.828435042087,\"lastPrice\":4381.163881591203,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.65,\"b\":false,\"otlkMag\":5.519046148755853,\"otlkMagForecast\":45.27256819892683,\"cap\":133362435,\"spreadPerc\":0.5,\"shareTxForMovement\":66313,\"shareTxUntilMovement\":66313,\"totalShares\":35200000,\"maxShares\":7000000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":5865.9075639857165,\"lastPrice\":5883.746981635651,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.97,\"b\":false,\"otlkMag\":5.211162684181533,\"otlkMagForecast\":44.26675724592223,\"cap\":23655107,\"spreadPerc\":1,\"shareTxForMovement\":110066,\"shareTxUntilMovement\":110066,\"totalShares\":54700000,\"maxShares\":10900000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":2489.3716318237907,\"lastPrice\":2472.7806119261218,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.14,\"b\":false,\"otlkMag\":5.1405671798326,\"otlkMagForecast\":44.26401577870158,\"cap\":20263421,\"spreadPerc\":1.2,\"shareTxForMovement\":38414,\"shareTxUntilMovement\":38414,\"totalShares\":12100000,\"maxShares\":2400000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":1237.7774127437153,\"lastPrice\":1233.677437717978,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.06,\"b\":false,\"otlkMag\":2.973582734186422,\"otlkMagForecast\":45.220679544096036,\"cap\":62784249,\"spreadPerc\":0.6,\"shareTxForMovement\":30877,\"shareTxUntilMovement\":30877,\"totalShares\":22700000,\"maxShares\":4500000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":771.0774903661428,\"lastPrice\":769.3167239038579,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.73,\"b\":false,\"otlkMag\":6.089211402107206,\"otlkMagForecast\":41.40988028361001,\"cap\":4146969,\"spreadPerc\":0.7,\"shareTxForMovement\":175587,\"shareTxUntilMovement\":175587,\"totalShares\":70500000,\"maxShares\":14100000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":1161.125314931939,\"lastPrice\":1153.2071387469623,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.19,\"b\":false,\"otlkMag\":5.042802598627149,\"otlkMagForecast\":48.41112398990851,\"cap\":54722733,\"spreadPerc\":1.1,\"shareTxForMovement\":59995,\"shareTxUntilMovement\":59995,\"totalShares\":13200000,\"maxShares\":2600000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":1417.6375218874878,\"lastPrice\":1406.4810180198936,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.53,\"b\":false,\"otlkMag\":8.91790532090436,\"otlkMagForecast\":42.07345783834941,\"cap\":26794538,\"spreadPerc\":0.8,\"shareTxForMovement\":51515,\"shareTxUntilMovement\":51515,\"totalShares\":28800000,\"maxShares\":5800000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":1295.357394114805,\"lastPrice\":1301.571158236974,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.53,\"b\":false,\"otlkMag\":9.94327148721618,\"otlkMagForecast\":41.1295226637289,\"cap\":24152066,\"spreadPerc\":0.5,\"shareTxForMovement\":54604,\"shareTxUntilMovement\":54604,\"totalShares\":85200000,\"maxShares\":17000000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":30365.949186305752,\"lastPrice\":30441.161279608623,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":true,\"otlkMag\":9.797796622535959,\"otlkMagForecast\":58.03932861084827,\"cap\":313250777,\"spreadPerc\":0.6,\"shareTxForMovement\":148878,\"shareTxUntilMovement\":148878,\"totalShares\":15300000,\"maxShares\":3100000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":28159.115669769668,\"lastPrice\":28106.2434215769,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.6,\"b\":true,\"otlkMag\":9.968507335554722,\"otlkMagForecast\":60.63030652935245,\"cap\":71685549,\"spreadPerc\":0.9,\"shareTxForMovement\":154806,\"shareTxUntilMovement\":154806,\"totalShares\":19200000,\"maxShares\":3800000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":1166319,\"lastUpdate\":1645643034386,\"ticksUntilCycle\":40}","SettingsSave":"{\"ActiveScriptsServerPageSize\":20,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":1,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":false,\"SuppressFactionInvites\":false,\"SuppressMessages\":false,\"SuppressTravelConfirmation\":false,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":false,\"SuppressSavedGameToast\":false,\"UseIEC60027_2\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-336,\"y\":250,\"opened\":false}}","VersionSave":"10","AllGangsSave":"","LastExportBonus":"1645573088566","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}","SaveTimestamp":"1645643034481"}}